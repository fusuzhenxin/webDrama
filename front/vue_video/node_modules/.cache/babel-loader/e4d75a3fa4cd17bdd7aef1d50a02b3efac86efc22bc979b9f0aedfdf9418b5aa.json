{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute } from 'vue-router';\n\n// 使用 ref 创建响应式数据\n\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const videoData = ref(null);\n    const videoPlayer = ref(null);\n\n    // 获取路由器实例\n    const route = useRoute();\n\n    // 从路由参数中获取视频 ID\n    const videoId = route.params.id;\n    console.log(\"=====\", videoId);\n    // 定义方法来加载视频数据\n    const loadVideoData = async () => {\n      try {\n        // 发起请求获取视频数据\n        const res = await request.get(`/file/${videoId}`);\n        // 如果请求成功，更新视频数据\n        videoData.value = res.data.data;\n        console.log(\"_----\", videoData.value);\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading video data:', error);\n      }\n    };\n\n    // 在组件挂载时加载视频数据\n    onMounted(() => {\n      loadVideoData();\n    });\n\n    // 播放指定集数的视频\n    const playEpisode = episode => {\n      // 更新视频播放器的源\n      if (videoPlayer.value) {\n        videoPlayer.value.src = episode.url;\n        videoPlayer.value.load();\n        videoPlayer.value.play();\n      }\n    };\n    const __returned__ = {\n      videoData,\n      videoPlayer,\n      route,\n      videoId,\n      loadVideoData,\n      playEpisode,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","request","useRoute","videoData","videoPlayer","route","videoId","params","id","console","log","loadVideoData","res","get","value","data","error","playEpisode","episode","src","url","load","play"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n  <!-- 在加载数据期间显示加载状态 -->\r\n  <div v-if=\"!videoData\">Loading...</div>\r\n  <!-- 显示视频数据 -->\r\n  <div v-else>\r\n    <h1>{{ videoData.name }}</h1>\r\n    <!-- 显示视频播放器 -->\r\n    <video ref=\"videoPlayer\" controls>\r\n      <source :src=\"videoData.url\" type=\"video/mp4\">\r\n      Your browser does not support the video tag.\r\n    </video>\r\n    <!-- 显示不同集数 -->\r\n    <button v-for=\"(episode, index) in videoData.diversity\" :key=\"index\" @click=\"playEpisode(index)\">\r\n      Episode {{ index + 1 }}\r\n    </button>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\n// 使用 ref 创建响应式数据\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\n\r\n// 获取路由器实例\r\nconst route = useRoute();\r\n\r\n// 从路由参数中获取视频 ID\r\nconst videoId = route.params.id;\r\n\r\nconsole.log(\"=====\",videoId)\r\n// 定义方法来加载视频数据\r\nconst loadVideoData = async () => {\r\n  try {\r\n    // 发起请求获取视频数据\r\n    const res = await request.get(`/file/${videoId}`);\r\n    // 如果请求成功，更新视频数据\r\n    videoData.value = res.data.data;\r\n    console.log(\"_----\", videoData.value)\r\n  } catch (error) {\r\n    // 捕获并处理请求错误\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\n// 在组件挂载时加载视频数据\r\nonMounted(() => {\r\n  loadVideoData();\r\n});\r\n\r\n// 播放指定集数的视频\r\nconst playEpisode = (episode) => {\r\n  // 更新视频播放器的源\r\n  if (videoPlayer.value) {\r\n    videoPlayer.value.src = episode.url;\r\n    videoPlayer.value.load();\r\n    videoPlayer.value.play();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAoBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,QAAQ,QAAQ,YAAY;;AAErC;;;;;;;;IACA,MAAMC,SAAS,GAAGJ,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMK,WAAW,GAAGL,GAAG,CAAC,IAAI,CAAC;;IAE7B;IACA,MAAMM,KAAK,GAAGH,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMI,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,EAAE;IAE/BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,OAAO,CAAC;IAC5B;IACA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,GAAG,GAAG,MAAMX,OAAO,CAACY,GAAG,CAAE,SAAQP,OAAQ,EAAC,CAAC;QACjD;QACAH,SAAS,CAACW,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACA,IAAI;QAC/BN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEP,SAAS,CAACW,KAAK,CAAC;MACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd;QACAP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;;IAED;IACAhB,SAAS,CAAC,MAAM;MACdW,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;;IAEF;IACA,MAAMM,WAAW,GAAIC,OAAO,IAAK;MAC/B;MACA,IAAId,WAAW,CAACU,KAAK,EAAE;QACrBV,WAAW,CAACU,KAAK,CAACK,GAAG,GAAGD,OAAO,CAACE,GAAG;QACnChB,WAAW,CAACU,KAAK,CAACO,IAAI,CAAC,CAAC;QACxBjB,WAAW,CAACU,KAAK,CAACQ,IAAI,CAAC,CAAC;MAC1B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}