{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { getProductById } from '@/api/products';\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const productId = ref(null);\n    const product = ref(null);\n\n    // 获取路由参数\n    const route = useRoute();\n    productId.value = route.params.id;\n\n    // 查找商品数据\n    onMounted(async () => {\n      try {\n        // 发起异步请求获取产品数据\n        product.value = await getProductById(productId.value);\n        // 如果产品数据获取成功，初始化视频播放器\n        if (product.value) {\n          initializeVideoPlayer();\n        }\n      } catch (error) {\n        console.error('Error loading product:', error);\n      }\n    });\n\n    // 初始化视频播放器\n    const videoPlayer = ref(null);\n    function initializeVideoPlayer() {\n      if (videoPlayer.value) {\n        import('video.js').then(videojs => {\n          videojs.default(videoPlayer.value);\n        });\n      }\n    }\n    const __returned__ = {\n      productId,\n      product,\n      route,\n      videoPlayer,\n      initializeVideoPlayer,\n      ref,\n      onMounted,\n      get getProductById() {\n        return getProductById;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","getProductById","productId","product","route","useRoute","value","params","id","initializeVideoPlayer","error","console","videoPlayer","then","videojs","default"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n  <h1>22</h1>\r\n  <div class=\"image-wrapper\">\r\n    <!-- 视频播放器 -->\r\n    <div v-if=\"product\">\r\n      <video\r\n          ref=\"videoPlayer\"\r\n          class=\"video-js vjs-default-skin\"\r\n          controls\r\n          preload=\"auto\"\r\n          :poster=\"product.cover\"\r\n          data-setup=\"{}\"\r\n      >\r\n        <source :src=\"product.url\" type=\"video/mp4\" />\r\n        <!-- 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 -->\r\n      </video>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { getProductById } from '@/api/products';\r\n\r\nconst productId = ref(null);\r\nconst product = ref(null);\r\n\r\n// 获取路由参数\r\nconst route = useRoute();\r\nproductId.value = route.params.id;\r\n\r\n// 查找商品数据\r\nonMounted(async () => {\r\n  try {\r\n    // 发起异步请求获取产品数据\r\n    product.value = await getProductById(productId.value);\r\n    // 如果产品数据获取成功，初始化视频播放器\r\n    if (product.value) {\r\n      initializeVideoPlayer();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading product:', error);\r\n  }\r\n});\r\n\r\n// 初始化视频播放器\r\nconst videoPlayer = ref(null);\r\nfunction initializeVideoPlayer() {\r\n  if (videoPlayer.value) {\r\n    import('video.js').then(videojs => {\r\n      videojs.default(videoPlayer.value);\r\n    });\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 这里可以添加样式 */\r\n</style>\r\n"],"mappings":"AAqBA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,cAAc,QAAQ,gBAAgB;;;;;;;IAE/C,MAAMC,SAAS,GAAGH,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMI,OAAO,GAAGJ,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,MAAMK,KAAK,GAAGC,QAAQ,CAAC,CAAC;IACxBH,SAAS,CAACI,KAAK,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE;;IAEjC;IACAR,SAAS,CAAC,YAAY;MACpB,IAAI;QACF;QACAG,OAAO,CAACG,KAAK,GAAG,MAAML,cAAc,CAACC,SAAS,CAACI,KAAK,CAAC;QACrD;QACA,IAAIH,OAAO,CAACG,KAAK,EAAE;UACjBG,qBAAqB,CAAC,CAAC;QACzB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC,CAAC;;IAEF;IACA,MAAME,WAAW,GAAGb,GAAG,CAAC,IAAI,CAAC;IAC7B,SAASU,qBAAqBA,CAAA,EAAG;MAC/B,IAAIG,WAAW,CAACN,KAAK,EAAE;QACrB,MAAM,CAAC,UAAU,CAAC,CAACO,IAAI,CAACC,OAAO,IAAI;UACjCA,OAAO,CAACC,OAAO,CAACH,WAAW,CAACN,KAAK,CAAC;QACpC,CAAC,CAAC;MACJ;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}