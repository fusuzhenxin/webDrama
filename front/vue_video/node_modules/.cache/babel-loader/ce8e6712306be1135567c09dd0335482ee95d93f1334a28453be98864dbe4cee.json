{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  controls: \"\"\n};\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 在加载数据期间显示加载状态 \"), !$setup.videoData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\")) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 显示视频数据 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.videoData.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.videoData.cover), 1 /* TEXT */), _createCommentVNode(\" 显示视频播放器 \"), _createElementVNode(\"video\", _hoisted_2, [_createElementVNode(\"source\", {\n    src: $setup.videoData.url,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createTextVNode(\" Your browser does not support the video tag. \")]), _createCommentVNode(\" 其他视频数据的展示 \")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["key","controls","_createElementBlock","_createCommentVNode","$setup","videoData","_hoisted_1","_Fragment","_createElementVNode","_toDisplayString","name","cover","_hoisted_2","src","url","type","_hoisted_3","_createTextVNode"],"sources":["F:\\video\\vue_video\\src\\views\\VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 在加载数据期间显示加载状态 -->\r\n    <div v-if=\"!videoData\">Loading...</div>\r\n    <!-- 显示视频数据 -->\r\n    <div v-else>\r\n      <h1>{{ videoData.name }}</h1>\r\n      <p>{{ videoData.cover }}</p>\r\n      <!-- 显示视频播放器 -->\r\n      <video controls>\r\n        <source :src=\"videoData.url\" type=\"video/mp4\">\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <!-- 其他视频数据的展示 -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\n// 使用 ref 创建响应式数据\r\nconst videoData = ref(null);\r\n\r\n// 获取路由器实例\r\nconst route = useRoute();\r\n\r\n// 从路由参数中获取视频 ID\r\nconst videoId = route.params.id;\r\n\r\n// 定义方法来加载视频数据\r\nconst loadVideoData = async () => {\r\n  try {\r\n    // 发起请求获取视频数据\r\n    const res = await request.get(`/file/${videoId}`);\r\n    // 如果请求成功，更新视频数据\r\n    videoData.value = res.data.data;\r\n  } catch (error) {\r\n    // 捕获并处理请求错误\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\n// 在组件挂载时加载视频数据\r\nonMounted(() => {\r\n  loadVideoData();\r\n});\r\n</script>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;EASaC,QAAQ,EAAR;AAAQ;mBATrB;;uBACEC,mBAAA,CAcM,cAbJC,mBAAA,mBAAsB,E,CACVC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAAuC,OAH3CI,UAAA,EAG2B,YAAU,M,cAEjCJ,mBAAA,CASMK,SAAA;IAdVP,GAAA;EAAA,IAIIG,mBAAA,YAAe,EACfK,mBAAA,CASM,cARJA,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBL,MAAA,CAAAC,SAAS,CAACK,IAAI,kBACrBF,mBAAA,CAA4B,WAAAC,gBAAA,CAAtBL,MAAA,CAAAC,SAAS,CAACM,KAAK,kBACrBR,mBAAA,aAAgB,EAChBK,mBAAA,CAGQ,SAHRI,UAGQ,GAFNJ,mBAAA,CAA8C;IAArCK,GAAG,EAAET,MAAA,CAAAC,SAAS,CAACS,GAAG;IAAEC,IAAI,EAAC;0BAV1CC,UAAA,GAAAC,gBAAA,CAUsD,gDAEhD,E,GACAd,mBAAA,eAAkB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}