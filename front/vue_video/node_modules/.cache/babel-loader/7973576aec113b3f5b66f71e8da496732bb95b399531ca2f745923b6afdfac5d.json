{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\n\n// 创建响应式变量来存储视频信息\n\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const videoName = ref('');\n    const videoUrl = ref('');\n    const route = useRoute();\n\n    // 加载视频数据的函数\n    const loadVideo = () => {\n      const id = route.params.id;\n      const productsString = route.params.Products;\n      const products = JSON.parse(decodeURIComponent(productsString));\n      const foundVideo = products.find(product => product.id == id); // 注意这里使用 == 而不是 ===\n      if (foundVideo) {\n        videoName.value = foundVideo.name;\n        videoUrl.value = foundVideo.url;\n      } else {\n        console.error('Video not found');\n      }\n    };\n    onMounted(() => {\n      loadVideo();\n    });\n    const __returned__ = {\n      videoName,\n      videoUrl,\n      route,\n      loadVideo,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","videoName","videoUrl","route","loadVideo","id","params","productsString","Products","products","JSON","parse","decodeURIComponent","foundVideo","find","product","value","name","url","console","error"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"video-detail\">\r\n    <h1>{{ videoName }}</h1>\r\n    <video :src=\"videoUrl\" controls autoplay></video>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\n// 创建响应式变量来存储视频信息\r\nconst videoName = ref('');\r\nconst videoUrl = ref('');\r\n\r\nconst route = useRoute();\r\n\r\n// 加载视频数据的函数\r\nconst loadVideo = () => {\r\n  const id = route.params.id;\r\n  const productsString = route.params.Products;\r\n  const products = JSON.parse(decodeURIComponent(productsString));\r\n  const foundVideo = products.find(product => product.id == id); // 注意这里使用 == 而不是 ===\r\n  if (foundVideo) {\r\n    videoName.value = foundVideo.name;\r\n    videoUrl.value = foundVideo.url;\r\n  } else {\r\n    console.error('Video not found');\r\n  }\r\n};\r\n\r\n\r\nonMounted(() => {\r\n  loadVideo();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.video-detail {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\nvideo {\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"AAQA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;;AAErC;;;;;;;;IACA,MAAMC,SAAS,GAAGH,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IAExB,MAAMK,KAAK,GAAGH,QAAQ,CAAC,CAAC;;IAExB;IACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;MACtB,MAAMC,EAAE,GAAGF,KAAK,CAACG,MAAM,CAACD,EAAE;MAC1B,MAAME,cAAc,GAAGJ,KAAK,CAACG,MAAM,CAACE,QAAQ;MAC5C,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,kBAAkB,CAACL,cAAc,CAAC,CAAC;MAC/D,MAAMM,UAAU,GAAGJ,QAAQ,CAACK,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACV,EAAE,IAAIA,EAAE,CAAC,CAAC,CAAC;MAC/D,IAAIQ,UAAU,EAAE;QACdZ,SAAS,CAACe,KAAK,GAAGH,UAAU,CAACI,IAAI;QACjCf,QAAQ,CAACc,KAAK,GAAGH,UAAU,CAACK,GAAG;MACjC,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,iBAAiB,CAAC;MAClC;IACF,CAAC;IAGDrB,SAAS,CAAC,MAAM;MACdK,SAAS,CAAC,CAAC;IACb,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}