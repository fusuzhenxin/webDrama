{"ast":null,"code":"import { ref } from 'vue'; // 引入 ref 函数\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const productCategories = ref([]);\n\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/category/selectLists');\n        if (res.code === '200') {\n          // 如果请求成功，更新商品分类数据\n          productCategories.value = res.data;\n        }\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts,\n      goToProductDetail\n    };\n  }\n};","map":{"version":3,"names":["ref","name","props","msg","String","setup","productCategories","loadProductCategories","res","request","get","code","value","data","error","console","hotProducts","goToProductDetail"],"sources":["F:\\video\\vue_video\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"product-sections\">\n    <br>\n    <h1>热门商品</h1>\n    <div class=\"product-section\">\n      <br>\n      <div class=\"product-list\">\n        <div v-for=\"(product, index) in hotProducts\" :key=\"index\" class=\"product-card\" @click=\"goToProductDetail(product.id)\">\n          <div class=\"image-wrapper\">\n            <img :src=\"product.cover\" :alt=\"product.name\">\n          </div>\n\n          <p>{{ product.name }}</p>\n          <p>{{ product.price }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue'; // 引入 ref 函数\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const productCategories = ref([]);\n\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/category/selectLists');\n\n        if (res.code === '200') {\n          // 如果请求成功，更新商品分类数据\n          productCategories.value = res.data;\n        }\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts,\n      goToProductDetail\n    };\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":"AAsBA,SAASA,GAAE,QAAS,KAAK,EAAE;AAC3B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,iBAAgB,GAAIN,GAAG,CAAC,EAAE,CAAC;;IAEjC;IACA,MAAMO,qBAAoB,GAAI,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,MAAMC,GAAE,GAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QAEtD,IAAIF,GAAG,CAACG,IAAG,KAAM,KAAK,EAAE;UACtB;UACAL,iBAAiB,CAACM,KAAI,GAAIJ,GAAG,CAACK,IAAI;QACpC;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;;IAED;IACAP,qBAAqB,CAAC,CAAC;;IAEvB;IACA,OAAO;MACLS,WAAW;MACXC;IACF,CAAC;EACH;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}