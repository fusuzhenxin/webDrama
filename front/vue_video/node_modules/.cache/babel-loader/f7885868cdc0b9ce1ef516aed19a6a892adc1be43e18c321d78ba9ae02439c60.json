{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const productId = $route.params.id; // 从路由参数中获取产品ID\n\n    // 使用 ref 创建响应式数据\n    const product = ref(null);\n\n    // 定义异步加载产品详情数据的方法\n    const loadProductDetail = async () => {\n      try {\n        // 发起请求获取产品详情数据\n        const res = await request.get(`/product/${productId}`);\n        // 如果请求成功，更新产品详情数据\n        product.value = res.data;\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product detail:', error);\n      }\n    };\n    onMounted(loadProductDetail); // 在组件挂载后加载产品详情数据\n\n    const __returned__ = {\n      productId,\n      product,\n      loadProductDetail,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","request","productId","$route","params","id","product","loadProductDetail","res","get","value","data","error","console"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <h1>{{ product.name }}</h1>\r\n    <img :src=\"product.cover\" :alt=\"product.name\" class=\"product-image\">\r\n    <p>{{ product.description }}</p>\r\n    <!-- 其他产品详情 -->\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\n\r\nconst productId = $route.params.id; // 从路由参数中获取产品ID\r\n\r\n// 使用 ref 创建响应式数据\r\nconst product = ref(null);\r\n\r\n// 定义异步加载产品详情数据的方法\r\nconst loadProductDetail = async () => {\r\n  try {\r\n    // 发起请求获取产品详情数据\r\n    const res = await request.get(`/product/${productId}`);\r\n    // 如果请求成功，更新产品详情数据\r\n    product.value = res.data;\r\n  } catch (error) {\r\n    // 捕获并处理请求错误\r\n    console.error('Error loading product detail:', error);\r\n  }\r\n};\r\n\r\nonMounted(loadProductDetail); // 在组件挂载后加载产品详情数据\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式可以根据需求自行添加 */\r\n.product-detail {\r\n  /* 产品详情页面样式 */\r\n}\r\n.product-image {\r\n  /* 产品图片样式 */\r\n}\r\n</style>\r\n"],"mappings":"AAUA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,OAAO,MAAM,iBAAiB;;;;;;;IAErC,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,CAAC;;IAEpC;IACA,MAAMC,OAAO,GAAGP,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF;QACA,MAAMC,GAAG,GAAG,MAAMP,OAAO,CAACQ,GAAG,CAAE,YAAWP,SAAU,EAAC,CAAC;QACtD;QACAI,OAAO,CAACI,KAAK,GAAGF,GAAG,CAACG,IAAI;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDZ,SAAS,CAACO,iBAAiB,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}