{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 在加载数据期间显示加载状态 \"), !$setup.videoData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\")) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 显示视频数据 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($setup.videoData.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.videoData.description), 1 /* TEXT */), _createCommentVNode(\" 其他视频数据的展示 \")])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["key","_createElementBlock","_createCommentVNode","$setup","videoData","_hoisted_1","_Fragment","_createElementVNode","_toDisplayString","name","description"],"sources":["F:\\video\\vue_video\\src\\views\\VideoDetail.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\n// 使用 ref 创建响应式数据\r\nconst videoData = ref(null);\r\n\r\n// 获取路由器实例\r\nconst route = useRoute();\r\n\r\n// 从路由参数中获取视频 ID\r\nconst videoId = route.params.id;\r\n\r\n// 定义方法来加载视频数据\r\nconst loadVideoData = async () => {\r\n  try {\r\n    // 发起请求获取视频数据\r\n    const res = await request.get(`/file/${videoId}`);\r\n    // 如果请求成功，更新视频数据\r\n    videoData.value = res.data;\r\n  } catch (error) {\r\n    // 捕获并处理请求错误\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\n// 在组件挂载时加载视频数据\r\nonMounted(() => {\r\n  loadVideoData();\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <!-- 在加载数据期间显示加载状态 -->\r\n    <div v-if=\"!videoData\">Loading...</div>\r\n    <!-- 显示视频数据 -->\r\n    <div v-else>\r\n      <h1>{{ videoData.name }}</h1>\r\n      <p>{{ videoData.description }}</p>\r\n      <!-- 其他视频数据的展示 -->\r\n    </div>\r\n  </div>\r\n</template>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;uBAkCEC,mBAAA,CASM,cARJC,mBAAA,mBAAsB,E,CACVC,MAAA,CAAAC,SAAS,I,cAArBH,mBAAA,CAAuC,OApC3CI,UAAA,EAoC2B,YAAU,M,cAEjCJ,mBAAA,CAIMK,SAAA;IA1CVN,GAAA;EAAA,IAqCIE,mBAAA,YAAe,EACfK,mBAAA,CAIM,cAHJA,mBAAA,CAA6B,YAAAC,gBAAA,CAAtBL,MAAA,CAAAC,SAAS,CAACK,IAAI,kBACrBF,mBAAA,CAAkC,WAAAC,gBAAA,CAA5BL,MAAA,CAAAC,SAAS,CAACM,WAAW,kBAC3BR,mBAAA,eAAkB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}