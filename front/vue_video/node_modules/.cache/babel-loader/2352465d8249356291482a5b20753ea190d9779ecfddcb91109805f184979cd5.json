{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\n\n// Reactive data for short dramas\n\nexport default {\n  __name: 'HelloWorld',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const shortDramas = ref([]);\n\n    // Method to fetch short drama data asynchronously\n    const loadShortDramas = async (shortDramas, classify) => {\n      try {\n        // Fetch short drama data\n        const res = await request.get('/file/selectTop10', {\n          params: {\n            classify: classify\n          }\n        });\n        // If successful, update the short drama data\n        const dramas = res.data.data;\n\n        // Group dramas by name\n        const groupedDramas = groupDramasByName(dramas);\n        console.log(\"groupedDramas:===\", groupedDramas);\n\n        // Flatten the grouped dramas\n        const flattenedDramas = [];\n        for (const name in groupedDramas) {\n          if (Object.prototype.hasOwnProperty.call(groupedDramas, name)) {\n            const dramaGroup = groupedDramas[name];\n            // Only take the first drama from each group\n            flattenedDramas.push(dramaGroup[0]);\n          }\n        }\n        shortDramas.value = flattenedDramas;\n      } catch (error) {\n        // Catch and handle errors\n        console.error('Error loading short dramas:', error);\n      }\n    };\n\n    // Function to group dramas by name\n    const groupDramasByName = dramas => {\n      const groupedDramas = {};\n      dramas.forEach(drama => {\n        if (!groupedDramas[drama.name]) {\n          groupedDramas[drama.name] = [];\n        }\n        groupedDramas[drama.name].push(drama);\n      });\n      return groupedDramas;\n    };\n\n    // Router instance\n    const router = useRouter();\n\n    // Method to navigate to drama detail page\n    const goToDramaDetail = dramaId => {\n      // Navigate to the detail page and pass drama ID as route parameter\n      router.push({\n        name: 'videoDetail',\n        params: {\n          id: dramaId\n        }\n      });\n      console.log(\"----\", dramaId);\n    };\n\n    // Load short dramas on component mount\n    loadShortDramas(shortDramas, \"重生\");\n    const __returned__ = {\n      shortDramas,\n      loadShortDramas,\n      groupDramasByName,\n      router,\n      goToDramaDetail,\n      ref,\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","request","useRouter","shortDramas","loadShortDramas","classify","res","get","params","dramas","data","groupedDramas","groupDramasByName","console","log","flattenedDramas","name","Object","prototype","hasOwnProperty","call","dramaGroup","push","value","error","forEach","drama","router","goToDramaDetail","dramaId","id"],"sources":["F:/video/vue_video/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"drama-sections\">\n    <br>\n    <h1>短剧推荐</h1>\n    <div class=\"drama-section\">\n      <br>\n      <div class=\"drama-list\">\n        <div v-for=\"(drama, index) in shortDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id)\">\n          <div class=\"image-wrapper\">\n            <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\n            <div class=\"play-button\">\n              <i class=\"fas fa-play\"></i>\n            </div>\n          </div>\n          <p>{{ drama.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\n\n// Reactive data for short dramas\nconst shortDramas = ref([]);\n\n// Method to fetch short drama data asynchronously\nconst loadShortDramas = async (shortDramas, classify) => {\n  try {\n    // Fetch short drama data\n    const res = await request.get('/file/selectTop10', { params: { classify: classify } });\n    // If successful, update the short drama data\n    const dramas = res.data.data;\n\n    // Group dramas by name\n    const groupedDramas = groupDramasByName(dramas);\n    console.log(\"groupedDramas:===\", groupedDramas);\n\n    // Flatten the grouped dramas\n    const flattenedDramas = [];\n    for (const name in groupedDramas) {\n      if (Object.prototype.hasOwnProperty.call(groupedDramas, name)) {\n        const dramaGroup = groupedDramas[name];\n        // Only take the first drama from each group\n        flattenedDramas.push(dramaGroup[0]);\n      }\n    }\n\n    shortDramas.value = flattenedDramas;\n  } catch (error) {\n    // Catch and handle errors\n    console.error('Error loading short dramas:', error);\n  }\n};\n\n// Function to group dramas by name\nconst groupDramasByName = (dramas) => {\n  const groupedDramas = {};\n  dramas.forEach(drama => {\n    if (!groupedDramas[drama.name]) {\n      groupedDramas[drama.name] = [];\n    }\n    groupedDramas[drama.name].push(drama);\n  });\n  return groupedDramas;\n};\n\n// Router instance\nconst router = useRouter();\n\n// Method to navigate to drama detail page\nconst goToDramaDetail = (dramaId) => {\n  // Navigate to the detail page and pass drama ID as route parameter\n  router.push({ name: 'videoDetail', params: { id: dramaId } });\n  console.log(\"----\",dramaId)\n};\n\n// Load short dramas on component mount\nloadShortDramas(shortDramas, \"重生\");\n</script>\n\n<style scoped>\n/* CSS styles for the drama section */\n\nh1 {\n  margin: 40px 0 0;\n}\n\n.drama-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n.drama-card {\n  width: calc(20% - 20px);\n  margin-left: 10px;\n  margin-bottom: 20px;\n  padding: 10px;\n  box-sizing: border-box;\n}\n\n.drama-card .image-wrapper {\n  width: 190px;\n  height: 266px;\n  overflow: hidden;\n  border-radius: 5px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.drama-card img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.image-wrapper {\n  position: relative;\n  overflow: hidden;\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.drama-image {\n  transition: transform 0.3s ease;\n}\n\n.image-wrapper:hover .drama-image {\n  transform: scale(1.05);\n}\n\n.play-button {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.image-wrapper:hover .play-button {\n  opacity: 1;\n}\n\n.play-button i {\n  color: white;\n  font-size: 24px;\n}\n</style>\n"],"mappings":";AAsBA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,SAAS,QAAQ,YAAY;;AAEtC;;;;;;;;IACA,MAAMC,WAAW,GAAGH,GAAG,CAAC,EAAE,CAAC;;IAE3B;IACA,MAAMI,eAAe,GAAG,MAAAA,CAAOD,WAAW,EAAEE,QAAQ,KAAK;MACvD,IAAI;QACF;QACA,MAAMC,GAAG,GAAG,MAAML,OAAO,CAACM,GAAG,CAAC,mBAAmB,EAAE;UAAEC,MAAM,EAAE;YAAEH,QAAQ,EAAEA;UAAS;QAAE,CAAC,CAAC;QACtF;QACA,MAAMI,MAAM,GAAGH,GAAG,CAACI,IAAI,CAACA,IAAI;;QAE5B;QACA,MAAMC,aAAa,GAAGC,iBAAiB,CAACH,MAAM,CAAC;QAC/CI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,aAAa,CAAC;;QAE/C;QACA,MAAMI,eAAe,GAAG,EAAE;QAC1B,KAAK,MAAMC,IAAI,IAAIL,aAAa,EAAE;UAChC,IAAIM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,aAAa,EAAEK,IAAI,CAAC,EAAE;YAC7D,MAAMK,UAAU,GAAGV,aAAa,CAACK,IAAI,CAAC;YACtC;YACAD,eAAe,CAACO,IAAI,CAACD,UAAU,CAAC,CAAC,CAAC,CAAC;UACrC;QACF;QAEAlB,WAAW,CAACoB,KAAK,GAAGR,eAAe;MACrC,CAAC,CAAC,OAAOS,KAAK,EAAE;QACd;QACAX,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;;IAED;IACA,MAAMZ,iBAAiB,GAAIH,MAAM,IAAK;MACpC,MAAME,aAAa,GAAG,CAAC,CAAC;MACxBF,MAAM,CAACgB,OAAO,CAACC,KAAK,IAAI;QACtB,IAAI,CAACf,aAAa,CAACe,KAAK,CAACV,IAAI,CAAC,EAAE;UAC9BL,aAAa,CAACe,KAAK,CAACV,IAAI,CAAC,GAAG,EAAE;QAChC;QACAL,aAAa,CAACe,KAAK,CAACV,IAAI,CAAC,CAACM,IAAI,CAACI,KAAK,CAAC;MACvC,CAAC,CAAC;MACF,OAAOf,aAAa;IACtB,CAAC;;IAED;IACA,MAAMgB,MAAM,GAAGzB,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAM0B,eAAe,GAAIC,OAAO,IAAK;MACnC;MACAF,MAAM,CAACL,IAAI,CAAC;QAAEN,IAAI,EAAE,aAAa;QAAER,MAAM,EAAE;UAAEsB,EAAE,EAAED;QAAQ;MAAE,CAAC,CAAC;MAC7DhB,OAAO,CAACC,GAAG,CAAC,MAAM,EAACe,OAAO,CAAC;IAC7B,CAAC;;IAED;IACAzB,eAAe,CAACD,WAAW,EAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}