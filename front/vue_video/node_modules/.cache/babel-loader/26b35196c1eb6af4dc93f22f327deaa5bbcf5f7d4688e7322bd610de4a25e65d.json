{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport Navigation from \"@/views/navigation.vue\";\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\nimport { useRoute } from \"vue-router\";\nexport default {\n  __name: 'search',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const searchQuery1 = route.params.searchQuery;\n    log;\n    const router = useRouter();\n    const shortDramas = ref([]);\n    const searchQuery = ref(searchQuery1);\n    const search = async () => {\n      try {\n        const res = await request.get('/file/search', {\n          params: {\n            name: searchQuery.value\n          }\n        });\n        shortDramas.value = res.data.data;\n      } catch (error) {\n        console.error('Error searching:', error);\n      }\n    };\n    const goToDramaDetail = (dramaId, name) => {\n      // Navigate to the detail page and pass drama ID as route parameter\n      router.push({\n        name: 'videoDetail',\n        params: {\n          id: dramaId,\n          name: name\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      searchQuery1,\n      router,\n      shortDramas,\n      searchQuery,\n      search,\n      goToDramaDetail,\n      ref,\n      Navigation,\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","Navigation","request","useRouter","useRoute","route","searchQuery1","params","searchQuery","log","router","shortDramas","search","res","get","name","value","data","error","console","goToDramaDetail","dramaId","push","id"],"sources":["F:/video/vue_video/src/views/search.vue"],"sourcesContent":["<template>\r\n  <navigation/>\r\n  <div class=\"search-page\">\r\n    <!-- 搜索框和按钮 -->\r\n    <li class=\"search-box\">\r\n      <div class=\"search-containers\">\r\n        <input type=\"text\" placeholder=\"搜索\" v-model=\"searchQuery\" @keyup.enter=\"search\">\r\n        <button @click=\"search\"><img src=\"../assets/1.png\"></button>\r\n      </div>\r\n    </li>\r\n  </div>\r\n  <div class=\"drama-sections\">\r\n    <navigation/>\r\n    <br>\r\n    <h1>甜宠</h1>\r\n    <div class=\"drama-section\">\r\n      <br>\r\n      <div class=\"drama-list\">\r\n        <div v-for=\"(drama, index) in shortDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id,drama.name)\">\r\n          <div class=\"image-wrapper\">\r\n            <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\r\n            <div class=\"play-button\">\r\n              <i class=\"fas fa-play\"></i>\r\n            </div>\r\n          </div>\r\n          <p>{{ drama.name }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport Navigation from \"@/views/navigation.vue\";\r\nimport request from \"@/utils/request\";\r\nimport { useRouter } from 'vue-router'\r\nimport { useRoute } from \"vue-router\";\r\nconst route=useRoute();\r\nconst searchQuery1=route.params.searchQuery;\r\nlog\r\nconst router = useRouter();\r\nconst shortDramas = ref([]);\r\nconst searchQuery = ref(searchQuery1);\r\n\r\nconst search = async () => {\r\n  try {\r\n    const res = await request.get('/file/search', { params: { name: searchQuery.value } });\r\n    shortDramas.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error searching:', error);\r\n  }\r\n}\r\nconst goToDramaDetail = (dramaId,name) => {\r\n  // Navigate to the detail page and pass drama ID as route parameter\r\n  router.push({ name: 'videoDetail', params: { id: dramaId ,name: name} });\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.search-page {\r\n  margin: 20px;\r\n  padding: 200px;\r\n}\r\n\r\ninput {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\n.search-containers {\r\n  display: flex;\r\n}\r\n\r\n.search-containers input {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  height: 40px;\r\n  width: 400px;\r\n  margin-left: -350px;\r\n  border: 1px solid #ccc; /* 添加边框样式 */\r\n  font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n}\r\n\r\n.search-containers button {\r\n  width: 51px;\r\n  margin-top: 0px;\r\n  padding: 5px;\r\n  background-color: white;\r\n  color: white;\r\n  cursor: pointer;\r\n  height: 51px;\r\n  border: 1px solid #ccc; /* 添加边框样式 */\r\n  font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n\r\n}\r\n.search-containers button:hover {\r\n  background-color: #ff6600; /* 悬停时的颜色变化 */\r\n}\r\n\r\n.search-containers img {\r\n  width: 25px; /* 使图片填充按钮 */\r\n  height: 25px;\r\n}\r\n.nav-list {\r\n  position: fixed;\r\n  top: -16px;\r\n  left: -4px;\r\n  width: 100%;\r\n  list-style: none;\r\n  padding: 1px;\r\n  background-color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n</style>\r\n"],"mappings":";AAiCA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,YAAY;;;;;;;IACrC,MAAMC,KAAK,GAACD,QAAQ,CAAC,CAAC;IACtB,MAAME,YAAY,GAACD,KAAK,CAACE,MAAM,CAACC,WAAW;IAC3CC,GAAG;IACH,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;IAC1B,MAAMQ,WAAW,GAAGX,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMQ,WAAW,GAAGR,GAAG,CAACM,YAAY,CAAC;IAErC,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMX,OAAO,CAACY,GAAG,CAAC,cAAc,EAAE;UAAEP,MAAM,EAAE;YAAEQ,IAAI,EAAEP,WAAW,CAACQ;UAAM;QAAE,CAAC,CAAC;QACtFL,WAAW,CAACK,KAAK,GAAGH,GAAG,CAACI,IAAI,CAACA,IAAI;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IACD,MAAME,eAAe,GAAGA,CAACC,OAAO,EAACN,IAAI,KAAK;MACxC;MACAL,MAAM,CAACY,IAAI,CAAC;QAAEP,IAAI,EAAE,aAAa;QAAER,MAAM,EAAE;UAAEgB,EAAE,EAAEF,OAAO;UAAEN,IAAI,EAAEA;QAAI;MAAE,CAAC,CAAC;IAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}