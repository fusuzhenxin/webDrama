{"ast":null,"code":"import { ref } from 'vue';\nimport request from \"@/utils/request\";\n// import videojs from 'video.js';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const hotProducts = ref([]);\n\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/file/selectTop101');\n        // 如果请求成功，更新商品分类数据\n        hotProducts.value = res.data.data;\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts\n    };\n  }\n  // mounted() {\n  //   // 在组件挂载完成后初始化视频播放器\n  //   // 在组件挂载完成后初始化视频播放器\n  //   if (this.$refs.videoPlayer) {\n  //     videojs(this.$refs.videoPlayer);\n  //   }\n  // }\n};","map":{"version":3,"names":["ref","request","name","props","msg","String","setup","hotProducts","loadProductCategories","res","get","value","data","error","console"],"sources":["F:\\video\\vue_video\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"product-sections\">\n    <br>\n    <h1>热门剧</h1>\n    <div class=\"product-section\">\n      <br>\n      <div class=\"product-list\">\n        <div v-for=\"(product, index) in hotProducts\" :key=\"index\" class=\"product-card\" >\n          <div class=\"image-wrapper\">\n            <img :src=\"product.cover\" :alt=\"product.name\">\n          </div>\n          <!-- 视频播放器 -->\n          <!--            <video-->\n          <!--                ref=\"videoPlayer\"-->\n          <!--                class=\"video-js vjs-default-skin\"-->\n          <!--                controls-->\n          <!--                preload=\"auto\"-->\n          <!--                :poster=\"product.poster\"-->\n          <!--                data-setup=\"{}\"-->\n          <!--            >-->\n          <!--              <source :src=\"product.url\" type=\"video/mp4\" />-->\n          <!--              &lt;!&ndash; 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 &ndash;&gt;-->\n          <!--            </video>-->\n          <p>{{ product.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\n// import videojs from 'video.js';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const hotProducts = ref([]);\n\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/file/selectTop101');\n          // 如果请求成功，更新商品分类数据\n          hotProducts.value = res.data.data;\n\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts,\n    };\n  },\n  // mounted() {\n  //   // 在组件挂载完成后初始化视频播放器\n  //   // 在组件挂载完成后初始化视频播放器\n  //   if (this.$refs.videoPlayer) {\n  //     videojs(this.$refs.videoPlayer);\n  //   }\n  // }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.product-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n}\n\n.product-card {\n  width: calc(20% - 20px); /* 设置每个商品占据的宽度为总宽度的20%，减去外边距 */\n  margin-right: 20px; /* 设置商品之间的右外边距 */\n  margin-bottom: 20px; /* 设置商品之间的下外边距 */\n  border: 1px solid #ccc; /* 添加边框样式 */\n  padding: 10px; /* 添加内边距 */\n  box-sizing: border-box; /* 让内边距和边框计入盒模型的总宽度 */\n}\n\n.product-card img {\n  width: 100%; /* 设置图片宽度为父元素宽度的100% */\n  height: auto; /* 让高度自适应以保持图片比例 */\n}\n\n\n@media (max-width: 1200px) {\n  .product-card {\n    width: 23%;\n  }\n}\n\n@media (max-width: 992px) {\n  .product-card {\n    width: 30%;\n  }\n}\n\n@media (max-width: 768px) {\n  .product-card {\n    width: 48%;\n  }\n}\n\n@media (max-width: 576px) {\n  .product-card {\n    width: 100%;\n  }\n}\n\n</style>\n"],"mappings":"AAgCA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,OAAM,MAAO,iBAAiB;AACrC;AACA,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,WAAU,GAAIP,GAAG,CAAC,EAAE,CAAC;;IAE3B;IACA,MAAMQ,qBAAoB,GAAI,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,MAAMC,GAAE,GAAI,MAAMR,OAAO,CAACS,GAAG,CAAC,oBAAoB,CAAC;QACjD;QACAH,WAAW,CAACI,KAAI,GAAIF,GAAG,CAACG,IAAI,CAACA,IAAI;MAErC,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;;IAED;IACAL,qBAAqB,CAAC,CAAC;;IAGvB;IACA,OAAO;MACLD;IACF,CAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}