{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nexport default {\n  name: 'VideoPlayer',\n  setup() {\n    const videoPlayer = ref(null);\n    const handleFileChange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        const videoURL = URL.createObjectURL(file);\n        videoPlayer.value.src = videoURL;\n      }\n    };\n    const fetchVideoData = async () => {\n      try {\n        // 发送 HTTP GET 请求到后端获取视频数据\n        const response = await axios.get('http://your-backend-api-url/video');\n        // 在这里处理返回的视频数据，比如更新视频播放器的 src 属性\n        const videoDataURL = response.data.videoDataURL;\n        videoPlayer.value.src = videoDataURL;\n      } catch (error) {\n        console.error('Error fetching video data:', error);\n      }\n    };\n    return {\n      videoPlayer,\n      handleFileChange,\n      fetchVideoData\n    };\n  }\n};","map":{"version":3,"names":["ref","axios","name","setup","videoPlayer","handleFileChange","event","file","target","files","videoURL","URL","createObjectURL","value","src","fetchVideoData","response","get","videoDataURL","data","error","console"],"sources":["F:\\video\\vue_video\\src\\views\\VideoPlayer.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"file\" @change=\"handleFileChange\" accept=\"video/*\">\r\n    <video ref=\"videoPlayer\" controls></video>\r\n    <button @click=\"fetchVideoData\">Fetch Video Data</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'VideoPlayer',\r\n  setup() {\r\n    const videoPlayer = ref(null);\r\n\r\n    const handleFileChange = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        const videoURL = URL.createObjectURL(file);\r\n        videoPlayer.value.src = videoURL;\r\n      }\r\n    };\r\n\r\n    const fetchVideoData = async () => {\r\n      try {\r\n        // 发送 HTTP GET 请求到后端获取视频数据\r\n        const response = await axios.get('http://your-backend-api-url/video');\r\n        // 在这里处理返回的视频数据，比如更新视频播放器的 src 属性\r\n        const videoDataURL = response.data.videoDataURL;\r\n        videoPlayer.value.src = videoDataURL;\r\n      } catch (error) {\r\n        console.error('Error fetching video data:', error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      videoPlayer,\r\n      handleFileChange,\r\n      fetchVideoData\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 可以添加自定义样式 */\r\n</style>\r\n\r\n"],"mappings":";;;AASA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,WAAU,GAAIJ,GAAG,CAAC,IAAI,CAAC;IAE7B,MAAMK,gBAAe,GAAKC,KAAK,IAAK;MAClC,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,MAAMG,QAAO,GAAIC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;QAC1CH,WAAW,CAACS,KAAK,CAACC,GAAE,GAAIJ,QAAQ;MAClC;IACF,CAAC;IAED,MAAMK,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAC,mCAAmC,CAAC;QACrE;QACA,MAAMC,YAAW,GAAIF,QAAQ,CAACG,IAAI,CAACD,YAAY;QAC/Cd,WAAW,CAACS,KAAK,CAACC,GAAE,GAAII,YAAY;MACtC,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,OAAO;MACLhB,WAAW;MACXC,gBAAgB;MAChBU;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}