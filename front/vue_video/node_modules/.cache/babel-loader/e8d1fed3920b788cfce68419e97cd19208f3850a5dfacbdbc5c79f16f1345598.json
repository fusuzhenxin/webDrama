{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute, useRouter } from 'vue-router';\nimport videojs from 'video.js';\nimport 'video.js/dist/video-js.css';\nimport Hls from 'hls.js';\nconst episodesPerPage = 25;\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isLiked = ref(false);\n    const isCollect = ref(false);\n    const videoData = ref(null);\n    const videoPlayer = ref(null);\n    const numberOfEpisodes = ref(0);\n    const Descriptions = ref(null);\n    const currentPage = ref(1);\n    const route = useRoute();\n    const videoName = route.params.name;\n    console.log(\"idididid\", videoName);\n    const showDropdown = ref(false);\n    const username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\n    const searchQuery = ref('');\n    const router = useRouter();\n    const toggleDropdown = () => {\n      showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\n    };\n    const isLoggedIn = () => {\n      return !!username.value; // 根据用户是否存在判断用户是否已登录\n    };\n    const search = () => {\n      console.log('Search method called');\n      // 如果搜索框有内容，执行路由跳转\n      if (searchQuery.value.trim() !== '') {\n        router.push({\n          name: 'search',\n          params: {\n            searchQuery: searchQuery.value\n          }\n        }); // 这里替换为你要跳转的页面路径\n      }\n    };\n    const logout = () => {\n      // 这里添加注销登录的逻辑，比如清除用户信息等\n      console.log('注销登录');\n    };\n\n    // 加载视频数据\n    const loadVideoData = async () => {\n      try {\n        const res = await request.get('/file/Inception', {\n          params: {\n            name: videoName\n          }\n        });\n        videoData.value = res.data.data;\n        initializeVideoPlayer();\n        console.log(\"[[[\", videoData.value);\n      } catch (error) {\n        console.error('Error loading video data:', error);\n      }\n    };\n\n    // 加载剧集描述\n    const loadDescription = async () => {\n      try {\n        const res = await request.get('/details/finAll', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value = res.data.data;\n        console.log(\"res.data.data----------\", res.data.data);\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    // 加载剧集数量\n    const loadNumberOfEpisodes = async () => {\n      try {\n        const res = await request.get('/videos/diversity', {\n          params: {\n            name: videoName\n          }\n        });\n        numberOfEpisodes.value = res.data.data;\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    // 点赞数量\n    const Likes = async () => {\n      if (!isLiked.value) {\n        const res = await request.get('/details/likes', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = true;\n      } else {\n        const res = await request.get('/details/likesDelete', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = false;\n      }\n    };\n\n    // 收藏数量\n    const Collect = async () => {\n      if (!isCollect.value) {\n        const res = await request.get('/details/collect', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isCollect.value = true;\n      } else {\n        const res = await request.get('/details/collectDelete', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        isCollect.value = false;\n      }\n    };\n\n    // 加载剧集\n    const loadEpisode = async episodeNumber => {\n      console.log(\"?????????\", episodeNumber);\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const actualEpisodeNumber = startIndex + episodeNumber;\n      try {\n        const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\n        const url = res.data.data;\n        if (videoPlayer.value) {\n          videoPlayer.value.src = url;\n          videoPlayer.value.load();\n          videoPlayer.value.play();\n        }\n      } catch (error) {\n        console.error('Error loading episode:', error);\n      }\n    };\n\n    // 设置当前页\n    const setCurrentPage = page => {\n      currentPage.value = page;\n    };\n\n    // 初始化视频播放器\n    const initializeVideoPlayer = () => {\n      const player = videojs('videoPlayer', {\n        controls: true,\n        autoplay: false,\n        fluid: true,\n        html5: {\n          hls: {\n            enableLowInitialPlaylist: true,\n            overrideNative: true\n          }\n        }\n      });\n      if (Hls.isSupported()) {\n        const hls = new Hls();\n        hls.attachMedia(player);\n        hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n          hls.loadSource(videoData.value.url);\n        });\n      } else if (player.canPlayType('application/vnd.apple.mpegurl')) {\n        player.src({\n          src: videoData.value.url,\n          type: 'application/vnd.apple.mpegurl'\n        });\n      }\n    };\n\n    // 计算分页\n    const displayedEpisodes = computed(() => {\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\n      return Array.from({\n        length: endIndex - startIndex\n      }, (_, index) => startIndex + index + 1);\n    });\n    const totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\n    onMounted(() => {\n      loadVideoData();\n      loadNumberOfEpisodes();\n      loadDescription();\n    });\n    const __returned__ = {\n      isLiked,\n      isCollect,\n      videoData,\n      videoPlayer,\n      numberOfEpisodes,\n      Descriptions,\n      episodesPerPage,\n      currentPage,\n      route,\n      videoName,\n      showDropdown,\n      username,\n      searchQuery,\n      router,\n      toggleDropdown,\n      isLoggedIn,\n      search,\n      logout,\n      loadVideoData,\n      loadDescription,\n      loadNumberOfEpisodes,\n      Likes,\n      Collect,\n      loadEpisode,\n      setCurrentPage,\n      initializeVideoPlayer,\n      displayedEpisodes,\n      totalPages,\n      ref,\n      onMounted,\n      computed,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get videojs() {\n        return videojs;\n      },\n      get Hls() {\n        return Hls;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","request","useRoute","useRouter","videojs","Hls","episodesPerPage","isLiked","isCollect","videoData","videoPlayer","numberOfEpisodes","Descriptions","currentPage","route","videoName","params","name","console","log","showDropdown","username","searchQuery","router","toggleDropdown","value","isLoggedIn","search","trim","push","logout","loadVideoData","res","get","data","initializeVideoPlayer","error","loadDescription","loadNumberOfEpisodes","Likes","quantity","Collect","collect","loadEpisode","episodeNumber","startIndex","actualEpisodeNumber","url","src","load","play","setCurrentPage","page","player","controls","autoplay","fluid","html5","hls","enableLowInitialPlaylist","overrideNative","isSupported","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","canPlayType","type","displayedEpisodes","endIndex","Math","min","Array","from","length","_","index","totalPages","ceil"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"container\"  v-if=\"videoData\">\r\n    <div class=\"navigation-wrapper\">\r\n      <div class=\"common-layout\">\r\n        <el-container>\r\n          <el-header>\r\n\r\n            <nav>\r\n              <ul class=\"nav-list\">\r\n                <li><h1 style=\"color: white;margin-right: 20px;margin-left: 26px\">短剧网</h1></li>\r\n\r\n                <!-- 搜索框和按钮 -->\r\n                <li class=\"search-box\">\r\n                  <div class=\"search-container\">\r\n                    <input type=\"text\" placeholder=\"搜索\" v-model=\"searchQuery\" @keyup.enter=\"search\">\r\n                    <button @click=\"search\"><img src=\"../assets/1.png\"></button>\r\n                  </div>\r\n                </li>\r\n                <ul class=\"top-nav-list\">\r\n                  <li v-if=\"isLoggedIn\" @click=\"toggleDropdown\" class=\"user-dropdown\">\r\n                    <img  src=\"../assets/img_7.png\" class=\"avatar\">\r\n                    <span style=\"color: white;\" class=\"username\">{{ username }}</span>\r\n                    <!-- 下拉菜单 -->\r\n                    <ul v-if=\"showDropdown\" class=\"dropdown-menu\">\r\n                      <li><a @click=\"logout\">立刻登录</a></li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n\r\n                <!-- 导航项 -->\r\n                <div class=\"block-list\">\r\n                  <ul>\r\n                    <!-- 首页导航项 -->\r\n                    <li><router-link to=\"/helloWorld\">首页</router-link></li>\r\n                    <!-- 购物车导航项 -->\r\n                    <li><router-link to=\"/Counterattack\">逆袭</router-link></li>\r\n                    <!-- 订单导航项 -->\r\n                    <li><router-link to=\"/traversing\">穿越</router-link></li>\r\n                    <!-- 我的账户导航项 -->\r\n                    <li><router-link to=\"/sweet\">甜宠</router-link></li>\r\n                    <!-- 我的收藏夹导航项 -->\r\n                    <li><router-link to=\"/rebirth\">重生</router-link></li>\r\n                  </ul>\r\n                </div>\r\n              </ul>\r\n            </nav>\r\n          </el-header>\r\n        </el-container>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <div class=\"video-wrapper\">\r\n      <div class=\"video-container\">\r\n        <!-- 修改的地方在这里 -->\r\n        <video id=\"videoPlayer\" class=\"video-js vjs-default-skin\" controls>\r\n          <source :src=\"videoData.url\" type=\"application/x-mpegURL\">\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"pagination-container\">\r\n\r\n      <h1 style=\"color: white\">{{ videoData.name }}</h1>\r\n      <p style=\"color: whitesmoke\">主演：{{Descriptions && Descriptions.actors}}</p>\r\n      <div>\r\n        <button>{{ Descriptions && Descriptions.classify }}</button>\r\n        <button style=\"margin-left: 10px\">民国</button>\r\n      </div>\r\n      <div>\r\n        <p style=\"color: darkgray\">{{Descriptions && Descriptions.description}}</p>\r\n      </div>\r\n\r\n      <div class=\"like-favorite-container\">\r\n        <div class=\"like-container\">\r\n          <button class=\"like-button\" @click=\"Likes\">{{ isLiked ? '取消点赞' : '点赞' }}</button>\r\n          <span class=\"like-count\">{{Descriptions && Descriptions.quantity}}</span>\r\n        </div>\r\n        <div class=\"favorite-container\">\r\n          <button class=\"favorite-button\" @click=\"Collect()\">{{ isCollect ? '取消收藏' : '收藏' }}</button>\r\n          <span class=\"favorite-count\">{{Descriptions && Descriptions.collect}}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <hr>\r\n      <div style=\"display: flex; justify-content: space-between;\">\r\n        <div>\r\n          <h2 style=\"color: white\">选集</h2>\r\n        </div>\r\n        <div>\r\n          <h4 style=\"color: #8a8b8d;margin-right: 240px;margin-top: 30px\">共{{numberOfEpisodes}}集</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"button-bottom-half\">  <!-- 上半部分 -->\r\n        <div class=\"button-inner-container\">\r\n          <button v-for=\"(episode, index) in displayedEpisodes\" :key=\"index\" @click=\"loadEpisode(index+1)\" class=\"episode-button\">\r\n            {{ episode }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"pagination-top-half\"> <!-- 下半部分 -->\r\n        <!-- 这里放其他内容 -->\r\n        <div class=\"pagination\">\r\n          <button v-for=\"page in totalPages\" :key=\"page\" @click=\"setCurrentPage(page)\" :class=\"{ active: page === currentPage }\">{{ page }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div v-else>\r\n    Loading...\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport videojs from 'video.js';\r\nimport 'video.js/dist/video-js.css';\r\nimport Hls from 'hls.js';\r\n\r\nconst isLiked = ref(false);\r\nconst isCollect = ref(false);\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\nconst Descriptions = ref(null);\r\nconst episodesPerPage = 25;\r\nconst currentPage = ref(1);\r\nconst route = useRoute();\r\nconst videoName = route.params.name;\r\nconsole.log(\"idididid\", videoName);\r\nconst showDropdown = ref(false);\r\nconst username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\r\nconst searchQuery = ref('');\r\nconst router = useRouter();\r\n\r\nconst toggleDropdown = () => {\r\n  showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\r\n};\r\n\r\nconst isLoggedIn = () => {\r\n  return !!username.value; // 根据用户是否存在判断用户是否已登录\r\n};\r\n\r\nconst search = () => {\r\n  console.log('Search method called');\r\n  // 如果搜索框有内容，执行路由跳转\r\n  if (searchQuery.value.trim() !== '') {\r\n    router.push({ name: 'search', params: { searchQuery: searchQuery.value } }); // 这里替换为你要跳转的页面路径\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  // 这里添加注销登录的逻辑，比如清除用户信息等\r\n  console.log('注销登录');\r\n};\r\n\r\n// 加载视频数据\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const res = await request.get('/file/Inception', { params: { name: videoName } });\r\n    videoData.value = res.data.data;\r\n    initializeVideoPlayer();\r\n    console.log(\"[[[\", videoData.value);\r\n  } catch (error) {\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\n// 加载剧集描述\r\nconst loadDescription = async () => {\r\n  try {\r\n    const res = await request.get('/details/finAll', { params: { name: videoName } })\r\n    Descriptions.value = res.data.data\r\n    console.log(\"res.data.data----------\", res.data.data)\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n}\r\n\r\n// 加载剧集数量\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\n// 点赞数量\r\nconst Likes = async () => {\r\n  if (!isLiked.value) {\r\n    const res = await request.get('/details/likes', { params: { name: videoName } });\r\n    Descriptions.value.quantity = res.data.data;\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = true;\r\n  } else {\r\n    const res = await request.get('/details/likesDelete', { params: { name: videoName } });\r\n    Descriptions.value.quantity = res.data.data;\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = false;\r\n  }\r\n};\r\n\r\n// 收藏数量\r\nconst Collect = async () => {\r\n  if (!isCollect.value) {\r\n    const res = await request.get('/details/collect', { params: { name: videoName } });\r\n    Descriptions.value.collect = res.data.data;\r\n    console.log(\"-------\", res.data.data)\r\n    isCollect.value = true;\r\n  } else {\r\n    const res = await request.get('/details/collectDelete', { params: { name: videoName } });\r\n    Descriptions.value.collect = res.data.data;\r\n    isCollect.value = false;\r\n  }\r\n};\r\n\r\n// 加载剧集\r\nconst loadEpisode = async (episodeNumber) => {\r\n  console.log(\"?????????\", episodeNumber);\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const actualEpisodeNumber = startIndex + episodeNumber;\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\n// 设置当前页\r\nconst setCurrentPage = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n// 初始化视频播放器\r\nconst initializeVideoPlayer = () => {\r\n  const player = videojs('videoPlayer', {\r\n    controls: true,\r\n    autoplay: false,\r\n    fluid: true,\r\n    html5: {\r\n      hls: {\r\n        enableLowInitialPlaylist: true,\r\n        overrideNative: true,\r\n      }\r\n    }\r\n  });\r\n\r\n  if (Hls.isSupported()) {\r\n    const hls = new Hls();\r\n    hls.attachMedia(player);\r\n    hls.on(Hls.Events.MEDIA_ATTACHED, function () {\r\n      hls.loadSource(videoData.value.url);\r\n    });\r\n  } else if (player.canPlayType('application/vnd.apple.mpegurl')) {\r\n    player.src({\r\n      src: videoData.value.url,\r\n      type: 'application/vnd.apple.mpegurl'\r\n    });\r\n  }\r\n};\r\n\r\n// 计算分页\r\nconst displayedEpisodes = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\r\n  return Array.from({ length: endIndex - startIndex }, (_, index) => startIndex + index + 1);\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n  loadNumberOfEpisodes();\r\n  loadDescription();\r\n});\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}