{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\nimport Navigation from \"@/views/navigation.vue\";\n\n// Reactive data for short dramas\nconst itemsPerPage = 10; // Number of items per page\n// Method to fetch short drama data asynchronously\n\nexport default {\n  __name: 'sweet',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const shortDramas = ref([]);\n    // Pagination variables\n    const currentPage = ref(1);\n    const loadShortDramas = async (classify, page) => {\n      try {\n        // Calculate offset based on current page\n        const offset = (page - 1) * itemsPerPage;\n        // Fetch short drama data with pagination parameters\n        const res = await request.get('/details/selectTop10', {\n          params: {\n            classify: classify,\n            offset: offset,\n            limit: itemsPerPage\n          }\n        });\n        // If successful, update the short drama data\n        shortDramas.value = res.data.data;\n      } catch (error) {\n        // Catch and handle errors\n        console.error('Error loading short dramas:', error);\n      }\n    };\n    // Load short dramas on component mount\n    loadShortDramas(\"甜宠\", currentPage.value);\n\n    // Computed property to calculate total pages\n    const totalPages = computed(() => Math.ceil(shortDramas.value.length / itemsPerPage));\n\n    // Method to navigate to drama detail page\n    const router = useRouter();\n    const goToDramaDetail = (dramaId, name) => {\n      // Navigate to the detail page and pass drama ID as route parameter\n      router.push({\n        name: 'videoDetail',\n        params: {\n          id: dramaId,\n          name: name\n        }\n      });\n    };\n\n    // Method to navigate to the previous page\n    const previousPage = () => {\n      currentPage.value--;\n      loadShortDramas(\"甜宠\", currentPage.value);\n    };\n\n    // Method to navigate to the next page\n    const nextPage = () => {\n      currentPage.value++;\n      loadShortDramas(\"甜宠\", currentPage.value);\n    };\n    const __returned__ = {\n      shortDramas,\n      currentPage,\n      itemsPerPage,\n      loadShortDramas,\n      totalPages,\n      router,\n      goToDramaDetail,\n      previousPage,\n      nextPage,\n      ref,\n      computed,\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      Navigation\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","request","useRouter","Navigation","itemsPerPage","shortDramas","currentPage","loadShortDramas","classify","page","offset","res","get","params","limit","value","data","error","console","totalPages","Math","ceil","length","router","goToDramaDetail","dramaId","name","push","id","previousPage","nextPage"],"sources":["F:/video/vue_video/src/views/sweet.vue"],"sourcesContent":["<template>\r\n  <div class=\"drama-sections\">\r\n    <navigation />\r\n    <br />\r\n    <h1>甜宠</h1>\r\n    <div class=\"drama-section\">\r\n      <br />\r\n      <div class=\"drama-list\">\r\n        <div v-for=\"(drama, index) in paginatedDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id, drama.name)\">\r\n          <div class=\"image-wrapper\">\r\n            <img :src=\"drama.cover\" :alt=\"drama.name\">\r\n            <div class=\"play-button\">\r\n              <i class=\"fas fa-play\"></i>\r\n            </div>\r\n          </div>\r\n          <p>{{ drama.name }}</p>\r\n        </div>\r\n      </div>\r\n      <!-- Pagination controls -->\r\n      <div class=\"pagination\">\r\n        <button @click=\"previousPage\" :disabled=\"currentPage === 1\">Previous</button>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRouter } from 'vue-router';\r\nimport Navigation from \"@/views/navigation.vue\";\r\n\r\n// Reactive data for short dramas\r\nconst shortDramas = ref([]);\r\n// Pagination variables\r\nconst currentPage = ref(1);\r\nconst itemsPerPage = 10; // Number of items per page\r\n// Method to fetch short drama data asynchronously\r\nconst loadShortDramas = async (classify, page) => {\r\n  try {\r\n    // Calculate offset based on current page\r\n    const offset = (page - 1) * itemsPerPage;\r\n    // Fetch short drama data with pagination parameters\r\n    const res = await request.get('/details/selectTop10', { params: { classify: classify, offset: offset, limit: itemsPerPage } });\r\n    // If successful, update the short drama data\r\n    shortDramas.value = res.data.data;\r\n  } catch (error) {\r\n    // Catch and handle errors\r\n    console.error('Error loading short dramas:', error);\r\n  }\r\n};\r\n// Load short dramas on component mount\r\nloadShortDramas(\"甜宠\", currentPage.value);\r\n\r\n// Computed property to calculate total pages\r\nconst totalPages = computed(() => Math.ceil(shortDramas.value.length / itemsPerPage));\r\n\r\n// Method to navigate to drama detail page\r\nconst router = useRouter();\r\nconst goToDramaDetail = (dramaId, name) => {\r\n  // Navigate to the detail page and pass drama ID as route parameter\r\n  router.push({ name: 'videoDetail', params: { id: dramaId ,name: name} });\r\n};\r\n\r\n// Method to navigate to the previous page\r\nconst previousPage = () => {\r\n  currentPage.value--;\r\n  loadShortDramas(\"甜宠\", currentPage.value);\r\n};\r\n\r\n// Method to navigate to the next page\r\nconst nextPage = () => {\r\n  currentPage.value++;\r\n  loadShortDramas(\"甜宠\", currentPage.value);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* CSS styles for the drama section */\r\n\r\n/* Add your existing styles here */\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.pagination button {\r\n  margin: 0 5px;\r\n}\r\n</style>\r\n"],"mappings":";AA4BA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,UAAU,MAAM,wBAAwB;;AAE/C;AAIA,MAAMC,YAAY,GAAG,EAAE,CAAC,CAAC;AACzB;;;;;;;;IAJA,MAAMC,WAAW,GAAGN,GAAG,CAAC,EAAE,CAAC;IAC3B;IACA,MAAMO,WAAW,GAAGP,GAAG,CAAC,CAAC,CAAC;IAG1B,MAAMQ,eAAe,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;MAChD,IAAI;QACF;QACA,MAAMC,MAAM,GAAG,CAACD,IAAI,GAAG,CAAC,IAAIL,YAAY;QACxC;QACA,MAAMO,GAAG,GAAG,MAAMV,OAAO,CAACW,GAAG,CAAC,sBAAsB,EAAE;UAAEC,MAAM,EAAE;YAAEL,QAAQ,EAAEA,QAAQ;YAAEE,MAAM,EAAEA,MAAM;YAAEI,KAAK,EAAEV;UAAa;QAAE,CAAC,CAAC;QAC9H;QACAC,WAAW,CAACU,KAAK,GAAGJ,GAAG,CAACK,IAAI,CAACA,IAAI;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACD;IACAV,eAAe,CAAC,IAAI,EAAED,WAAW,CAACS,KAAK,CAAC;;IAExC;IACA,MAAMI,UAAU,GAAGnB,QAAQ,CAAC,MAAMoB,IAAI,CAACC,IAAI,CAAChB,WAAW,CAACU,KAAK,CAACO,MAAM,GAAGlB,YAAY,CAAC,CAAC;;IAErF;IACA,MAAMmB,MAAM,GAAGrB,SAAS,CAAC,CAAC;IAC1B,MAAMsB,eAAe,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;MACzC;MACAH,MAAM,CAACI,IAAI,CAAC;QAAED,IAAI,EAAE,aAAa;QAAEb,MAAM,EAAE;UAAEe,EAAE,EAAEH,OAAO;UAAEC,IAAI,EAAEA;QAAI;MAAE,CAAC,CAAC;IAC1E,CAAC;;IAED;IACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;MACzBvB,WAAW,CAACS,KAAK,EAAE;MACnBR,eAAe,CAAC,IAAI,EAAED,WAAW,CAACS,KAAK,CAAC;IAC1C,CAAC;;IAED;IACA,MAAMe,QAAQ,GAAGA,CAAA,KAAM;MACrBxB,WAAW,CAACS,KAAK,EAAE;MACnBR,eAAe,CAAC,IAAI,EAAED,WAAW,CAACS,KAAK,CAAC;IAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}