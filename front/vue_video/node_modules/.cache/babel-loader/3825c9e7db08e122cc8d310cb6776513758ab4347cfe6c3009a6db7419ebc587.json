{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const videoData = ref(null);\n    const videoPlayer = ref(null);\n    const numberOfEpisodes = ref(0);\n    const route = useRoute();\n    const videoId = route.params.id;\n    const videoName = route.params.name;\n    const loadVideoData = async () => {\n      try {\n        const res = await request.get(`/file/${videoId}`);\n        videoData.value = res.data.data;\n      } catch (error) {\n        console.error('Error loading video data:', error);\n      }\n    };\n    const loadNumberOfEpisodes = async () => {\n      try {\n        const res = await request.get('/videos/diversity', {\n          params: {\n            name: videoName\n          }\n        });\n        numberOfEpisodes.value = res.data.data; // 获取总集数\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n    onMounted(() => {\n      loadVideoData();\n      loadNumberOfEpisodes();\n      initializeCanvas();\n    });\n    const initializeCanvas = () => {\n      videoCanvas.value = document.querySelector('.video-canvas');\n      canvasContext = videoCanvas.value.getContext('2d');\n    };\n    const loadEpisode = async episodeNumber => {\n      try {\n        const res = await request.get(`/videos/${videoName}/episode/${episodeNumber}`);\n        const url = res.data.data;\n        if (videoPlayer.value) {\n          videoPlayer.value.src = url;\n          videoPlayer.value.load();\n          videoPlayer.value.play();\n        }\n      } catch (error) {\n        console.error('Error loading episode:', error);\n      }\n    };\n    const renderVideoFrameToCanvas = () => {\n      if (!videoPlayer.value || !canvasContext) return;\n      canvasContext.drawImage(videoPlayer.value, 0, 0, videoCanvas.value.width, videoCanvas.value.height);\n      applyBlurEffect();\n    };\n    const applyBlurEffect = () => {\n      canvasContext.filter = 'blur(10px)'; // 应用模糊效果\n    };\n\n    // 在视频播放事件开始时开始渲染视频帧到 Canvas 上\n    const handleVideoPlay = () => {\n      setInterval(renderVideoFrameToCanvas, 100); // 每100毫秒渲染一次视频帧到 Canvas\n    };\n\n    // 监听视频播放事件\n    onMounted(() => {\n      if (videoPlayer.value) {\n        videoPlayer.value.addEventListener('play', handleVideoPlay);\n      }\n    });\n\n    // 在组件销毁时移除事件监听器\n    onUnmounted(() => {\n      if (videoPlayer.value) {\n        videoPlayer.value.removeEventListener('play', handleVideoPlay);\n      }\n    });\n    const __returned__ = {\n      videoData,\n      videoPlayer,\n      numberOfEpisodes,\n      route,\n      videoId,\n      videoName,\n      loadVideoData,\n      loadNumberOfEpisodes,\n      initializeCanvas,\n      loadEpisode,\n      renderVideoFrameToCanvas,\n      applyBlurEffect,\n      handleVideoPlay,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","request","useRoute","videoData","videoPlayer","numberOfEpisodes","route","videoId","params","id","videoName","name","loadVideoData","res","get","value","data","error","console","loadNumberOfEpisodes","initializeCanvas","videoCanvas","document","querySelector","canvasContext","getContext","loadEpisode","episodeNumber","url","src","load","play","renderVideoFrameToCanvas","drawImage","width","height","applyBlurEffect","filter","handleVideoPlay","setInterval","addEventListener","onUnmounted","removeEventListener"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"!videoData\">Loading...</div>\r\n  <div v-else>\r\n    <h1>{{ videoData.name }}</h1>\r\n    <div class=\"container\">\r\n      <div class=\"video-wrapper\">\r\n        <div class=\"video-container\">\r\n          <video ref=\"videoPlayer\" controls class=\"custom-video\">\r\n            <source :src=\"videoData.url\" type=\"video/mp4\" >\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        </div>\r\n        <div class=\"button-container\">\r\n          <button v-for=\"(episode, index) in numberOfEpisodes\" :key=\"index\" @click=\"loadEpisode(index + 1)\">\r\n            Episode {{ index + 1 }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\n\r\nconst route = useRoute();\r\nconst videoId = route.params.id;\r\nconst videoName = route.params.name;\r\n\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const res = await request.get(`/file/${videoId}`);\r\n    videoData.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data; // 获取总集数\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n  loadNumberOfEpisodes();\r\n  initializeCanvas();\r\n});\r\n\r\nconst initializeCanvas = () => {\r\n  videoCanvas.value = document.querySelector('.video-canvas');\r\n  canvasContext = videoCanvas.value.getContext('2d');\r\n};\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${episodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst renderVideoFrameToCanvas = () => {\r\n  if (!videoPlayer.value || !canvasContext) return;\r\n\r\n  canvasContext.drawImage(videoPlayer.value, 0, 0, videoCanvas.value.width, videoCanvas.value.height);\r\n  applyBlurEffect();\r\n};\r\n\r\nconst applyBlurEffect = () => {\r\n  canvasContext.filter = 'blur(10px)'; // 应用模糊效果\r\n};\r\n\r\n// 在视频播放事件开始时开始渲染视频帧到 Canvas 上\r\nconst handleVideoPlay = () => {\r\n  setInterval(renderVideoFrameToCanvas, 100); // 每100毫秒渲染一次视频帧到 Canvas\r\n};\r\n\r\n// 监听视频播放事件\r\nonMounted(() => {\r\n  if (videoPlayer.value) {\r\n    videoPlayer.value.addEventListener('play', handleVideoPlay);\r\n  }\r\n});\r\n\r\n// 在组件销毁时移除事件监听器\r\nonUnmounted(() => {\r\n  if (videoPlayer.value) {\r\n    videoPlayer.value.removeEventListener('play', handleVideoPlay);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  background-color: black;\r\n}\r\n\r\n.video-wrapper {\r\n  display: flex;\r\n}\r\n\r\n.video-container {\r\n  flex: 1;\r\n  position: relative;\r\n}\r\n.custom-video {\r\n  width: 1200px;\r\n  height: 800px;\r\n}\r\n.button-container {\r\n  margin-left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.button-container button {\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}