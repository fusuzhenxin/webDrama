{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\nimport { useRoute } from \"vue-router\";\nexport default {\n  __name: 'search',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const searchQuery1 = route.params.searchQuery;\n    const router = useRouter();\n    const shortDramas = ref([]);\n    const searchQuery = ref(searchQuery1);\n    const showDropdown = ref('');\n    const videoData = ref([]);\n    const username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\n    const details = ref([]);\n    const toggleDropdown = () => {\n      showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\n    };\n    const isLoggedIn = () => {\n      return !!username.value; // 根据用户是否存在判断用户是否已登录\n    };\n    const logout = () => {\n      // 这里添加注销登录的逻辑，比如清除用户信息等\n      console.log('注销登录');\n    };\n    const search = async () => {\n      try {\n        const res = await request.get('/details/search', {\n          params: {\n            name: searchQuery.value\n          }\n        });\n        shortDramas.value = res.data.data;\n      } catch (error) {\n        console.error('Error searching:', error);\n      }\n    };\n    const acquiesce = async classify => {\n      try {\n        const res = await request.get('/details/selectAcquiesce', {\n          params: {\n            classify: classify\n          }\n        });\n        videoData.value = res.data.data;\n      } catch (error) {\n        console.error('Error searching:', error);\n      }\n    };\n    const loadDetails = async () => {\n      try {\n        const res = await request.get('/details/finAllName', {\n          params: {\n            name: searchQuery.value\n          }\n        });\n        details.value = res.data.data;\n        console.log(\"=====----\", details.value);\n      } catch (error) {\n        console.error('Error searching:', error);\n      }\n    };\n    acquiesce('逆袭');\n    // 在组件加载后执行搜索\n    onMounted(() => {\n      search(); // 页面加载时执行搜索\n      loadDetails();\n    });\n    const goToDramaDetail = (dramaId, name) => {\n      // Navigate to the detail page and pass drama ID as route parameter\n      router.push({\n        name: 'videoDetail',\n        params: {\n          id: dramaId,\n          name: name\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      searchQuery1,\n      router,\n      shortDramas,\n      searchQuery,\n      showDropdown,\n      videoData,\n      username,\n      details,\n      toggleDropdown,\n      isLoggedIn,\n      logout,\n      search,\n      acquiesce,\n      loadDetails,\n      goToDramaDetail,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","request","useRouter","useRoute","route","searchQuery1","params","searchQuery","router","shortDramas","showDropdown","videoData","username","details","toggleDropdown","value","isLoggedIn","logout","console","log","search","res","get","name","data","error","acquiesce","classify","loadDetails","goToDramaDetail","dramaId","push","id"],"sources":["F:/video/vue_video/src/views/search.vue"],"sourcesContent":["<template>\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-header>\r\n\r\n        <nav>\r\n          <ul class=\"nav-list\">\r\n            <li><h1 style=\"color: white;margin-right: 20px;margin-left: 26px\">短剧网</h1></li>\r\n\r\n            <ul class=\"top-nav-list\">\r\n              <li v-if=\"isLoggedIn\" @click=\"toggleDropdown\" class=\"user-dropdown\">\r\n                <img  src=\"../assets/img_7.png\" class=\"avatar\">\r\n                <span style=\"color: white;\" class=\"username\">{{ username }}</span>\r\n                <!-- 下拉菜单 -->\r\n                <ul v-if=\"showDropdown\" class=\"dropdown-menu\">\r\n                  <li><a @click=\"logout\">立刻登录</a></li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n\r\n            <!-- 导航项 -->\r\n            <div class=\"block-list\">\r\n              <ul>\r\n                <!-- 首页导航项 -->\r\n                <li><router-link to=\"/helloWorld\">首页</router-link></li>\r\n                <!-- 购物车导航项 -->\r\n                <li><router-link to=\"/Counterattack\">逆袭</router-link></li>\r\n                <!-- 订单导航项 -->\r\n                <li><router-link to=\"/traversing\">穿越</router-link></li>\r\n                <!-- 我的账户导航项 -->\r\n                <li><router-link to=\"/sweet\">甜宠</router-link></li>\r\n                <!-- 我的收藏夹导航项 -->\r\n                <li><router-link to=\"/rebirth\">重生</router-link></li>\r\n              </ul>\r\n            </div>\r\n          </ul>\r\n        </nav>\r\n      </el-header>\r\n    </el-container>\r\n  </div>\r\n  <div class=\"search-page\">\r\n    <!-- 搜索框和按钮 -->\r\n    <li class=\"search-box\">\r\n      <div class=\"search-containers\">\r\n        <input type=\"text\" placeholder=\"搜索\" v-model=\"searchQuery\" @keyup.enter=\"search\">\r\n        <button @click=\"search\"><img src=\"../assets/1.png\"></button>\r\n      </div>\r\n    </li>\r\n  </div>\r\n  <!-- 搜索结果 -->\r\n  <div class=\"search-results\">\r\n    <!-- 显示搜索结果的内容 -->\r\n    <div v-if=\"shortDramas.length > 0\">\r\n      <div v-for=\"(drama, index) in shortDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id, drama.name)\">\r\n        <!-- ... -->\r\n      </div>\r\n    </div>\r\n    <!-- 默认内容 -->\r\n    <div v-else>\r\n      <!-- 这里可以添加一些其他内容作为默认显示 -->\r\n      <div class=\"drama-section\">\r\n        <br>\r\n        <div class=\"drama-list\">\r\n          <div v-for=\"(drama, index) in videoData\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id,drama.name)\">\r\n            <div class=\"drama-details\">\r\n              <!-- 封面图像 -->\r\n              <div class=\"image-wrapper\">\r\n                <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\r\n                <div class=\"play-button\">\r\n                  <i class=\"fas fa-play\"></i>\r\n                </div>\r\n              </div>\r\n              <!-- 剧集其他详情 -->\r\n              <div class=\"details-wrapper\">\r\n                <p>{{ drama.name }}</p>\r\n\r\n\r\n\r\n              <!-- 这里可以添加其他详情，比如剧集简介、演员名单等 -->\r\n              </div>\r\n\r\n              <div class=\"details-s\">\r\n                <span style=\"color: darkgray\">{{drama.description}}</span>\r\n              </div>\r\n\r\n\r\n              <!-- 这里可以添加其他详情，比如剧集简介、演员名单等 -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"drama-section\">\r\n    <br>\r\n    <div class=\"drama-list\">\r\n      <div v-for=\"(drama, index) in shortDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id, drama.name)\">\r\n        <div class=\"drama-details\">\r\n          <!-- 封面图像 -->\r\n          <div class=\"image-wrapper\">\r\n            <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\r\n            <div class=\"play-button\">\r\n              <i class=\"fas fa-play\"></i>\r\n            </div>\r\n          </div>\r\n          <!-- 剧集其他详情 -->\r\n          <div class=\"details-wrapper\">\r\n            <p>{{ drama.name }}</p>\r\n            <div>\r\n              <button>{{ drama.classify }}</button>\r\n              <button style=\"margin-left: 10px\">民国</button>\r\n            </div>\r\n            <div>\r\n              <p >{{drama.description}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref ,onMounted  } from 'vue';\r\n\r\nimport request from \"@/utils/request\";\r\nimport { useRouter } from 'vue-router'\r\nimport { useRoute } from \"vue-router\";\r\nconst route=useRoute();\r\nconst searchQuery1=route.params.searchQuery;\r\nconst router = useRouter();\r\nconst shortDramas = ref([]);\r\nconst searchQuery = ref(searchQuery1);\r\nconst showDropdown = ref('');\r\nconst  videoData=ref([]);\r\nconst username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\r\nconst details=ref([]);\r\n\r\nconst toggleDropdown = () => {\r\n  showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\r\n};\r\n\r\nconst isLoggedIn = () => {\r\n  return !!username.value; // 根据用户是否存在判断用户是否已登录\r\n};\r\n\r\nconst logout = () => {\r\n  // 这里添加注销登录的逻辑，比如清除用户信息等\r\n  console.log('注销登录');\r\n};\r\n\r\nconst search = async () => {\r\n  try {\r\n    const res = await request.get('/details/search', { params: { name: searchQuery.value } });\r\n    shortDramas.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error searching:', error);\r\n  }\r\n}\r\n\r\nconst  acquiesce = async (classify) =>{\r\n  try {\r\n    const res=await request.get('/details/selectAcquiesce',{params: {classify: classify}})\r\n    videoData.value=res.data.data\r\n\r\n  }catch (error){\r\n    console.error('Error searching:', error);\r\n  }\r\n}\r\n\r\nconst  loadDetails =async ()=>{\r\n  try {\r\n    const  res=await request.get('/details/finAllName',{params: {name: searchQuery.value}})\r\n    details.value=res.data.data\r\n    console.log(\"=====----\",details.value)\r\n  }catch (error){\r\n    console.error('Error searching:', error);\r\n  }\r\n}\r\n\r\nacquiesce('逆袭')\r\n// 在组件加载后执行搜索\r\nonMounted(() => {\r\n  search(); // 页面加载时执行搜索\r\n  loadDetails()\r\n});\r\nconst goToDramaDetail = (dramaId,name) => {\r\n  // Navigate to the detail page and pass drama ID as route parameter\r\n  router.push({ name: 'videoDetail', params: { id: dramaId ,name: name} });\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.details-s{\r\n  background-color: black;\r\n  margin-right: 30px;\r\n  margin-top: -40px;\r\n}\r\n.drama-details {\r\n  display: flex; /* 使用 flex 布局，使封面图像和详情页水平排列 */\r\n  justify-content: center; /* 水平居中对齐 */\r\n  align-items: center; /* 垂直居中对齐 */\r\n  height: 264px; /* 设置高度与封面图像相同 */\r\n  margin-right: 300px;\r\n}\r\n.details-p p{\r\n  color: whitesmoke;\r\n}\r\n\r\n.image-wrapper {\r\n  width: 184px; /* 调整宽度 */\r\n  height: 264px;\r\n  margin-right: 20px; /* 调整封面图像和详情之间的间距 */\r\n}\r\n\r\n.details-wrapper {\r\n  flex-grow: 1; /* 填充剩余空间 */\r\n  /* 可以添加其他样式，使详情居中 */\r\n}\r\n\r\n.drama-card {\r\n  margin-bottom: 40px; /* 添加底部间距 */\r\n}\r\n\r\n.drama-image{\r\n  border-radius: 10px;\r\n  width: 184px;\r\n  height: 264px;\r\n  margin-left: 120px;\r\n\r\n}\r\n.drama-card p{\r\n  margin-left: 100px;\r\n  margin-top: -100px;\r\n  font-size: 24px;\r\n  font-weight: 800;\r\n}\r\n.drama-card span{\r\n  color: black;\r\n}\r\n.drama-card button{\r\n  margin-right: 222px;\r\n}\r\n\r\n.drama-section{\r\n  background-color: white;\r\n  margin-top: -100px;\r\n}\r\n.search-page {\r\n  margin: -8px;\r\n  padding: 200px;\r\n  background-color: whitesmoke;\r\n}\r\n\r\ninput {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\n.search-containers {\r\n  display: flex;\r\n}\r\n\r\n.search-containers input {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  margin-top: -25px;\r\n  height: 40px;\r\n  width: 400px;\r\n  margin-left: -350px;\r\n  border: 1px solid #ccc; /* 添加边框样式 */\r\n  font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n}\r\n\r\n.search-containers button {\r\n  width: 51px;\r\n  margin-top: -25px;\r\n  padding: 5px;\r\n  background-color: white;\r\n  color: white;\r\n  cursor: pointer;\r\n  height: 51px;\r\n  border: 1px solid #ccc; /* 添加边框样式 */\r\n  font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n\r\n}\r\n.search-containers button:hover {\r\n  background-color: #ff6600; /* 悬停时的颜色变化 */\r\n}\r\n\r\n.search-containers img {\r\n  width: 25px; /* 使图片填充按钮 */\r\n  height: 25px;\r\n}\r\n.nav-list {\r\n  position: fixed;\r\n  top: -16px;\r\n  left: -2px;\r\n  width: 100%;\r\n  list-style: none;\r\n  padding: 5px;\r\n  background-color: black;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n.common-layout{\r\n  background-color: white;\r\n}\r\n.nav-list li {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n\r\n.nav-list li a {\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 20px;\r\n  margin-right: 15px;\r\n  font-family: '宋体', Arial, sans-serif;\r\n}\r\n\r\n.nav-list li a:hover {\r\n  color: #ff6600;\r\n}\r\n\r\n/* 导航项样式 */\r\n.block-list ul {\r\n  margin-left: 120px;\r\n}\r\n\r\n/* 添加头像样式 */\r\n.avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 10px; /* 调整头像和用户名之间的距离 */\r\n  vertical-align: middle; /* 垂直居中对齐 */\r\n}\r\n/* 下拉箭头样式 */\r\n.dropdown-arrow {\r\n  color: white;\r\n  margin-left: 5px; /* 调整箭头与用户名之间的距离 */\r\n}\r\n\r\n/* 用户下拉菜单容器样式 */\r\n.user-dropdown {\r\n  position: relative; /* 相对定位，以便绝对定位下拉菜单 */\r\n}\r\n\r\n/* 下拉菜单样式 */\r\n.dropdown-menu {\r\n  position: absolute; /* 绝对定位 */\r\n  top: 100%; /* 下拉菜单位于用户名下方 */\r\n  right: 0; /* 右对齐 */\r\n  background-color: #333; /* 背景颜色 */\r\n  z-index: 1; /* 设置 z-index 以确保下拉菜单位于其他内容之上 */\r\n  list-style-type: none; /* 去除列表样式 */\r\n  padding: 5px 0; /* 调整内边距 */\r\n}\r\n\r\n/* 下拉菜单项样式 */\r\n.dropdown-menu li {\r\n  margin: 5px 0px;\r\n}\r\n\r\n/* 下拉菜单链接样式 */\r\n.dropdown-menu li a {\r\n  color: white;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n}\r\n\r\n/* 下拉菜单链接悬停样式 */\r\n.dropdown-menu li a:hover {\r\n  background-color: #555;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}