{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"product-sections\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"热门商品\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"product-section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"product-list\"\n};\nconst _hoisted_7 = {\n  class: \"image-wrapper\"\n};\nconst _hoisted_8 = [\"src\", \"alt\"];\nconst _hoisted_9 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.hotProducts, (product, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"product-card\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n      src: product.cover,\n      alt: product.name\n    }, null, 8 /* PROPS */, _hoisted_8), _createCommentVNode(\" 视频播放器 \"), _createElementVNode(\"video\", {\n      ref_for: true,\n      ref: \"videoPlayer\",\n      class: \"video-js vjs-default-skin\",\n      controls: \"\",\n      preload: \"auto\",\n      \"data-setup\": \"{}\"\n    }, [_createElementVNode(\"source\", {\n      src: product.url,\n      type: \"video/mp4\"\n    }, null, 8 /* PROPS */, _hoisted_9), _createCommentVNode(\" 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 \")], 512 /* NEED_PATCH */)]), _createElementVNode(\"p\", null, _toDisplayString(product.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$setup","hotProducts","product","index","key","_hoisted_7","src","cover","alt","name","_hoisted_8","_createCommentVNode","ref_for","ref","controls","preload","url","type","_hoisted_9","_toDisplayString"],"sources":["F:\\video\\vue_video\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"product-sections\">\n    <br>\n    <h1>热门商品</h1>\n    <div class=\"product-section\">\n      <br>\n      <div class=\"product-list\">\n        <div v-for=\"(product, index) in hotProducts\" :key=\"index\" class=\"product-card\" >\n          <div class=\"image-wrapper\">\n            <img :src=\"product.cover\" :alt=\"product.name\">\n            <!-- 视频播放器 -->\n            <video\n                ref=\"videoPlayer\"\n                class=\"video-js vjs-default-skin\"\n                controls\n                preload=\"auto\"\n               \n                data-setup=\"{}\"\n            >\n              <source :src=\"product.url\" type=\"video/mp4\" />\n              <!-- 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 -->\n            </video>\n          </div>\n\n          <p>{{ product.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\nimport videojs from 'video.js';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const hotProducts = ref([]);\n\n    console.log(\"数据:\",hotProducts.value)\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/file/selectTop101');\n        console.log(\"=====================\",res)\n\n          console.log(\"==========ssssss===========\",res)\n          // 如果请求成功，更新商品分类数据\n          hotProducts.value = res.data.data;\n          console.log(\"数据返回=============\",res.data.data)\n\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts,\n    };\n  },\n  mounted() {\n    // 在组件挂载完成后初始化视频播放器\n    // 在组件挂载完成后初始化视频播放器\n    if (this.$refs.videoPlayer) {\n      videojs(this.$refs.videoPlayer);\n    }\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAI;gEACJA,mBAAA,CAAa,YAAT,MAAI;;EACHD,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAAI;;EACCD,KAAK,EAAC;AAAc;;EAEhBA,KAAK,EAAC;AAAe;mBARpC;mBAAA;;uBACEE,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,UAAI,EACJC,UAAa,EACbJ,mBAAA,CAuBM,OAvBNK,UAuBM,GAtBJC,UAAI,EACJN,mBAAA,CAoBM,OApBNO,UAoBM,I,kBAnBJN,mBAAA,CAkBMO,SAAA,QAzBdC,WAAA,CAOwCC,MAAA,CAAAC,WAAW,EAPnD,CAOqBC,OAAO,EAAEC,KAAK;yBAA3BZ,mBAAA,CAkBM;MAlBwCa,GAAG,EAAED,KAAK;MAAEd,KAAK,EAAC;QAC9DC,mBAAA,CAcM,OAdNe,UAcM,GAbJf,mBAAA,CAA8C;MAAxCgB,GAAG,EAAEJ,OAAO,CAACK,KAAK;MAAGC,GAAG,EAAEN,OAAO,CAACO;4BATpDC,UAAA,GAUYC,mBAAA,WAAc,EACdrB,mBAAA,CAUQ;MArBpBsB,OAAA;MAYgBC,GAAG,EAAC,aAAa;MACjBxB,KAAK,EAAC,2BAA2B;MACjCyB,QAAQ,EAAR,EAAQ;MACRC,OAAO,EAAC,MAAM;MAEd,YAAU,EAAC;QAEbzB,mBAAA,CAA8C;MAArCgB,GAAG,EAAEJ,OAAO,CAACc,GAAG;MAAEC,IAAI,EAAC;4BAnB9CC,UAAA,GAoBcP,mBAAA,sCAAyC,C,2BAI7CrB,mBAAA,CAAyB,WAAA6B,gBAAA,CAAnBjB,OAAO,CAACO,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}