{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"product-sections\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"热门剧\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"product-section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"product-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", {\n    class: \"image-wrapper\",\n    style: _normalizeStyle({\n      backgroundImage: 'url(' + _ctx.product.cover + ')'\n    })\n  }, [_createCommentVNode(\" 视频播放器 \"), _createCommentVNode(\"            <video\"), _createCommentVNode(\"                ref=\\\"videoPlayer\\\"\"), _createCommentVNode(\"                class=\\\"video-js vjs-default-skin\\\"\"), _createCommentVNode(\"                controls\"), _createCommentVNode(\"                preload=\\\"auto\\\"\"), _createCommentVNode(\"                :poster=\\\"product.poster\\\"\"), _createCommentVNode(\"                data-setup=\\\"{}\\\"\"), _createCommentVNode(\"            >\"), _createCommentVNode(\"              <source :src=\\\"product.url\\\" type=\\\"video/mp4\\\" />\"), _createCommentVNode(\"              &lt;!&ndash; 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 &ndash;&gt;\"), _createCommentVNode(\"            </video>\"), _createElementVNode(\"p\", null, _toDisplayString(_ctx.product.name), 1 /* TEXT */)], 4 /* STYLE */)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","style","_normalizeStyle","backgroundImage","_ctx","product","cover","_createCommentVNode","_toDisplayString","name"],"sources":["F:\\video\\vue_video\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"product-sections\">\n    <br>\n    <h1>热门剧</h1>\n    <div class=\"product-section\">\n      <br>\n      <div class=\"product-list\">\n        <div class=\"image-wrapper\" :style=\"{ backgroundImage: 'url(' + product.cover + ')' }\">\n          <!-- 视频播放器 -->\n          <!--            <video-->\n          <!--                ref=\"videoPlayer\"-->\n          <!--                class=\"video-js vjs-default-skin\"-->\n          <!--                controls-->\n          <!--                preload=\"auto\"-->\n          <!--                :poster=\"product.poster\"-->\n          <!--                data-setup=\"{}\"-->\n          <!--            >-->\n          <!--              <source :src=\"product.url\" type=\"video/mp4\" />-->\n          <!--              &lt;!&ndash; 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 &ndash;&gt;-->\n          <!--            </video>-->\n          <p>{{ product.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\n// import videojs from 'video.js';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const hotProducts = ref([]);\n\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/file/selectTop101');\n          // 如果请求成功，更新商品分类数据\n          hotProducts.value = res.data.data;\n\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts,\n    };\n  },\n  // mounted() {\n  //   // 在组件挂载完成后初始化视频播放器\n  //   // 在组件挂载完成后初始化视频播放器\n  //   if (this.$refs.videoPlayer) {\n  //     videojs(this.$refs.videoPlayer);\n  //   }\n  // }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.product-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n}\n\n.product-card {\n  width: calc(20% - 20px); /* 设置每个商品占据的宽度为总宽度的20%，减去外边距 */\n  margin-right: 20px; /* 设置商品之间的右外边距 */\n  margin-bottom: 20px; /* 设置商品之间的下外边距 */\n  border: 1px solid #ccc; /* 添加边框样式 */\n  box-sizing: border-box; /* 让边框计入盒模型的总宽度 */\n}\n\n.image-wrapper {\n  width: 100%; /* 图片容器宽度为100% */\n  padding-top: 100%; /* 设置图片容器高度为宽度的百分比，实现等比例缩放 */\n  background-size: cover; /* 设置背景图像大小为覆盖容器 */\n  background-position: center; /* 设置背景图像位置为居中 */\n}\n\n\n@media (max-width: 1200px) {\n  .product-card {\n    width: 23%;\n  }\n}\n\n@media (max-width: 992px) {\n  .product-card {\n    width: 30%;\n  }\n}\n\n@media (max-width: 768px) {\n  .product-card {\n    width: 48%;\n  }\n}\n\n@media (max-width: 576px) {\n  .product-card {\n    width: 100%;\n  }\n}\n\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAI;gEACJA,mBAAA,CAAY,YAAR,KAAG;;EACFD,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAAI;;EACCD,KAAK,EAAC;AAAc;;uBAL7BE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,UAAI,EACJC,UAAY,EACZJ,mBAAA,CAmBM,OAnBNK,UAmBM,GAlBJC,UAAI,EACJN,mBAAA,CAgBM,OAhBNO,UAgBM,GAfJP,mBAAA,CAcM;IAdDD,KAAK,EAAC,eAAe;IAAES,KAAK,EAPzCC,eAAA;MAAAC,eAAA,WAOuEC,IAAA,CAAAC,OAAO,CAACC,KAAK;IAAA;MAC1EC,mBAAA,WAAc,EACdA,mBAAA,sBAAyB,EACzBA,mBAAA,uCAAwC,EACxCA,mBAAA,uDAAwD,EACxDA,mBAAA,4BAA+B,EAC/BA,mBAAA,oCAAqC,EACrCA,mBAAA,8CAA+C,EAC/CA,mBAAA,qCAAsC,EACtCA,mBAAA,iBAAoB,EACpBA,mBAAA,oEAAmE,EACnEA,mBAAA,2EAA8E,EAC9EA,mBAAA,wBAA2B,EAC3Bd,mBAAA,CAAyB,WAAAe,gBAAA,CAAnBJ,IAAA,CAAAC,OAAO,CAACI,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}