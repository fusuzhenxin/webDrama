{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a4a7262\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"video-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"video-container\"\n};\nconst _hoisted_4 = {\n  ref: \"videoPlayer\",\n  controls: \"\",\n  class: \"custom-video\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"button-container\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.videoData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"video\", _hoisted_4, [_createElementVNode(\"source\", {\n    src: $setup.videoData.url,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_5), _createTextVNode(\" Your browser does not support the video tag. \")], 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.displayedEpisodes, (episode, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      onClick: $event => $setup.loadEpisode(episode),\n      class: \"episode-button\"\n    }, _toDisplayString(episode), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [$setup.currentPage > 1 ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: $setup.previousPage\n  }, \"Previous\")) : _createCommentVNode(\"v-if\", true), $setup.currentPage < $setup.totalPages ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: $setup.nextPage\n  }, \"Next\")) : _createCommentVNode(\"v-if\", true)])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \" Loading... \"));\n}","map":{"version":3,"names":["key","class","ref","controls","$setup","videoData","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","src","url","type","_hoisted_5","_createTextVNode","_hoisted_6","_Fragment","_renderList","displayedEpisodes","episode","index","onClick","$event","loadEpisode","_hoisted_7","currentPage","previousPage","_createCommentVNode","totalPages","nextPage","_hoisted_8"],"sources":["F:\\video\\vue_video\\src\\views\\VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" v-if=\"videoData\">\r\n    <div class=\"video-wrapper\">\r\n      <div class=\"video-container\">\r\n        <video ref=\"videoPlayer\" controls class=\"custom-video\">\r\n          <source :src=\"videoData.url\" type=\"video/mp4\">\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <button v-for=\"(episode, index) in displayedEpisodes\" :key=\"index\" @click=\"loadEpisode(episode)\" class=\"episode-button\">\r\n          {{ episode }}\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <button v-if=\"currentPage > 1\" @click=\"previousPage\">Previous</button>\r\n        <button v-if=\"currentPage < totalPages\" @click=\"nextPage\">Next</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    Loading...\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\nconst episodesPerPage = 25;\r\nconst numberOfEpisodes = ref(0);\r\nconst currentPage = ref(1);\r\n\r\nconst route = useRoute();\r\nconst videoId = route.params.id;\r\nconst videoName = route.params.name;\r\n\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const res = await request.get(`/file/${videoId}`);\r\n    videoData.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n  loadNumberOfEpisodes();\r\n});\r\n\r\nconst displayedEpisodes = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const endIndex = startIndex + episodesPerPage;\r\n  return Array.from({ length: episodesPerPage }, (_, index) => startIndex + index + 1);\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${episodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst nextPage = () => {\r\n  if (currentPage.value < totalPages.value) {\r\n    currentPage.value++;\r\n  }\r\n};\r\n\r\nconst previousPage = () => {\r\n  if (currentPage.value > 1) {\r\n    currentPage.value--;\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  background-color: black;\r\n}\r\n\r\n.video-wrapper {\r\n  display: flex;\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n}\r\n\r\n.custom-video {\r\n  width: 1000px;\r\n  height: 650px;\r\n  background-color: white;\r\n  background-color: rgba(255, 255, 255, 0.6); /* 白色背景，透明度为 0.5 */\r\n}\r\n\r\n.button-container {\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap; /* 可以换行 */\r\n  justify-content: flex-start; /* 按钮从左到右排列 */\r\n}\r\n\r\n.button-container button {\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  width: 100px; /* 设置按钮宽度 */\r\n}\r\n\r\n.episode-button {\r\n  height: 50px; /* 设置按钮高度 */\r\n  background-color: #333333; /* 设置按钮背景颜色 */\r\n  border: none;\r\n  color: white; /* 设置文字颜色 */\r\n  text-align: center; /* 文字居中 */\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px; /* 设置文字大小 */\r\n  cursor: pointer;\r\n}\r\n\r\n.episode-button:focus {\r\n  outline: none; /* 去除按钮聚焦时的边框 */\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAiB;;EACnBC,GAAG,EAAC,aAAa;EAACC,QAAQ,EAAR,EAAQ;EAACF,KAAK,EAAC;;mBAJhD;;EASWA,KAAK,EAAC;AAAkB;mBATnC;;EAAAD,GAAA;AAAA;;SAC+BI,MAAA,CAAAC,SAAS,I,cAAtCC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJD,mBAAA,CAKM,OALNE,UAKM,GAJJF,mBAAA,CAGQ,SAHRG,UAGQ,GAFNH,mBAAA,CAA8C;IAArCI,GAAG,EAAER,MAAA,CAAAC,SAAS,CAACQ,GAAG;IAAEC,IAAI,EAAC;0BAL5CC,UAAA,GAAAC,gBAAA,CAKwD,gDAEhD,E,2BAEFR,mBAAA,CAIM,OAJNS,UAIM,I,kBAHJX,mBAAA,CAESY,SAAA,QAZjBC,WAAA,CAU2Cf,MAAA,CAAAgB,iBAAiB,EAV5D,CAUwBC,OAAO,EAAEC,KAAK;yBAA9BhB,mBAAA,CAES;MAF8CN,GAAG,EAAEsB,KAAK;MAAGC,OAAK,EAAAC,MAAA,IAAEpB,MAAA,CAAAqB,WAAW,CAACJ,OAAO;MAAGpB,KAAK,EAAC;wBAClGoB,OAAO,wBAXpBK,UAAA;oCAcMlB,mBAAA,CAGM,cAFUJ,MAAA,CAAAuB,WAAW,Q,cAAzBrB,mBAAA,CAAsE;IAf9EN,GAAA;IAewCuB,OAAK,EAAEnB,MAAA,CAAAwB;KAAc,UAAQ,KAfrEC,mBAAA,gBAgBsBzB,MAAA,CAAAuB,WAAW,GAAGvB,MAAA,CAAA0B,UAAU,I,cAAtCxB,mBAAA,CAAuE;IAhB/EN,GAAA;IAgBiDuB,OAAK,EAAEnB,MAAA,CAAA2B;KAAU,MAAI,KAhBtEF,mBAAA,e,wBAoBEvB,mBAAA,CAEM,OAtBR0B,UAAA,EAoBc,cAEZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}