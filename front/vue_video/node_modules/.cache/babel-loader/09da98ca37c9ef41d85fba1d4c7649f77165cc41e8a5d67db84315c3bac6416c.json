{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute } from 'vue-router';\n// import Navigation from \"@/views/navigation.vue\";\n\nimport { useRouter } from \"vue-router\";\nconst episodesPerPage = 25;\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isLiked = ref(false);\n    const isCollect = ref(false);\n    const videoData = ref(null);\n    const videoPlayer = ref(null);\n    const numberOfEpisodes = ref(0);\n    const Descriptions = ref(null);\n    const currentPage = ref(1);\n    const route = useRoute();\n    const videoName = route.params.name;\n    console.log(\"idididid\", videoName);\n    const showDropdown = ref(false);\n    const username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\n    const searchQuery = ref('');\n    const router = useRouter();\n    const toggleDropdown = () => {\n      showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\n    };\n    const isLoggedIn = () => {\n      return !!username.value; // 根据用户是否存在判断用户是否已登录\n    };\n    const search = () => {\n      console.log('Search method called');\n      // 如果搜索框有内容，执行路由跳转\n      if (searchQuery.value.trim() !== '') {\n        router.push({\n          name: 'search',\n          params: {\n            searchQuery: searchQuery.value\n          }\n        }); // 这里替换为你要跳转的页面路径\n      }\n    };\n    const logout = () => {\n      // 这里添加注销登录的逻辑，比如清除用户信息等\n      console.log('注销登录');\n    };\n    //第一集url和短剧的信息\n    const loadVideoData = async () => {\n      try {\n        const res = await request.get('/file/Inception', {\n          params: {\n            name: videoName\n          }\n        });\n        // const res = await request.get(`/file/${videoId}`);\n\n        videoData.value = res.data.data;\n        console.log(\"[[[\", videoData.value);\n      } catch (error) {\n        console.error('Error loading video data:', error);\n      }\n    };\n\n    //每个剧的详情\n    const loadDescription = async () => {\n      try {\n        const res = await request.get('/details/finAll', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value = res.data.data;\n        console.log(\"res.data.data----------\", res.data.data);\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    //获取这个剧有多少集\n    const loadNumberOfEpisodes = async () => {\n      try {\n        const res = await request.get('/videos/diversity', {\n          params: {\n            name: videoName\n          }\n        });\n        numberOfEpisodes.value = res.data.data;\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    //点赞数量\n    const Likes = async () => {\n      if (!isLiked.value) {\n        // 如果当前未点赞，则进行点赞操作\n        // 发送点赞请求...\n        // 更新点赞数量...\n        const res = await request.get('/details/likes', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = true;\n      } else {\n        // 如果当前已经点赞，则取消点赞操作\n        // 发送取消点赞请求...\n        // 更新点赞数量...\n        const res = await request.get('/details/likesDelete', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = false;\n      }\n    };\n\n    //收藏数量\n    const Collect = async () => {\n      if (!isCollect.value) {\n        const res = await request.get('/details/collect', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isCollect.value = true;\n      } else {\n        const res = await request.get('/details/collectDelete', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        isCollect.value = false;\n      }\n    };\n    onMounted(() => {\n      loadVideoData();\n      loadNumberOfEpisodes();\n      loadDescription();\n    });\n    const displayedEpisodes = computed(() => {\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\n      return Array.from({\n        length: endIndex - startIndex\n      }, (_, index) => startIndex + index + 1);\n    });\n    const totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\n    const loadEpisode = async episodeNumber => {\n      console.log(\"?????????\", episodeNumber);\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const actualEpisodeNumber = startIndex + episodeNumber;\n      try {\n        const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\n        const url = res.data.data;\n        if (videoPlayer.value) {\n          videoPlayer.value.src = url;\n          videoPlayer.value.load();\n          videoPlayer.value.play();\n        }\n      } catch (error) {\n        console.error('Error loading episode:', error);\n      }\n    };\n    const setCurrentPage = page => {\n      currentPage.value = page;\n    };\n    const __returned__ = {\n      isLiked,\n      isCollect,\n      videoData,\n      videoPlayer,\n      numberOfEpisodes,\n      Descriptions,\n      episodesPerPage,\n      currentPage,\n      route,\n      videoName,\n      showDropdown,\n      username,\n      searchQuery,\n      router,\n      toggleDropdown,\n      isLoggedIn,\n      search,\n      logout,\n      loadVideoData,\n      loadDescription,\n      loadNumberOfEpisodes,\n      Likes,\n      Collect,\n      displayedEpisodes,\n      totalPages,\n      loadEpisode,\n      setCurrentPage,\n      ref,\n      onMounted,\n      computed,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","request","useRoute","useRouter","episodesPerPage","isLiked","isCollect","videoData","videoPlayer","numberOfEpisodes","Descriptions","currentPage","route","videoName","params","name","console","log","showDropdown","username","searchQuery","router","toggleDropdown","value","isLoggedIn","search","trim","push","logout","loadVideoData","res","get","data","error","loadDescription","loadNumberOfEpisodes","Likes","quantity","Collect","collect","displayedEpisodes","startIndex","endIndex","Math","min","Array","from","length","_","index","totalPages","ceil","loadEpisode","episodeNumber","actualEpisodeNumber","url","src","load","play","setCurrentPage","page"],"sources":["F:/video/vue_video/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n\r\n  <div class=\"container\"  v-if=\"videoData\">\r\n    <div class=\"navigation-wrapper\">\r\n      <div class=\"common-layout\">\r\n        <el-container>\r\n          <el-header>\r\n\r\n            <nav>\r\n              <ul class=\"nav-list\">\r\n                <li><h1 style=\"color: white;margin-right: 20px;margin-left: 26px\">短剧网</h1></li>\r\n\r\n                <!-- 搜索框和按钮 -->\r\n                <li class=\"search-box\">\r\n                  <div class=\"search-container\">\r\n                    <input type=\"text\" placeholder=\"搜索\" v-model=\"searchQuery\" @keyup.enter=\"search\">\r\n                    <button @click=\"search\"><img src=\"../assets/1.png\"></button>\r\n                  </div>\r\n                </li>\r\n                <ul class=\"top-nav-list\">\r\n                  <li v-if=\"isLoggedIn\" @click=\"toggleDropdown\" class=\"user-dropdown\">\r\n                    <img  src=\"../assets/img_7.png\" class=\"avatar\">\r\n                    <span style=\"color: white;\" class=\"username\">{{ username }}</span>\r\n                    <!-- 下拉菜单 -->\r\n                    <ul v-if=\"showDropdown\" class=\"dropdown-menu\">\r\n                      <li><a @click=\"logout\">立刻登录</a></li>\r\n                    </ul>\r\n                  </li>\r\n                </ul>\r\n\r\n                <!-- 导航项 -->\r\n                <div class=\"block-list\">\r\n                  <ul>\r\n                    <!-- 首页导航项 -->\r\n                    <li><router-link to=\"/helloWorld\">首页</router-link></li>\r\n                    <!-- 购物车导航项 -->\r\n                    <li><router-link to=\"/Counterattack\">逆袭</router-link></li>\r\n                    <!-- 订单导航项 -->\r\n                    <li><router-link to=\"/traversing\">穿越</router-link></li>\r\n                    <!-- 我的账户导航项 -->\r\n                    <li><router-link to=\"/sweet\">甜宠</router-link></li>\r\n                    <!-- 我的收藏夹导航项 -->\r\n                    <li><router-link to=\"/rebirth\">重生</router-link></li>\r\n                  </ul>\r\n                </div>\r\n              </ul>\r\n            </nav>\r\n          </el-header>\r\n        </el-container>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <div class=\"video-wrapper\">\r\n      <div class=\"video-container\">\r\n        <!-- 修改的地方在这里 -->\r\n        <video id=\"videoPlayer\" class=\"video-js vjs-default-skin\" controls>\r\n          <source :src=\"videoData.url\" type=\"application/x-mpegURL\">\r\n          Your browser does not support the video tag.\r\n        </video>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"pagination-container\">\r\n\r\n      <h1 style=\"color: white\">{{ videoData.name }}</h1>\r\n      <p style=\"color: whitesmoke\">主演：{{Descriptions && Descriptions.actors}}</p>\r\n      <div>\r\n        <button>{{ Descriptions && Descriptions.classify }}</button>\r\n        <button style=\"margin-left: 10px\">民国</button>\r\n      </div>\r\n      <div>\r\n        <p style=\"color: darkgray\">{{Descriptions && Descriptions.description}}</p>\r\n      </div>\r\n\r\n      <div class=\"like-favorite-container\">\r\n        <div class=\"like-container\">\r\n          <button class=\"like-button\" @click=\"Likes\">{{ isLiked ? '取消点赞' : '点赞' }}</button>\r\n          <span class=\"like-count\">{{Descriptions && Descriptions.quantity}}</span>\r\n        </div>\r\n        <div class=\"favorite-container\">\r\n          <button class=\"favorite-button\" @click=\"Collect()\">{{ isCollect ? '取消收藏' : '收藏' }}</button>\r\n          <span class=\"favorite-count\">{{Descriptions && Descriptions.collect}}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <hr>\r\n      <div style=\"display: flex; justify-content: space-between;\">\r\n        <div>\r\n          <h2 style=\"color: white\">选集</h2>\r\n        </div>\r\n        <div>\r\n          <h4 style=\"color: #8a8b8d;margin-right: 240px;margin-top: 30px\">共{{numberOfEpisodes}}集</h4>\r\n        </div>\r\n      </div>\r\n      <div class=\"button-bottom-half\">  <!-- 上半部分 -->\r\n        <div class=\"button-inner-container\">\r\n          <button v-for=\"(episode, index) in displayedEpisodes\" :key=\"index\" @click=\"loadEpisode(index+1)\" class=\"episode-button\">\r\n            {{ episode }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"pagination-top-half\"> <!-- 下半部分 -->\r\n        <!-- 这里放其他内容 -->\r\n        <div class=\"pagination\">\r\n          <button v-for=\"page in totalPages\" :key=\"page\" @click=\"setCurrentPage(page)\" :class=\"{ active: page === currentPage }\">{{ page }}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div v-else>\r\n    Loading...\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n// import Navigation from \"@/views/navigation.vue\";\r\n\r\nconst isLiked = ref(false);\r\nconst isCollect=ref(false);\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\nconst  Descriptions= ref(null)\r\nconst episodesPerPage = 25;\r\nconst currentPage = ref(1);\r\nconst route = useRoute();\r\nconst videoName = route.params.name;\r\nconsole.log(\"idididid\",videoName)\r\nconst showDropdown = ref(false);\r\nconst username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\r\nconst searchQuery = ref('')\r\nimport { useRouter } from \"vue-router\";\r\nconst  router = useRouter();\r\nconst toggleDropdown = () => {\r\n  showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\r\n};\r\n\r\nconst isLoggedIn = () => {\r\n  return !!username.value; // 根据用户是否存在判断用户是否已登录\r\n};\r\nconst search = () => {\r\n  console.log('Search method called');\r\n  // 如果搜索框有内容，执行路由跳转\r\n  if (searchQuery.value.trim() !== '') {\r\n    router.push({name: 'search',params:{searchQuery: searchQuery.value}}); // 这里替换为你要跳转的页面路径\r\n  }\r\n};\r\nconst logout = () => {\r\n  // 这里添加注销登录的逻辑，比如清除用户信息等\r\n  console.log('注销登录');\r\n};\r\n//第一集url和短剧的信息\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const res = await request.get('/file/Inception',{params: {name: videoName} });\r\n    // const res = await request.get(`/file/${videoId}`);\r\n\r\n    videoData.value = res.data.data;\r\n    console.log(\"[[[\",videoData.value)\r\n  } catch (error) {\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\n//每个剧的详情\r\nconst loadDescription =async () => {\r\n  try {\r\n    const res=await request.get('/details/finAll', {params: {name: videoName} })\r\n    Descriptions.value=res.data.data\r\n    console.log(\"res.data.data----------\",res.data.data)\r\n  }catch (error){\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n}\r\n\r\n//获取这个剧有多少集\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\n//点赞数量\r\nconst Likes = async () => {\r\n  if (!isLiked.value) {\r\n    // 如果当前未点赞，则进行点赞操作\r\n    // 发送点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likes',{params: { name: videoName}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = true;\r\n  } else {\r\n    // 如果当前已经点赞，则取消点赞操作\r\n    // 发送取消点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likesDelete',{params: { name: videoName}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = false;\r\n  }\r\n\r\n};\r\n\r\n//收藏数量\r\nconst Collect = async () => {\r\n  if (!isCollect.value){\r\n    const res = await request.get('/details/collect',{params: { name: videoName}});\r\n    Descriptions.value.collect=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isCollect.value=true\r\n  }else {\r\n    const res = await request.get('/details/collectDelete',{params: { name: videoName}});\r\n    Descriptions.value.collect=res.data.data\r\n    isCollect.value=false\r\n  }\r\n\r\n};\r\n\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n  loadNumberOfEpisodes();\r\n  loadDescription();\r\n});\r\n\r\nconst displayedEpisodes = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\r\n  return Array.from({ length: endIndex - startIndex }, (_, index) => startIndex + index + 1);\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\r\n\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  console.log(\"?????????\", episodeNumber);\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const actualEpisodeNumber = startIndex + episodeNumber;\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst setCurrentPage = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  /* 样式部分省略，保持不变 */\r\n  /* 顶部导航栏样式 */\r\n  .nav-list {\r\n    position: fixed;\r\n    top: -17px;\r\n    left: 9px;\r\n    width: 98%;\r\n    list-style: none;\r\n    padding: 5px;\r\n    background-color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    z-index: 1000;\r\n  }\r\n  .common-layout{\r\n    background-color: white;\r\n  }\r\n  .nav-list li {\r\n    display: inline-block;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .nav-list li a {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-size: 20px;\r\n    margin-right: 15px;\r\n    font-family: '宋体', Arial, sans-serif;\r\n  }\r\n\r\n  .nav-list li a:hover {\r\n    color: #ff6600;\r\n  }\r\n\r\n  /* 导航项样式 */\r\n  .block-list ul {\r\n    margin-left: 120px;\r\n  }\r\n\r\n  /* 图片样式 */\r\n  .logo-container {\r\n    top: 0px;\r\n    left: 0;\r\n    padding: 0px;\r\n    z-index: 1001; /* 确保图片在导航栏上方 */\r\n\r\n  }\r\n\r\n  .logo {\r\n    margin-top: 73px;\r\n    width: 1424px;\r\n    height: 480px;\r\n    margin-right: 0px;\r\n    margin-left: -12px;\r\n  }\r\n  .search-box {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 180px; /* 将搜索框和按钮向右移动 */\r\n    position: absolute; /* 设置绝对定位 */\r\n    left: 600px; /* 距离右边缘的距离 */\r\n  }\r\n\r\n  .search-container {\r\n    display: flex;\r\n  }\r\n\r\n  .search-container input {\r\n    padding: 5px;\r\n    margin-right: 0px;\r\n    height: 40px;\r\n    width: 200px;\r\n    border: 1px solid #ccc; /* 添加边框样式 */\r\n    font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n  }\r\n\r\n  .search-container button {\r\n    width: 51px;\r\n    margin-top: 0px;\r\n    padding: 5px;\r\n    background-color: white;\r\n    color: white;\r\n    cursor: pointer;\r\n    height: 51px;\r\n    border: 1px solid #ccc; /* 添加边框样式 */\r\n    font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n\r\n  }\r\n  .search-container button:hover {\r\n    background-color: #ff6600; /* 悬停时的颜色变化 */\r\n  }\r\n\r\n  .search-container img {\r\n    width: 25px; /* 使图片填充按钮 */\r\n    height: 25px;\r\n  }\r\n  /* 添加头像样式 */\r\n  .avatar {\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-right: 10px; /* 调整头像和用户名之间的距离 */\r\n    vertical-align: middle; /* 垂直居中对齐 */\r\n  }\r\n  /* 下拉箭头样式 */\r\n  .dropdown-arrow {\r\n    color: white;\r\n    margin-left: 5px; /* 调整箭头与用户名之间的距离 */\r\n  }\r\n\r\n  /* 用户下拉菜单容器样式 */\r\n  .user-dropdown {\r\n    position: relative; /* 相对定位，以便绝对定位下拉菜单 */\r\n  }\r\n\r\n  /* 下拉菜单样式 */\r\n  .dropdown-menu {\r\n    position: absolute; /* 绝对定位 */\r\n    top: 100%; /* 下拉菜单位于用户名下方 */\r\n    right: 0; /* 右对齐 */\r\n    background-color: #333; /* 背景颜色 */\r\n    z-index: 1; /* 设置 z-index 以确保下拉菜单位于其他内容之上 */\r\n    list-style-type: none; /* 去除列表样式 */\r\n    padding: 5px 0; /* 调整内边距 */\r\n  }\r\n\r\n  /* 下拉菜单项样式 */\r\n  .dropdown-menu li {\r\n    margin: 5px 0px;\r\n  }\r\n\r\n  /* 下拉菜单链接样式 */\r\n  .dropdown-menu li a {\r\n    color: white;\r\n    text-decoration: none;\r\n    font-size: 14px;\r\n  }\r\n\r\n  /* 下拉菜单链接悬停样式 */\r\n  .dropdown-menu li a:hover {\r\n    background-color: #555;\r\n  }\r\n  position: relative;\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  background-color: black;\r\n  margin-top: 50px;\r\n  display: flex;\r\n\r\n}\r\n.navigation-wrapper {\r\n  position: absolute;\r\n  top: 10px; /* 调整 Navigation 的垂直位置 */\r\n  left: 10px; /* 调整 Navigation 的水平位置 */\r\n}\r\n.large-frame{\r\n  background-color: white;\r\n}\r\n.video-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black; /* 添加按钮边框样式 */\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n  flex: 1;\r\n}\r\n\r\n.custom-video {\r\n  width: 1000px;\r\n  height: 800px;\r\n  background-color: white;\r\n  background-color: rgba(255, 255, 255, 0.6); /* 白色背景，透明度为 0.5 */\r\n}\r\n\r\n\r\n.button-inner-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  width: calc(100% - 20px); /* 设置按钮宽度为容器宽度的 20%，减去间距 */\r\n}\r\n.episode-button {\r\n\r\n  height: 50px;\r\n  background-color: #333333;\r\n  //border: 2px solid white; /* 添加按钮边框样式 */\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  padding: 20px; /* 增加按钮内边距 */\r\n  line-height: 1; /* 让文本垂直居中 */\r\n  margin-left: 5px;\r\n  border-radius: 2px;\r\n}\r\n.button-inner-container button {\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #333333;\r\n  border: none;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination-container {\r\n  //border: 2px solid #ccc; /* 添加大边框样式 */\r\n  padding: 13px; /* 添加内边距 */\r\n  margin-bottom: 10px; /* 调整与按钮边框的间距 */\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.pagination button {\r\n  margin-right: 5px;\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button.active {\r\n  background-color: #555;\r\n}\r\n.pagination-top-half {\r\n  flex: 1;\r\n}\r\n\r\n.button-bottom-half {\r\n  flex: 1;\r\n}\r\n\r\n.like-favorite-container {\r\n  border: 1px solid darkgray;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.like-container, .favorite-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.like-button, .favorite-button {\r\n  padding: 5px 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: darkgray;\r\n  cursor: pointer;\r\n}\r\n\r\n.like-count, .favorite-count {\r\n  margin-left: 5px;\r\n  color: white;\r\n}\r\n\r\n.like-button:hover, .favorite-button:hover {\r\n  background-color: darkgray;\r\n  color: white;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}