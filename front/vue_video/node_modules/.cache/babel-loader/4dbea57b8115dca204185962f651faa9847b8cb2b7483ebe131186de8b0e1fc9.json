{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a4a7262\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"product-detail\"\n};\nconst _hoisted_2 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.product.name), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $setup.product.cover,\n    alt: $setup.product.name,\n    class: \"product-image\"\n  }, null, 8 /* PROPS */, _hoisted_2), _createElementVNode(\"p\", null, _toDisplayString($setup.product.description), 1 /* TEXT */), _createCommentVNode(\" 其他产品详情 \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","product","name","src","cover","alt","_hoisted_2","description","_createCommentVNode"],"sources":["F:\\video\\vue_video\\src\\views\\VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"product-detail\">\r\n    <h1>{{ product.name }}</h1>\r\n    <img :src=\"product.cover\" :alt=\"product.name\" class=\"product-image\">\r\n    <p>{{ product.description }}</p>\r\n    <!-- 其他产品详情 -->\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\n\r\nconst productId = $route.params.id; // 从路由参数中获取产品ID\r\n\r\n// 使用 ref 创建响应式数据\r\nconst product = ref(null);\r\n\r\n// 定义异步加载产品详情数据的方法\r\nconst loadProductDetail = async () => {\r\n  try {\r\n    // 发起请求获取产品详情数据\r\n    const res = await request.get(`/product/${productId}`);\r\n    // 如果请求成功，更新产品详情数据\r\n    product.value = res.data;\r\n  } catch (error) {\r\n    // 捕获并处理请求错误\r\n    console.error('Error loading product detail:', error);\r\n  }\r\n};\r\n\r\nonMounted(loadProductDetail); // 在组件挂载后加载产品详情数据\r\n</script>\r\n\r\n<style scoped>\r\n/* 样式可以根据需求自行添加 */\r\n.product-detail {\r\n  /* 产品详情页面样式 */\r\n}\r\n.product-image {\r\n  /* 产品图片样式 */\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;mBAD7B;;uBACEC,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAA2B,YAAAC,gBAAA,CAApBC,MAAA,CAAAC,OAAO,CAACC,IAAI,kBACnBJ,mBAAA,CAAoE;IAA9DK,GAAG,EAAEH,MAAA,CAAAC,OAAO,CAACG,KAAK;IAAGC,GAAG,EAAEL,MAAA,CAAAC,OAAO,CAACC,IAAI;IAAEP,KAAK,EAAC;0BAHxDW,UAAA,GAIIR,mBAAA,CAAgC,WAAAC,gBAAA,CAA1BC,MAAA,CAAAC,OAAO,CAACM,WAAW,kBACzBC,mBAAA,YAAe,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}