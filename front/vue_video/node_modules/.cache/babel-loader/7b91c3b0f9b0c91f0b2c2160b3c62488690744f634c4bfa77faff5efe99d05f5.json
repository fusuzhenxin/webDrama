{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, onMounted } from 'vue';\n// tableData-表格数据列表，total-数据总长度\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\nimport Navigation from \"@/views/navigation.vue\";\n// const pageNum = ref(1);\n// const pageSize = ref(10);\n// const total = ref(100);\n//\n// const handleSizeChange = (val) => {\n//   pageSize.value = val;\n// };\n//\n// const handleCurrentChange = (val) => {\n//   pageNum.value = val;\n// };\n// Reactive data for short dramas\n\nexport default {\n  __name: 'sweet',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const tableData = ref([]);\n    const total = ref(0);\n    // searchData-向后端分页查询的对象，即当前页和每页总数\n    const searchData = reactive({\n      current: 1,\n      limit: 10\n    });\n    const shortDramas = ref([]);\n    // Method to fetch short drama data asynchronously\n    //表格数据生成\n    function tableAddData() {\n      //给表格添加数据，调接口赋值同理\n      var index = 0;\n      //因为数据是固定生成的，容易出错，所以这里要清一下\n      tableData.value = [];\n      for (var i = 1; i <= 101; i++) {\n        let data = {};\n        data.id = i;\n        data.data = `我的数据是：${i}`;\n        tableData.value.push(data);\n        index += 1;\n      }\n      total.value = index;\n    }\n    //传入分页参数\n    function pageQuery(current, limit) {\n      // 模仿分页查询，将表格的数据裁切一下\n\n      //     1     2     3\n      //下标 0-9 10-19 20-29\n      let begin = current * limit - limit;\n      //这里不减一是因为，slice方法裁切是左闭右开数组\n      let end = current * limit;\n      tableData.value = tableData.value.slice(begin, end);\n    }\n    function getData(val = 1) {\n      searchData.current = val;\n      // 先把数据搞上\n      tableAddData();\n      pageQuery(searchData.current, searchData.limit);\n    }\n    onMounted(async () => {\n      getData();\n    });\n    const loadShortDramas = async classify => {\n      try {\n        // Fetch short drama data\n        const res = await request.get('/details/selectTop10', {\n          params: {\n            classify: classify\n          }\n        });\n        // If successful, update the short drama data\n        shortDramas.value = res.data.data;\n        console.log(\"====\", shortDramas.value);\n      } catch (error) {\n        // Catch and handle errors\n        console.error('Error loading short dramas:', error);\n      }\n    };\n    loadShortDramas(\"甜宠\");\n\n    // Router instance\n    const router = useRouter();\n\n    // Method to navigate to drama detail page\n    const goToDramaDetail = (dramaId, name) => {\n      // Navigate to the detail page and pass drama ID as route parameter\n      router.push({\n        name: 'videoDetail',\n        params: {\n          id: dramaId,\n          name: name\n        }\n      });\n    };\n    const __returned__ = {\n      tableData,\n      total,\n      searchData,\n      shortDramas,\n      tableAddData,\n      pageQuery,\n      getData,\n      loadShortDramas,\n      router,\n      goToDramaDetail,\n      ref,\n      reactive,\n      onMounted,\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      Navigation\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","request","useRouter","Navigation","tableData","total","searchData","current","limit","shortDramas","tableAddData","index","value","i","data","id","push","pageQuery","begin","end","slice","getData","val","loadShortDramas","classify","res","get","params","console","log","error","router","goToDramaDetail","dramaId","name"],"sources":["F:/video/vue_video/src/views/sweet.vue"],"sourcesContent":["<template>\r\n  <div class=\"drama-sections\">\r\n    <navigation/>\r\n    <br>\r\n    <h1>甜宠</h1>\r\n    <div class=\"drama-section\">\r\n      <br>\r\n      <div class=\"drama-list\">\r\n        <div v-for=\"(drama, index) in shortDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id,drama.name)\">\r\n          <div class=\"image-wrapper\">\r\n            <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\r\n            <div class=\"play-button\">\r\n              <i class=\"fas fa-play\"></i>\r\n            </div>\r\n          </div>\r\n          <p>{{ drama.name }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- 分页组件 -->\r\n<h1>22</h1>\r\n\r\n  <div>\r\n    <el-table :data=\"tableData\" style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"这里是id\" width=\"180\" />\r\n      <el-table-column prop=\"data\" label=\"这里是一些数据\" width=\"180\" />\r\n    </el-table>\r\n    <el-pagination\r\n        :current-page=\"searchData.current\"\r\n        :page-size=\"searchData.limit\"\r\n        :total=\"total\"\r\n        :pager-count=\"6\"\r\n        style=\"text-align: center;margin-top: 20px;\"\r\n        layout=\"jumper, prev, pager, next, total\"\r\n        @current-change=\"getData\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n\r\nimport {ref,reactive,onMounted} from 'vue'\r\n// tableData-表格数据列表，total-数据总长度\r\nconst tableData=ref([])\r\nconst total=ref(0)\r\n// searchData-向后端分页查询的对象，即当前页和每页总数\r\nconst searchData=reactive({\r\n  current:1,\r\n  limit:10\r\n})\r\n\r\nimport request from \"@/utils/request\";\r\nimport { useRouter } from 'vue-router';\r\nimport Navigation from \"@/views/navigation.vue\";\r\n// const pageNum = ref(1);\r\n// const pageSize = ref(10);\r\n// const total = ref(100);\r\n//\r\n// const handleSizeChange = (val) => {\r\n//   pageSize.value = val;\r\n// };\r\n//\r\n// const handleCurrentChange = (val) => {\r\n//   pageNum.value = val;\r\n// };\r\n// Reactive data for short dramas\r\nconst shortDramas = ref([]);\r\n// Method to fetch short drama data asynchronously\r\n//表格数据生成\r\nfunction tableAddData(){\r\n  //给表格添加数据，调接口赋值同理\r\n  var index=0\r\n  //因为数据是固定生成的，容易出错，所以这里要清一下\r\n  tableData.value=[]\r\n  for(var i=1;i<=101;i++){\r\n    let data={}\r\n    data.id=i\r\n    data.data=`我的数据是：${i}`\r\n    tableData.value.push(data)\r\n    index+=1\r\n  }\r\n  total.value=index\r\n}\r\n//传入分页参数\r\nfunction pageQuery(current,limit){\r\n  // 模仿分页查询，将表格的数据裁切一下\r\n\r\n  //     1     2     3\r\n  //下标 0-9 10-19 20-29\r\n  let begin=current*limit-limit\r\n  //这里不减一是因为，slice方法裁切是左闭右开数组\r\n  let end=current*limit\r\n  tableData.value=tableData.value.slice(begin,end)\r\n}\r\nfunction getData(val = 1){\r\n  searchData.current=val\r\n  // 先把数据搞上\r\n  tableAddData()\r\n  pageQuery(searchData.current,searchData.limit)\r\n}\r\n\r\nonMounted(async()=>{\r\n  getData()\r\n})\r\nconst loadShortDramas = async (classify) => {\r\n  try {\r\n    // Fetch short drama data\r\n    const res = await request.get('/details/selectTop10', { params: { classify: classify } });\r\n    // If successful, update the short drama data\r\n    shortDramas.value = res.data.data;\r\n    console.log(\"====\",shortDramas.value)\r\n  } catch (error) {\r\n    // Catch and handle errors\r\n    console.error('Error loading short dramas:', error);\r\n  }\r\n};\r\nloadShortDramas(\"甜宠\");\r\n\r\n// Router instance\r\nconst router = useRouter();\r\n\r\n// Method to navigate to drama detail page\r\nconst goToDramaDetail = (dramaId,name) => {\r\n  // Navigate to the detail page and pass drama ID as route parameter\r\n  router.push({ name: 'videoDetail', params: { id: dramaId ,name: name} });\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* CSS styles for the drama section */\r\n.pagination-container {\r\n  margin: 200px auto; /* 居中显示 */\r\n  text-align: center; /* 文字居中 */\r\n}\r\nh1 {\r\n  margin: 40px 0 0;\r\n  padding: 30px;\r\n}\r\n\r\n.drama-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n}\r\n\r\n.drama-card {\r\n  width: calc(20% - 20px);\r\n  margin-left: 10px;\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.drama-card .image-wrapper {\r\n  width: 190px;\r\n  height: 266px;\r\n  overflow: hidden;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.drama-card img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.image-wrapper {\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.drama-image {\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.image-wrapper:hover .drama-image {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.play-button {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.image-wrapper:hover .play-button {\r\n  opacity: 1;\r\n}\r\n\r\n.play-button i {\r\n  color: white;\r\n  font-size: 24px;\r\n}\r\n</style>\r\n"],"mappings":";AAyCA,SAAQA,GAAG,EAACC,QAAQ,EAACC,SAAS,QAAO,KAAK;AAC1C;AASA,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;IAtBA,MAAMC,SAAS,GAACN,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMO,KAAK,GAACP,GAAG,CAAC,CAAC,CAAC;IAClB;IACA,MAAMQ,UAAU,GAACP,QAAQ,CAAC;MACxBQ,OAAO,EAAC,CAAC;MACTC,KAAK,EAAC;IACR,CAAC,CAAC;IAiBF,MAAMC,WAAW,GAAGX,GAAG,CAAC,EAAE,CAAC;IAC3B;IACA;IACA,SAASY,YAAYA,CAAA,EAAE;MACrB;MACA,IAAIC,KAAK,GAAC,CAAC;MACX;MACAP,SAAS,CAACQ,KAAK,GAAC,EAAE;MAClB,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAE,GAAG,EAACA,CAAC,EAAE,EAAC;QACrB,IAAIC,IAAI,GAAC,CAAC,CAAC;QACXA,IAAI,CAACC,EAAE,GAACF,CAAC;QACTC,IAAI,CAACA,IAAI,GAAE,SAAQD,CAAE,EAAC;QACtBT,SAAS,CAACQ,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC;QAC1BH,KAAK,IAAE,CAAC;MACV;MACAN,KAAK,CAACO,KAAK,GAACD,KAAK;IACnB;IACA;IACA,SAASM,SAASA,CAACV,OAAO,EAACC,KAAK,EAAC;MAC/B;;MAEA;MACA;MACA,IAAIU,KAAK,GAACX,OAAO,GAACC,KAAK,GAACA,KAAK;MAC7B;MACA,IAAIW,GAAG,GAACZ,OAAO,GAACC,KAAK;MACrBJ,SAAS,CAACQ,KAAK,GAACR,SAAS,CAACQ,KAAK,CAACQ,KAAK,CAACF,KAAK,EAACC,GAAG,CAAC;IAClD;IACA,SAASE,OAAOA,CAACC,GAAG,GAAG,CAAC,EAAC;MACvBhB,UAAU,CAACC,OAAO,GAACe,GAAG;MACtB;MACAZ,YAAY,CAAC,CAAC;MACdO,SAAS,CAACX,UAAU,CAACC,OAAO,EAACD,UAAU,CAACE,KAAK,CAAC;IAChD;IAEAR,SAAS,CAAC,YAAS;MACjBqB,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;IACF,MAAME,eAAe,GAAG,MAAOC,QAAQ,IAAK;MAC1C,IAAI;QACF;QACA,MAAMC,GAAG,GAAG,MAAMxB,OAAO,CAACyB,GAAG,CAAC,sBAAsB,EAAE;UAAEC,MAAM,EAAE;YAAEH,QAAQ,EAAEA;UAAS;QAAE,CAAC,CAAC;QACzF;QACAf,WAAW,CAACG,KAAK,GAAGa,GAAG,CAACX,IAAI,CAACA,IAAI;QACjCc,OAAO,CAACC,GAAG,CAAC,MAAM,EAACpB,WAAW,CAACG,KAAK,CAAC;MACvC,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACd;QACAF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDP,eAAe,CAAC,IAAI,CAAC;;IAErB;IACA,MAAMQ,MAAM,GAAG7B,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAM8B,eAAe,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAK;MACxC;MACAH,MAAM,CAACf,IAAI,CAAC;QAAEkB,IAAI,EAAE,aAAa;QAAEP,MAAM,EAAE;UAAEZ,EAAE,EAAEkB,OAAO;UAAEC,IAAI,EAAEA;QAAI;MAAE,CAAC,CAAC;IAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}