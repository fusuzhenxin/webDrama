{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a4a7262\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"video-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"video-container\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  ref: \"videoCanvas\",\n  class: \"video-canvas\",\n  width: \"1200\",\n  height: \"800\"\n};\nconst _hoisted_6 = {\n  class: \"button-container\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.videoData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"video\", {\n    ref: \"videoPlayer\",\n    controls: \"\",\n    class: \"custom-video\",\n    onCanplaythrough: $setup.handleVideoLoaded\n  }, [_createElementVNode(\"source\", {\n    src: $setup.videoData.url,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createTextVNode(\" Your browser does not support the video tag. \")], 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.numberOfEpisodes, (episode, index) => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: index,\n      onClick: $event => $setup.loadEpisode(index + 1)\n    }, \" Episode \" + _toDisplayString(index + 1), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \" Loading... \"));\n}","map":{"version":3,"names":["key","class","ref","width","height","$setup","videoData","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","controls","onCanplaythrough","handleVideoLoaded","src","url","type","_hoisted_4","_createTextVNode","_hoisted_5","_hoisted_6","_Fragment","_renderList","numberOfEpisodes","episode","index","onClick","$event","loadEpisode","_toDisplayString","_hoisted_7","_hoisted_8"],"sources":["F:\\video\\vue_video\\src\\views\\VideoDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\"  v-if=\"videoData\">\r\n    <div class=\"video-wrapper\">\r\n      <div class=\"video-container\">\r\n        <video ref=\"videoPlayer\" controls class=\"custom-video\" @canplaythrough=\"handleVideoLoaded\">\r\n          <source :src=\"videoData.url\" type=\"video/mp4\">\r\n          Your browser does not support the video tag.\r\n        </video>\r\n        <canvas ref=\"videoCanvas\" class=\"video-canvas\" width=\"1200\" height=\"800\"></canvas>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <button v-for=\"(episode, index) in numberOfEpisodes\" :key=\"index\" @click=\"loadEpisode(index + 1)\">\r\n          Episode {{ index + 1 }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    Loading...\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\nconst videoCanvas = ref(null);\r\nlet canvasContext = null;\r\n\r\nconst route = useRoute();\r\nconst videoId = route.params.id;\r\nconst videoName = route.params.name;\r\n\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const res = await request.get(`/file/${videoId}`);\r\n    videoData.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n  loadNumberOfEpisodes();\r\n  setTimeout(initializeCanvas, 0); // 延迟执行 initializeCanvas 方法\r\n});\r\n\r\nconst initializeCanvas = () => {\r\n  videoCanvas.value = ref(document.querySelector('.video-canvas'));\r\n  if (!videoCanvas.value.value) return;\r\n  canvasContext = videoCanvas.value.value.getContext('2d');\r\n\r\n  // 设置画布尺寸与视频容器相同\r\n  videoCanvas.value.value.width = videoCanvas.value.value.parentElement.offsetWidth;\r\n  videoCanvas.value.value.height = videoCanvas.value.value.parentElement.offsetHeight;\r\n};\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${episodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst handleVideoLoaded = () => {\r\n  if (videoPlayer.value) {\r\n    videoPlayer.value.play();\r\n  }\r\n};\r\n\r\nconst renderVideoFrameToCanvas = () => {\r\n  if (!videoPlayer.value || !canvasContext || videoPlayer.value.paused || videoPlayer.value.ended) return;\r\n  canvasContext.clearRect(0, 0, videoCanvas.value.width, videoCanvas.value.height);\r\n  canvasContext.drawImage(videoPlayer.value, 0, 0, videoCanvas.value.width, videoCanvas.value.height);\r\n  applyBlurEffect();\r\n};\r\n\r\nconst applyBlurEffect = () => {\r\n  if (!canvasContext) return;\r\n  canvasContext.filter = 'blur(10px)';\r\n};\r\n\r\nconst handleVideoPlay = () => {\r\n  requestAnimationFrame(renderVideoFrameToCanvas);\r\n};\r\n\r\nonMounted(() => {\r\n  if (videoPlayer.value) {\r\n    videoPlayer.value.addEventListener('play', handleVideoPlay);\r\n  }\r\n});\r\n\r\nonUnmounted(() => {\r\n  if (videoPlayer.value) {\r\n    videoPlayer.value.removeEventListener('play', handleVideoPlay);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  border: 2px solid #ccc;\r\n  padding: 10px;\r\n  background-color: white;\r\n}\r\n\r\n.video-wrapper {\r\n  display: flex;\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n}\r\n\r\n.custom-video {\r\n  width: 1200px;\r\n  height: 800px;\r\n}\r\n\r\n.video-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%; /* 设置画布宽度为100%，与视频容器等宽 */\r\n  height: 100%; /* 设置画布高度为100%，与视频容器等高 */\r\n  z-index: -1;\r\n  background-color: white; /* 与视频容器相同的背景颜色 */\r\n}\r\n\r\n.button-container {\r\n  margin-left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.button-container button {\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAiB;mBAHlC;;EAQgBC,GAAG,EAAC,aAAa;EAACD,KAAK,EAAC,cAAc;EAACE,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC;;;EAEhEH,KAAK,EAAC;AAAkB;mBAVnC;;EAAAD,GAAA;AAAA;;SACgCK,MAAA,CAAAC,SAAS,I,cAAvCC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,CAaM,OAbNC,UAaM,GAZJD,mBAAA,CAMM,OANNE,UAMM,GALJF,mBAAA,CAGQ;IAHDP,GAAG,EAAC,aAAa;IAACU,QAAQ,EAAR,EAAQ;IAACX,KAAK,EAAC,cAAc;IAAEY,gBAAc,EAAER,MAAA,CAAAS;MACtEL,mBAAA,CAA8C;IAArCM,GAAG,EAAEV,MAAA,CAAAC,SAAS,CAACU,GAAG;IAAEC,IAAI,EAAC;0BAL5CC,UAAA,GAAAC,gBAAA,CAKwD,gDAEhD,E,yCACAV,mBAAA,CAAkF,UAAlFW,UAAkF,8B,GAEpFX,mBAAA,CAIM,OAJNY,UAIM,I,kBAHJd,mBAAA,CAESe,SAAA,QAbjBC,WAAA,CAW2ClB,MAAA,CAAAmB,gBAAgB,EAX3D,CAWwBC,OAAO,EAAEC,KAAK;yBAA9BnB,mBAAA,CAES;MAF6CP,GAAG,EAAE0B,KAAK;MAAGC,OAAK,EAAAC,MAAA,IAAEvB,MAAA,CAAAwB,WAAW,CAACH,KAAK;OAAO,WACxF,GAAAI,gBAAA,CAAGJ,KAAK,4BAZ1BK,UAAA;yDAiBExB,mBAAA,CAEM,OAnBRyB,UAAA,EAiBc,cAEZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}