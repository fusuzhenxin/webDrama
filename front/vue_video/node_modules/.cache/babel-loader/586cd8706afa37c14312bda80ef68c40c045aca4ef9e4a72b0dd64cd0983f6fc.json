{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"product-sections\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"热门剧\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"product-section\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"product-list\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"image-wrapper\"\n};\nconst _hoisted_9 = [\"src\", \"alt\"];\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"play-button\"\n}, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-play\"\n})], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.hotProducts, (product, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"product-card\",\n      onClick: $event => _ctx.goToVideoDetail(product.id)\n    }, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"img\", {\n      src: product.cover,\n      alt: product.name,\n      class: \"product-image\"\n    }, null, 8 /* PROPS */, _hoisted_9), _hoisted_10, _createCommentVNode(\" 视频播放器 \"), _createCommentVNode(\"            <video\"), _createCommentVNode(\"                ref=\\\"videoPlayer\\\"\"), _createCommentVNode(\"                class=\\\"video-js vjs-default-skin\\\"\"), _createCommentVNode(\"                controls\"), _createCommentVNode(\"                preload=\\\"auto\\\"\"), _createCommentVNode(\"                :poster=\\\"product.poster\\\"\"), _createCommentVNode(\"                data-setup=\\\"{}\\\"\"), _createCommentVNode(\"            >\"), _createCommentVNode(\"              <source :src=\\\"product.url\\\" type=\\\"video/mp4\\\" />\"), _createCommentVNode(\"              &lt;!&ndash; 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 &ndash;&gt;\"), _createCommentVNode(\"            </video>\")]), _createElementVNode(\"p\", null, _toDisplayString(product.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$setup","hotProducts","product","index","key","onClick","$event","_ctx","goToVideoDetail","id","_hoisted_8","src","cover","alt","name","_hoisted_9","_hoisted_10","_createCommentVNode","_toDisplayString","_hoisted_7"],"sources":["F:\\video\\vue_video\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"product-sections\">\n    <br>\n    <h1>热门剧</h1>\n    <div class=\"product-section\">\n      <br>\n      <div class=\"product-list\">\n        <div v-for=\"(product, index) in hotProducts\" :key=\"index\" class=\"product-card\" @click=\"goToVideoDetail(product.id)\">\n          <div class=\"image-wrapper\">\n            <img :src=\"product.cover\" :alt=\"product.name\" class=\"product-image\">\n            <div class=\"play-button\">\n              <i class=\"fas fa-play\"></i>\n            </div>\n            <!-- 视频播放器 -->\n<!--            <video-->\n<!--                ref=\"videoPlayer\"-->\n<!--                class=\"video-js vjs-default-skin\"-->\n<!--                controls-->\n<!--                preload=\"auto\"-->\n<!--                :poster=\"product.poster\"-->\n<!--                data-setup=\"{}\"-->\n<!--            >-->\n<!--              <source :src=\"product.url\" type=\"video/mp4\" />-->\n<!--              &lt;!&ndash; 如果需要兼容其他格式的视频文件，可以添加多个<source>标签 &ndash;&gt;-->\n<!--            </video>-->\n          </div>\n\n          <p>{{ product.name }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\nimport {  useRouter } from 'vue-router';\n// import videojs from 'video.js';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  setup() {\n    // 使用 ref 创建响应式数据\n    const hotProducts = ref([]);\n    // 定义异步加载商品分类数据的方法\n    const loadProductCategories = async () => {\n      try {\n        // 发起请求获取商城商品分类数据\n        const res = await request.get('/file/selectTop101');\n          // 如果请求成功，更新商品分类数据\n          hotProducts.value = res.data.data;\n      } catch (error) {\n        // 捕获并处理请求错误\n        console.error('Error loading product categories:', error);\n      }\n    };\n\n\n    // 在组件挂载时调用加载商品分类数据的方法\n    loadProductCategories();\n\n    const router = useRouter();\n    const goToVideoDetail = (productId) => {\n      router.push({ name: 'VideoDetail', params: { id: productId, Products: hotProducts.value } });\n      localStorage.setItem('id', productId);\n      localStorage.setItem('Products', JSON.stringify(hotProducts.value));\n    };\n    // 返回需要在模板中使用的数据和方法\n    return {\n      hotProducts,\n    };\n  },\n\n  // mounted() {\n  //   // 在组件挂载完成后初始化视频播放器\n  //   // 在组件挂载完成后初始化视频播放器\n  //   if (this.$refs.videoPlayer) {\n  //     videojs(this.$refs.videoPlayer);\n  //   }\n  // }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.product-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n}\n\n.product-card {\n  width: calc(20% - 20px); /* 设置每个商品占据的宽度为总宽度的20%，减去外边距 */\n  margin-left: 10px; /* 设置商品之间的右外边距 */\n  margin-bottom: 20px; /* 设置商品之间的下外边距 */\n\n  padding: 10px; /* 添加内边距 */\n  box-sizing: border-box; /* 让内边距和边框计入盒模型的总宽度 */\n}\n.product-card .image-wrapper {\n  width: 190px; /* 设置容器宽度 */\n  height: 266px; /* 设置容器高度 */\n  overflow: hidden; /* 隐藏超出部分 */\n  border-radius: 5px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n}\n\n.product-card img {\n  width: 100%; /* 设置图片宽度为容器宽度的100% */\n  height: 100%; /* 设置图片高度为容器高度的100% */\n  object-fit: cover; /* 图片填充方式 */\n}\n.image-wrapper {\n  position: relative;\n  overflow: hidden; /* 隐藏超出部分 */\n  border-radius: 10px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1); /* 添加阴影效果 */\n}\n\n.product-image {\n  transition: transform 0.3s ease; /* 添加过渡效果 */\n}\n\n.image-wrapper:hover .product-image {\n  transform: scale(1.05); /* 鼠标悬停时放大图片 */\n}\n\n.play-button {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  opacity: 0; /* 默认隐藏 */\n  transition: opacity 0.3s ease; /* 添加过渡效果 */\n}\n\n.image-wrapper:hover .play-button {\n  opacity: 1; /* 鼠标悬停时显示 */\n}\n\n.play-button i {\n  color: white;\n  font-size: 24px;\n}\n\n\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAI;gEACJA,mBAAA,CAAY,YAAR,KAAG;;EACFD,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAAI;;EACCD,KAAK,EAAC;AAAc;mBAN/B;;EAQeA,KAAK,EAAC;AAAe;mBARpC;iEAUYC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAa,I,aACtBC,mBAAA,CAA2B;EAAxBD,KAAK,EAAC;AAAa,G;;uBAVlCE,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJC,UAAI,EACJC,UAAY,EACZJ,mBAAA,CA0BM,OA1BNK,UA0BM,GAzBJC,UAAI,EACJN,mBAAA,CAuBM,OAvBNO,UAuBM,I,kBAtBJN,mBAAA,CAqBMO,SAAA,QA5BdC,WAAA,CAOwCC,MAAA,CAAAC,WAAW,EAPnD,CAOqBC,OAAO,EAAEC,KAAK;yBAA3BZ,mBAAA,CAqBM;MArBwCa,GAAG,EAAED,KAAK;MAAEd,KAAK,EAAC,cAAc;MAAEgB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,eAAe,CAACN,OAAO,CAACO,EAAE;QAC/GnB,mBAAA,CAiBM,OAjBNoB,UAiBM,GAhBJpB,mBAAA,CAAoE;MAA9DqB,GAAG,EAAET,OAAO,CAACU,KAAK;MAAGC,GAAG,EAAEX,OAAO,CAACY,IAAI;MAAEzB,KAAK,EAAC;4BAThE0B,UAAA,GAUYC,WAEM,EACNC,mBAAA,WAAc,EAC1BA,mBAAA,sBAAyB,EACzBA,mBAAA,uCAAwC,EACxCA,mBAAA,uDAAwD,EACxDA,mBAAA,4BAA+B,EAC/BA,mBAAA,oCAAqC,EACrCA,mBAAA,8CAA+C,EAC/CA,mBAAA,qCAAsC,EACtCA,mBAAA,iBAAoB,EACpBA,mBAAA,oEAAmE,EACnEA,mBAAA,2EAA8E,EAC9EA,mBAAA,wBAA2B,C,GAGjB3B,mBAAA,CAAyB,WAAA4B,gBAAA,CAAnBhB,OAAO,CAACY,IAAI,iB,iBA3B5BK,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}