{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\nimport { useRoute } from \"vue-router\";\nexport default {\n  __name: 'search',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const searchQuery1 = route.params.searchQuery;\n    const router = useRouter();\n    const shortDramas = ref([]);\n    const searchQuery = ref(searchQuery1);\n    const videoData = ref([]);\n\n    //根据搜索框输入的名字来查询短剧\n    const search = async () => {\n      try {\n        const res = await request.get('/details/search', {\n          params: {\n            name: searchQuery.value\n          }\n        });\n        shortDramas.value = res.data.data;\n      } catch (error) {\n        console.error('Error searching:', error);\n      }\n    };\n\n    //默认的剧\n    const acquiesce = async classify => {\n      try {\n        const res = await request.get('/details/selectAcquiesce', {\n          params: {\n            classify: classify\n          }\n        });\n        videoData.value = res.data.data;\n      } catch (error) {\n        console.error('Error searching:', error);\n      }\n    };\n\n    // const  loadDetails =async ()=>{\n    //   try {\n    //     const  res=await request.get('/details/finAllName',{params: {name: searchQuery.value}})\n    //     details.value=res.data.data\n    //     console.log(\"=====----\",details.value)\n    //   }catch (error){\n    //     console.error('Error searching:', error);\n    //   }\n    // }\n\n    acquiesce('逆袭');\n    // 在组件加载后执行搜索\n    onMounted(() => {\n      search(); // 页面加载时执行搜索\n    });\n    const goToDramaDetail = (dramaId, name) => {\n      // Navigate to the detail page and pass drama ID as route parameter\n      router.push({\n        name: 'videoDetail',\n        params: {\n          id: dramaId,\n          name: name\n        }\n      });\n    };\n    const __returned__ = {\n      route,\n      searchQuery1,\n      router,\n      shortDramas,\n      searchQuery,\n      videoData,\n      search,\n      acquiesce,\n      goToDramaDetail,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","request","useRouter","useRoute","route","searchQuery1","params","searchQuery","router","shortDramas","videoData","search","res","get","name","value","data","error","console","acquiesce","classify","goToDramaDetail","dramaId","push","id"],"sources":["F:/video/vue/src/views/search.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\" style=\"min-height: 100%; padding-bottom: 100px;\">\r\n    <el-container>\r\n      <el-header style=\"padding: 0px\">\r\n        <el-menu  style=\"justify-content: center;padding: 0px\" mode=\"horizontal\" >\r\n          <router-link to=\"/HelloWorld\">\r\n            <el-menu-item index=\"HelloWorld\">首页</el-menu-item>\r\n          </router-link>\r\n          <router-link to=\"/videoDetail\">\r\n            <el-menu-item index=\"videoDetail\">重生</el-menu-item>\r\n          </router-link>\r\n          <router-link to=\"/contact\">\r\n            <el-menu-item index=\"contact\">逆袭</el-menu-item>\r\n          </router-link>\r\n          <router-link to=\"/company\">\r\n            <el-menu-item index=\"company\">甜宠</el-menu-item>\r\n          </router-link>\r\n\r\n        </el-menu>\r\n      </el-header>\r\n      <el-container>\r\n        <el-main>      <!-- 身体 -->\r\n          <div class=\"search-page\">\r\n            <!-- 搜索框和按钮 -->\r\n            <li class=\"search-box\">\r\n              <div class=\"search-containers\">\r\n                <input type=\"text\" placeholder=\"搜索\" v-model=\"searchQuery\" @keyup.enter=\"search\">\r\n                <button @click=\"search\"><img src=\"../assets/1.png\"></button>\r\n              </div>\r\n            </li>\r\n          </div>\r\n\r\n        </el-main>\r\n<el-footer>\r\n  <div v-for=\"(drama, index) in shortDramas\" :key=\"index\" class=\"drama-card\" @click=\"goToDramaDetail(drama.id, drama.name)\">\r\n        <el-row>\r\n          <div class=\"drama-details\">\r\n          <el-col :span=\"10\">\r\n            <div class=\"grid-content bg-purple\" width=\"400px\">\r\n              <!-- 封面图像 -->\r\n              <div class=\"image-wrapper\">\r\n                <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\r\n                <div class=\"play-button\">\r\n                  <i class=\"fas fa-play\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"10\">\r\n            <div class=\"grid-content bg-purple-light\" width=\"1000px\">\r\n              <div class=\"details-s\">\r\n                <p>{{ drama.name }}</p>\r\n                <button>{{ drama.classify }}</button>\r\n                <button>民国</button>\r\n                <br>\r\n                <span>{{drama.description}}</span>\r\n              </div>\r\n            </div>\r\n          </el-col>\r\n          </div>\r\n        </el-row>\r\n        </div>\r\n</el-footer>\r\n\r\n      </el-container>\r\n    </el-container>\r\n    <!-- <el-pagination\r\n        style=\"justify-content: center\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"10\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"234\"\r\n    ></el-pagination> -->\r\n\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref ,onMounted  } from 'vue';\r\n\r\nimport request from \"@/utils/request\";\r\nimport { useRouter } from 'vue-router'\r\nimport { useRoute } from \"vue-router\";\r\nconst route=useRoute();\r\nconst searchQuery1=route.params.searchQuery;\r\nconst router = useRouter();\r\nconst shortDramas = ref([]);\r\nconst searchQuery = ref(searchQuery1);\r\nconst  videoData=ref([]);\r\n\r\n\r\n//根据搜索框输入的名字来查询短剧\r\nconst search = async () => {\r\n  try {\r\n    const res = await request.get('/details/search', { params: { name: searchQuery.value } });\r\n    shortDramas.value = res.data.data;\r\n\r\n  } catch (error) {\r\n    console.error('Error searching:', error);\r\n  }\r\n}\r\n\r\n//默认的剧\r\nconst  acquiesce = async (classify) =>{\r\n  try {\r\n    const res=await request.get('/details/selectAcquiesce',{params: {classify: classify}})\r\n    videoData.value=res.data.data\r\n\r\n  }catch (error){\r\n    console.error('Error searching:', error);\r\n  }\r\n}\r\n\r\n// const  loadDetails =async ()=>{\r\n//   try {\r\n//     const  res=await request.get('/details/finAllName',{params: {name: searchQuery.value}})\r\n//     details.value=res.data.data\r\n//     console.log(\"=====----\",details.value)\r\n//   }catch (error){\r\n//     console.error('Error searching:', error);\r\n//   }\r\n// }\r\n\r\nacquiesce('逆袭')\r\n// 在组件加载后执行搜索\r\nonMounted(() => {\r\n  search(); // 页面加载时执行搜索\r\n\r\n});\r\nconst goToDramaDetail = (dramaId,name) => {\r\n  // Navigate to the detail page and pass drama ID as route parameter\r\n  router.push({ name: 'videoDetail', params: { id: dramaId ,name: name} });\r\n};\r\n</script>\r\n<style>\r\n.search-page {\r\n  margin: -20px;\r\n  padding: 129px;\r\n  background-color: whitesmoke;\r\n\r\n}\r\n.search-containers {\r\n  display: flex;\r\n}\r\n.search-containers input {\r\n  padding: 5px;\r\n  margin-right: 10px;\r\n  margin-top: -26px;\r\n  height: 40px;\r\n  width: 400px;\r\n  margin-left: 321px;\r\n  border: 1px solid #ccc;\r\n  font-family: '宋体', Arial, sans-serif;\r\n}\r\n\r\n.search-containers button {\r\n  width: 51px;\r\n  margin-top: -25px;\r\n  padding: 5px;\r\n  background-color: white;\r\n  color: white;\r\n  cursor: pointer;\r\n  height: 51px;\r\n  border: 1px solid #ccc; /* 添加边框样式 */\r\n  font-family: '宋体', Arial, sans-serif; /* 设置搜索框文字为宋体 */\r\n\r\n}\r\n.search-containers button:hover {\r\n  background-color: #ff6600; /* 悬停时的颜色变化 */\r\n}\r\n\r\n\r\n.search-containers img {\r\n  width: 25px; /* 使图片填充按钮 */\r\n  height: 25px;\r\n}\r\n\r\n.image-wrapper {\r\n  width: 184px; /* 调整宽度 */\r\n  height: 264px;\r\n  margin-right: 20px; /* 调整封面图像和详情之间的间距 */\r\n}\r\n\r\n.drama-image{\r\n  border-radius: 10px;\r\n  width: 184px;\r\n  height: 264px;\r\n  margin-left: 120px;\r\n\r\n}\r\n.details-s{\r\n\r\n  margin-right: 61px;\r\n  margin-top: -129px;\r\n  margin-left: 130px;\r\n}\r\n.drama-card {\r\n  margin-bottom: 40px; /* 添加底部间距 */\r\n}\r\n</style>\r\n"],"mappings":"AAgFA,SAASA,GAAG,EAAEC,SAAS,QAAS,KAAK;AAErC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,QAAQ,QAAQ,YAAY;;;;;;;IACrC,MAAMC,KAAK,GAACD,QAAQ,CAAC,CAAC;IACtB,MAAME,YAAY,GAACD,KAAK,CAACE,MAAM,CAACC,WAAW;IAC3C,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;IAC1B,MAAMO,WAAW,GAAGV,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMQ,WAAW,GAAGR,GAAG,CAACM,YAAY,CAAC;IACrC,MAAOK,SAAS,GAACX,GAAG,CAAC,EAAE,CAAC;;IAGxB;IACA,MAAMY,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMX,OAAO,CAACY,GAAG,CAAC,iBAAiB,EAAE;UAAEP,MAAM,EAAE;YAAEQ,IAAI,EAAEP,WAAW,CAACQ;UAAM;QAAE,CAAC,CAAC;QACzFN,WAAW,CAACM,KAAK,GAAGH,GAAG,CAACI,IAAI,CAACA,IAAI;MAEnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;;IAED;IACA,MAAOE,SAAS,GAAG,MAAOC,QAAQ,IAAI;MACpC,IAAI;QACF,MAAMR,GAAG,GAAC,MAAMX,OAAO,CAACY,GAAG,CAAC,0BAA0B,EAAC;UAACP,MAAM,EAAE;YAACc,QAAQ,EAAEA;UAAQ;QAAC,CAAC,CAAC;QACtFV,SAAS,CAACK,KAAK,GAACH,GAAG,CAACI,IAAI,CAACA,IAAI;MAE/B,CAAC,QAAOC,KAAK,EAAC;QACZC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAE,SAAS,CAAC,IAAI,CAAC;IACf;IACAnB,SAAS,CAAC,MAAM;MACdW,MAAM,CAAC,CAAC,CAAC,CAAC;IAEZ,CAAC,CAAC;IACF,MAAMU,eAAe,GAAGA,CAACC,OAAO,EAACR,IAAI,KAAK;MACxC;MACAN,MAAM,CAACe,IAAI,CAAC;QAAET,IAAI,EAAE,aAAa;QAAER,MAAM,EAAE;UAAEkB,EAAE,EAAEF,OAAO;UAAER,IAAI,EAAEA;QAAI;MAAE,CAAC,CAAC;IAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}