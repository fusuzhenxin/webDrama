{"ast":null,"code":"import Navigation from \"@/views/navigation.vue\";\nimport { ref, onMounted, computed } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute } from 'vue-router';\n// import Navigation from \"@/views/navigation.vue\";\n\nimport { useRouter } from \"vue-router\";\nconst episodesPerPage = 25;\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isLiked = ref(false);\n    const isCollect = ref(false);\n    const videoData = ref(null);\n    const videoPlayer = ref(null);\n    const numberOfEpisodes = ref(0);\n    const Descriptions = ref(null);\n    const currentPage = ref(1);\n    const route = useRoute();\n    const videoId = route.params.id;\n    const videoName = route.params.name;\n    console.log(\"idididid\", videoId);\n    const showDropdown = ref(false);\n    const username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\n    const searchQuery = ref('');\n    const router = useRouter();\n    const toggleDropdown = () => {\n      showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\n    };\n    const isLoggedIn = () => {\n      return !!username.value; // 根据用户是否存在判断用户是否已登录\n    };\n    const search = () => {\n      console.log('Search method called');\n      // 如果搜索框有内容，执行路由跳转\n      if (searchQuery.value.trim() !== '') {\n        router.push({\n          name: 'search',\n          params: {\n            searchQuery: searchQuery.value\n          }\n        }); // 这里替换为你要跳转的页面路径\n      }\n    };\n    const logout = () => {\n      // 这里添加注销登录的逻辑，比如清除用户信息等\n      console.log('注销登录');\n    };\n    //第一集url和短剧的信息\n    const loadVideoData = async () => {\n      try {\n        const res = await request.get('/file/Inception', {\n          params: {\n            name: videoName\n          }\n        });\n        // const res = await request.get(`/file/${videoId}`);\n\n        videoData.value = res.data.data;\n        console.log(\"[[[\", videoData.value);\n      } catch (error) {\n        console.error('Error loading video data:', error);\n      }\n    };\n\n    //每个剧的详情\n    const loadDescription = async () => {\n      try {\n        const res = await request.get('/details/finAll', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value = res.data.data;\n        console.log(\"res.data.data----------\", res.data.data);\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    //获取这个剧有多少集\n    const loadNumberOfEpisodes = async () => {\n      try {\n        const res = await request.get('/videos/diversity', {\n          params: {\n            name: videoName\n          }\n        });\n        numberOfEpisodes.value = res.data.data;\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    //点赞数量\n    const Likes = async () => {\n      if (!isLiked.value) {\n        // 如果当前未点赞，则进行点赞操作\n        // 发送点赞请求...\n        // 更新点赞数量...\n        const res = await request.get('/details/likes', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = true;\n      } else {\n        // 如果当前已经点赞，则取消点赞操作\n        // 发送取消点赞请求...\n        // 更新点赞数量...\n        const res = await request.get('/details/likesDelete', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = false;\n      }\n    };\n\n    //收藏数量\n    const Collect = async () => {\n      if (!isCollect.value) {\n        const res = await request.get('/details/collect', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isCollect.value = true;\n      } else {\n        const res = await request.get('/details/collectDelete', {\n          params: {\n            name: videoName\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        isCollect.value = false;\n      }\n    };\n    onMounted(() => {\n      loadVideoData();\n      loadNumberOfEpisodes();\n      loadDescription();\n    });\n    const displayedEpisodes = computed(() => {\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\n      return Array.from({\n        length: endIndex - startIndex\n      }, (_, index) => startIndex + index + 1);\n    });\n    const totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\n    const loadEpisode = async episodeNumber => {\n      console.log(\"?????????\", episodeNumber);\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const actualEpisodeNumber = startIndex + episodeNumber;\n      try {\n        const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\n        const url = res.data.data;\n        if (videoPlayer.value) {\n          videoPlayer.value.src = url;\n          videoPlayer.value.load();\n          videoPlayer.value.play();\n        }\n      } catch (error) {\n        console.error('Error loading episode:', error);\n      }\n    };\n    const setCurrentPage = page => {\n      currentPage.value = page;\n    };\n    const __returned__ = {\n      isLiked,\n      isCollect,\n      videoData,\n      videoPlayer,\n      numberOfEpisodes,\n      Descriptions,\n      episodesPerPage,\n      currentPage,\n      route,\n      videoId,\n      videoName,\n      showDropdown,\n      username,\n      searchQuery,\n      router,\n      toggleDropdown,\n      isLoggedIn,\n      search,\n      logout,\n      loadVideoData,\n      loadDescription,\n      loadNumberOfEpisodes,\n      Likes,\n      Collect,\n      displayedEpisodes,\n      totalPages,\n      loadEpisode,\n      setCurrentPage,\n      Navigation,\n      ref,\n      onMounted,\n      computed,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Navigation","ref","onMounted","computed","request","useRoute","useRouter","episodesPerPage","isLiked","isCollect","videoData","videoPlayer","numberOfEpisodes","Descriptions","currentPage","route","videoId","params","id","videoName","name","console","log","showDropdown","username","searchQuery","router","toggleDropdown","value","isLoggedIn","search","trim","push","logout","loadVideoData","res","get","data","error","loadDescription","loadNumberOfEpisodes","Likes","quantity","Collect","collect","displayedEpisodes","startIndex","endIndex","Math","min","Array","from","length","_","index","totalPages","ceil","loadEpisode","episodeNumber","actualEpisodeNumber","url","src","load","play","setCurrentPage","page"],"sources":["F:/video/vue/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\" style=\"min-height: 100%; padding-bottom: 100px;\">\r\n      <el-container>\r\n        <el-header>\r\n           <navigation/>\r\n        </el-header>\r\n        <el-container>\r\n          <el-aside width=\"1000px\">Aside</el-aside>\r\n          <el-container>\r\n            <el-main width=\"382px\">\r\n                <el-text><h1 style=\"color: black\">我思念的她</h1></el-text>\r\n                <el-text>  <p style=\"color: black\">主演：李承</p></el-text>\r\n            </el-main>\r\n            <el-footer>Footer</el-footer>\r\n          </el-container>\r\n        </el-container>\r\n      </el-container>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\nimport Navigation from \"@/views/navigation.vue\";\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n// import Navigation from \"@/views/navigation.vue\";\r\n\r\nconst isLiked = ref(false);\r\nconst isCollect=ref(false);\r\nconst videoData = ref(null);\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\nconst  Descriptions= ref(null)\r\nconst episodesPerPage = 25;\r\nconst currentPage = ref(1);\r\nconst route = useRoute();\r\nconst videoId = route.params.id;\r\nconst videoName = route.params.name;\r\nconsole.log(\"idididid\",videoId)\r\nconst showDropdown = ref(false);\r\nconst username = ref(\"User\"); // 你可以根据你的需要设置默认用户名\r\nconst searchQuery = ref('')\r\nimport { useRouter } from \"vue-router\";\r\nconst  router = useRouter();\r\nconst toggleDropdown = () => {\r\n  showDropdown.value = !showDropdown.value; // 切换下拉菜单的显示状态\r\n};\r\n\r\nconst isLoggedIn = () => {\r\n  return !!username.value; // 根据用户是否存在判断用户是否已登录\r\n};\r\nconst search = () => {\r\n  console.log('Search method called');\r\n  // 如果搜索框有内容，执行路由跳转\r\n  if (searchQuery.value.trim() !== '') {\r\n    router.push({name: 'search',params:{searchQuery: searchQuery.value}}); // 这里替换为你要跳转的页面路径\r\n  }\r\n};\r\nconst logout = () => {\r\n  // 这里添加注销登录的逻辑，比如清除用户信息等\r\n  console.log('注销登录');\r\n};\r\n//第一集url和短剧的信息\r\nconst loadVideoData = async () => {\r\n  try {\r\n    const res = await request.get('/file/Inception',{params: {name: videoName} });\r\n    // const res = await request.get(`/file/${videoId}`);\r\n\r\n    videoData.value = res.data.data;\r\n    console.log(\"[[[\",videoData.value)\r\n  } catch (error) {\r\n    console.error('Error loading video data:', error);\r\n  }\r\n};\r\n\r\n//每个剧的详情\r\nconst loadDescription =async () => {\r\n  try {\r\n    const res=await request.get('/details/finAll', {params: {name: videoName} })\r\n    Descriptions.value=res.data.data\r\n    console.log(\"res.data.data----------\",res.data.data)\r\n  }catch (error){\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n}\r\n\r\n//获取这个剧有多少集\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\n//点赞数量\r\nconst Likes = async () => {\r\n  if (!isLiked.value) {\r\n    // 如果当前未点赞，则进行点赞操作\r\n    // 发送点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likes',{params: { name: videoName}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = true;\r\n  } else {\r\n    // 如果当前已经点赞，则取消点赞操作\r\n    // 发送取消点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likesDelete',{params: { name: videoName}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = false;\r\n  }\r\n\r\n};\r\n\r\n//收藏数量\r\nconst Collect = async () => {\r\n  if (!isCollect.value){\r\n    const res = await request.get('/details/collect',{params: { name: videoName}});\r\n    Descriptions.value.collect=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isCollect.value=true\r\n  }else {\r\n    const res = await request.get('/details/collectDelete',{params: { name: videoName}});\r\n    Descriptions.value.collect=res.data.data\r\n    isCollect.value=false\r\n  }\r\n\r\n};\r\n\r\n\r\nonMounted(() => {\r\n  loadVideoData();\r\n  loadNumberOfEpisodes();\r\n  loadDescription();\r\n});\r\n\r\nconst displayedEpisodes = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\r\n  return Array.from({ length: endIndex - startIndex }, (_, index) => startIndex + index + 1);\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\r\n\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  console.log(\"?????????\", episodeNumber);\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const actualEpisodeNumber = startIndex + episodeNumber;\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst setCurrentPage = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container {  }\r\n  </style>\r\n  "],"mappings":"AAqBA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,QAAQ,QAAQ,YAAY;AACrC;;AAiBA,SAASC,SAAS,QAAQ,YAAY;AATtC,MAAMC,eAAe,GAAG,EAAE;;;;;;;IAN1B,MAAMC,OAAO,GAAGP,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMQ,SAAS,GAACR,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMS,SAAS,GAAGT,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMU,WAAW,GAAGV,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMW,gBAAgB,GAAGX,GAAG,CAAC,CAAC,CAAC;IAC/B,MAAOY,YAAY,GAAEZ,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMa,WAAW,GAAGb,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMc,KAAK,GAAGV,QAAQ,CAAC,CAAC;IACxB,MAAMW,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,EAAE;IAC/B,MAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAM,CAACG,IAAI;IACnCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACN,OAAO,CAAC;IAC/B,MAAMO,YAAY,GAAGtB,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMuB,QAAQ,GAAGvB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9B,MAAMwB,WAAW,GAAGxB,GAAG,CAAC,EAAE,CAAC;IAE3B,MAAOyB,MAAM,GAAGpB,SAAS,CAAC,CAAC;IAC3B,MAAMqB,cAAc,GAAGA,CAAA,KAAM;MAC3BJ,YAAY,CAACK,KAAK,GAAG,CAACL,YAAY,CAACK,KAAK,CAAC,CAAC;IAC5C,CAAC;IAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvB,OAAO,CAAC,CAACL,QAAQ,CAACI,KAAK,CAAC,CAAC;IAC3B,CAAC;IACD,MAAME,MAAM,GAAGA,CAAA,KAAM;MACnBT,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC;MACA,IAAIG,WAAW,CAACG,KAAK,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACnCL,MAAM,CAACM,IAAI,CAAC;UAACZ,IAAI,EAAE,QAAQ;UAACH,MAAM,EAAC;YAACQ,WAAW,EAAEA,WAAW,CAACG;UAAK;QAAC,CAAC,CAAC,CAAC,CAAC;MACzE;IACF,CAAC;IACD,MAAMK,MAAM,GAAGA,CAAA,KAAM;MACnB;MACAZ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACrB,CAAC;IACD;IACA,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAC,iBAAiB,EAAC;UAACnB,MAAM,EAAE;YAACG,IAAI,EAAED;UAAS;QAAE,CAAC,CAAC;QAC7E;;QAEAT,SAAS,CAACkB,KAAK,GAAGO,GAAG,CAACE,IAAI,CAACA,IAAI;QAC/BhB,OAAO,CAACC,GAAG,CAAC,KAAK,EAACZ,SAAS,CAACkB,KAAK,CAAC;MACpC,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;;IAED;IACA,MAAMC,eAAe,GAAE,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMJ,GAAG,GAAC,MAAM/B,OAAO,CAACgC,GAAG,CAAC,iBAAiB,EAAE;UAACnB,MAAM,EAAE;YAACG,IAAI,EAAED;UAAS;QAAE,CAAC,CAAC;QAC5EN,YAAY,CAACe,KAAK,GAACO,GAAG,CAACE,IAAI,CAACA,IAAI;QAChChB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAACa,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;MACtD,CAAC,QAAOC,KAAK,EAAC;QACZjB,OAAO,CAACiB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;;IAED;IACA,MAAME,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAML,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAC,mBAAmB,EAAE;UAAEnB,MAAM,EAAE;YAAEG,IAAI,EAAED;UAAU;QAAE,CAAC,CAAC;QACnFP,gBAAgB,CAACgB,KAAK,GAAGO,GAAG,CAACE,IAAI,CAACA,IAAI;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;;IAED;IACA,MAAMG,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI,CAACjC,OAAO,CAACoB,KAAK,EAAE;QAClB;QACA;QACA;QACA,MAAMO,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAC,gBAAgB,EAAC;UAACnB,MAAM,EAAE;YAAEG,IAAI,EAAED;UAAS;QAAC,CAAC,CAAC;QAC5EN,YAAY,CAACe,KAAK,CAACc,QAAQ,GAACP,GAAG,CAACE,IAAI,CAACA,IAAI;QACzChB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;QACrC7B,OAAO,CAACoB,KAAK,GAAG,IAAI;MACtB,CAAC,MAAM;QACL;QACA;QACA;QACA,MAAMO,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAC,sBAAsB,EAAC;UAACnB,MAAM,EAAE;YAAEG,IAAI,EAAED;UAAS;QAAC,CAAC,CAAC;QAClFN,YAAY,CAACe,KAAK,CAACc,QAAQ,GAACP,GAAG,CAACE,IAAI,CAACA,IAAI;QACzChB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;QACrC7B,OAAO,CAACoB,KAAK,GAAG,KAAK;MACvB;IAEF,CAAC;;IAED;IACA,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI,CAAClC,SAAS,CAACmB,KAAK,EAAC;QACnB,MAAMO,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAC,kBAAkB,EAAC;UAACnB,MAAM,EAAE;YAAEG,IAAI,EAAED;UAAS;QAAC,CAAC,CAAC;QAC9EN,YAAY,CAACe,KAAK,CAACgB,OAAO,GAACT,GAAG,CAACE,IAAI,CAACA,IAAI;QACxChB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,GAAG,CAACE,IAAI,CAACA,IAAI,CAAC;QACrC5B,SAAS,CAACmB,KAAK,GAAC,IAAI;MACtB,CAAC,MAAK;QACJ,MAAMO,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAC,wBAAwB,EAAC;UAACnB,MAAM,EAAE;YAAEG,IAAI,EAAED;UAAS;QAAC,CAAC,CAAC;QACpFN,YAAY,CAACe,KAAK,CAACgB,OAAO,GAACT,GAAG,CAACE,IAAI,CAACA,IAAI;QACxC5B,SAAS,CAACmB,KAAK,GAAC,KAAK;MACvB;IAEF,CAAC;IAGD1B,SAAS,CAAC,MAAM;MACdgC,aAAa,CAAC,CAAC;MACfM,oBAAoB,CAAC,CAAC;MACtBD,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,MAAMM,iBAAiB,GAAG1C,QAAQ,CAAC,MAAM;MACvC,MAAM2C,UAAU,GAAG,CAAChC,WAAW,CAACc,KAAK,GAAG,CAAC,IAAIrB,eAAe;MAC5D,MAAMwC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACH,UAAU,GAAGvC,eAAe,EAAEK,gBAAgB,CAACgB,KAAK,CAAC;MAC/E,OAAOsB,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEL,QAAQ,GAAGD;MAAW,CAAC,EAAE,CAACO,CAAC,EAAEC,KAAK,KAAKR,UAAU,GAAGQ,KAAK,GAAG,CAAC,CAAC;IAC5F,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGpD,QAAQ,CAAC,MAAM6C,IAAI,CAACQ,IAAI,CAAC5C,gBAAgB,CAACgB,KAAK,GAAGrB,eAAe,CAAC,CAAC;IAGtF,MAAMkD,WAAW,GAAG,MAAOC,aAAa,IAAK;MAC3CrC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEoC,aAAa,CAAC;MACvC,MAAMZ,UAAU,GAAG,CAAChC,WAAW,CAACc,KAAK,GAAG,CAAC,IAAIrB,eAAe;MAC5D,MAAMoD,mBAAmB,GAAGb,UAAU,GAAGY,aAAa;MACtD,IAAI;QACF,MAAMvB,GAAG,GAAG,MAAM/B,OAAO,CAACgC,GAAG,CAAE,WAAUjB,SAAU,YAAWwC,mBAAoB,EAAC,CAAC;QACpF,MAAMC,GAAG,GAAGzB,GAAG,CAACE,IAAI,CAACA,IAAI;QACzB,IAAI1B,WAAW,CAACiB,KAAK,EAAE;UACrBjB,WAAW,CAACiB,KAAK,CAACiC,GAAG,GAAGD,GAAG;UAC3BjD,WAAW,CAACiB,KAAK,CAACkC,IAAI,CAAC,CAAC;UACxBnD,WAAW,CAACiB,KAAK,CAACmC,IAAI,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOzB,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAM0B,cAAc,GAAIC,IAAI,IAAK;MAC/BnD,WAAW,CAACc,KAAK,GAAGqC,IAAI;IAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}