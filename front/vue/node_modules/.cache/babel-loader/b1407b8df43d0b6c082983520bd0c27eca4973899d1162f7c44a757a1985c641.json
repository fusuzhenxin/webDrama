{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a4a7262\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\",\n  style: {\n    \"min-height\": \"100%\",\n    \"padding-bottom\": \"100px\",\n    \"background-color\": \"black\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"video-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"video-container\"\n};\nconst _hoisted_4 = {\n  ref: \"videoPlayer\",\n  controls: \"\",\n  class: \"custom-video\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  style: {\n    \"color\": \"white\",\n    \"font-size\": \"\"\n  }\n}, \"我思念的她\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  style: {\n    \"color\": \"white\"\n  }\n};\nconst _hoisted_8 = {\n  style: {\n    \"color\": \"darkgray\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"like-favorite-container\"\n};\nconst _hoisted_10 = {\n  class: \"like-container\"\n};\nconst _hoisted_11 = {\n  class: \"like-count\"\n};\nconst _hoisted_12 = {\n  class: \"favorite-container\"\n};\nconst _hoisted_13 = {\n  class: \"favorite-count\"\n};\nconst _hoisted_14 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"space-between\"\n  }\n};\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  style: {\n    \"color\": \"white\"\n  }\n}, \"选集\", -1 /* HOISTED */));\nconst _hoisted_16 = {\n  style: {\n    \"color\": \"#8a8b8d\",\n    \"margin-right\": \"240px\",\n    \"margin-top\": \"30px\"\n  }\n};\nconst _hoisted_17 = {\n  class: \"button-bottom-half\"\n};\nconst _hoisted_18 = {\n  class: \"button-inner-container\"\n};\nconst _hoisted_19 = {\n  class: \"pagination-top-half\"\n};\nconst _hoisted_20 = {\n  class: \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_aside = _resolveComponent(\"el-aside\");\n  const _component_el_text = _resolveComponent(\"el-text\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_footer = _resolveComponent(\"el-footer\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_container, null, {\n    default: _withCtx(() => [_createVNode(_component_el_header, null, {\n      default: _withCtx(() => [_createVNode($setup[\"Navigation\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_container, null, {\n      default: _withCtx(() => [_createVNode(_component_el_aside, {\n        width: \"1000px\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"video\", _hoisted_4, [_createElementVNode(\"source\", {\n          src: $setup.videoData.url,\n          type: \"video/mp4\"\n        }, null, 8 /* PROPS */, _hoisted_5), _createTextVNode(\" Your browser does not support the video tag. \")], 512 /* NEED_PATCH */)])])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_container, null, {\n        default: _withCtx(() => [_createVNode(_component_el_main, {\n          width: \"382px\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_text, null, {\n            default: _withCtx(() => [_hoisted_6]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_text, null, {\n            default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_7, \"主演：\" + _toDisplayString($setup.Descriptions && $setup.Descriptions.actors), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, null, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.Descriptions && $setup.Descriptions.classify), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, null, {\n            default: _withCtx(() => [_createTextVNode(\"民国\")]),\n            _: 1 /* STABLE */\n          }), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($setup.Descriptions && $setup.Descriptions.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n            class: \"like-button\",\n            onClick: $setup.Likes\n          }, _toDisplayString($setup.isLiked ? '取消点赞' : '点赞'), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_11, _toDisplayString($setup.Descriptions && $setup.Descriptions.quantity), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"button\", {\n            class: \"favorite-button\",\n            onClick: _cache[0] || (_cache[0] = $event => $setup.Collect())\n          }, _toDisplayString($setup.isCollect ? '取消收藏' : '收藏'), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($setup.Descriptions && $setup.Descriptions.collect), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_text, null, {\n            default: _withCtx(() => [_hoisted_15]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_text, null, {\n            default: _withCtx(() => [_createElementVNode(\"h4\", _hoisted_16, \"共\" + _toDisplayString($setup.numberOfEpisodes) + \"集\", 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })]), _createElementVNode(\"div\", _hoisted_17, [_createCommentVNode(\" 上半部分 \"), _createElementVNode(\"div\", _hoisted_18, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.displayedEpisodes, (episode, index) => {\n            return _openBlock(), _createBlock(_component_el_button, {\n              key: index,\n              onClick: $event => $setup.loadEpisode(index + 1),\n              class: \"episode-button\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(episode), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n          }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_19, [_createCommentVNode(\" 下半部分 \"), _createCommentVNode(\" 这里放其他内容 \"), _createElementVNode(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.totalPages, page => {\n            return _openBlock(), _createBlock(_component_el_button, {\n              key: page,\n              onClick: $event => $setup.setCurrentPage(page),\n              class: _normalizeClass({\n                active: page === $setup.currentPage\n              })\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(page), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"class\"]);\n          }), 128 /* KEYED_FRAGMENT */))])])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_footer)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","style","ref","controls","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_container","default","_withCtx","_component_el_header","$setup","_","_component_el_aside","width","_hoisted_2","_hoisted_3","_hoisted_4","src","videoData","url","type","_hoisted_5","_createTextVNode","_component_el_main","_component_el_text","_hoisted_6","_hoisted_7","_toDisplayString","Descriptions","actors","_component_el_button","classify","_hoisted_8","description","_hoisted_9","_hoisted_10","onClick","Likes","isLiked","_hoisted_11","quantity","_hoisted_12","_cache","$event","Collect","isCollect","_hoisted_13","collect","_hoisted_14","_hoisted_15","_hoisted_16","numberOfEpisodes","_hoisted_17","_createCommentVNode","_hoisted_18","_Fragment","_renderList","displayedEpisodes","episode","index","_createBlock","key","loadEpisode","_hoisted_19","_hoisted_20","totalPages","page","setCurrentPage","_normalizeClass","active","currentPage","_component_el_footer"],"sources":["F:\\video\\vue\\src\\views\\VideoDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\" style=\"min-height: 100%; padding-bottom: 100px;background-color: black;\">\r\n      <el-container>\r\n        <el-header>\r\n           <navigation/>\r\n        </el-header>\r\n        <el-container>\r\n          <el-aside width=\"1000px\">\r\n            <div class=\"video-wrapper\">\r\n              <div class=\"video-container\">\r\n                <video ref=\"videoPlayer\" controls class=\"custom-video\" >\r\n                  <source :src=\"videoData.url\" type=\"video/mp4\">\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              </div>\r\n            </div>\r\n          </el-aside>\r\n          <el-container>\r\n            <el-main width=\"382px\">\r\n                <el-text><h1 style=\"color: white;font-size: ;\">我思念的她</h1></el-text>\r\n                <el-text><p style=\"color: white\">主演：{{ Descriptions && Descriptions.actors }}</p></el-text>\r\n              <el-button>{{Descriptions && Descriptions.classify}}</el-button>\r\n              <el-button>民国</el-button>\r\n              <p style=\"color: darkgray\">{{Descriptions && Descriptions.description}}</p>\r\n\r\n              <div class=\"like-favorite-container\">\r\n                  <div class=\"like-container\">\r\n                      <button class=\"like-button\" @click=\"Likes\">{{ isLiked ? '取消点赞' : '点赞' }}</button>\r\n                      <span class=\"like-count\">{{Descriptions && Descriptions.quantity}}</span>\r\n              </div>\r\n              <div class=\"favorite-container\">\r\n                  <button class=\"favorite-button\" @click=\"Collect()\">{{ isCollect ? '取消收藏' : '收藏' }}</button>\r\n                  <span class=\"favorite-count\">{{Descriptions && Descriptions.collect}}</span>\r\n              </div>\r\n              </div>\r\n              <div style=\"display: flex; justify-content: space-between;\">\r\n                    <el-text> <h2 style=\"color: white\">选集</h2></el-text>\r\n                      <el-text><h4 style=\"color: #8a8b8d;margin-right: 240px;margin-top: 30px\">共{{numberOfEpisodes}}集</h4></el-text>\r\n              </div>\r\n\r\n              <div class=\"button-bottom-half\">  <!-- 上半部分 -->\r\n                <div class=\"button-inner-container\">\r\n                  <el-button v-for=\"(episode, index) in displayedEpisodes\" :key=\"index\" @click=\"loadEpisode(index+1)\" class=\"episode-button\">\r\n                    {{ episode }}\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"pagination-top-half\"> <!-- 下半部分 -->\r\n                <!-- 这里放其他内容 -->\r\n                <div class=\"pagination\">\r\n                  <el-button v-for=\"page in totalPages\" :key=\"page\" @click=\"setCurrentPage(page)\" :class=\"{ active: page === currentPage }\">{{ page }}</el-button>\r\n                </div>\r\n              </div>\r\n            </el-main>\r\n            <el-footer>\r\n\r\n            </el-footer>\r\n          </el-container>\r\n        </el-container>\r\n      </el-container>\r\n    </div>\r\n  </template>\r\n\r\n  <script setup>\r\nimport Navigation from \"@/views/navigation.vue\";\r\nimport { ref, onMounted,computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst videoData=ref('')\r\nconst route = useRoute();\r\nconst videoName = route.params.name;\r\nconsole.log(\"=====\",videoName);\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\nconst  Descriptions= ref(null)\r\nconst episodesPerPage = 25;\r\nconst currentPage = ref(1);\r\nconst isLiked = ref(false);\r\nconst isCollect=ref(false);\r\n //第一集url和短剧的信息\r\n const loadVideoData = async () => {\r\n    try {\r\n      const res = await request.get('/file/Inception',{params: {name: videoName} });\r\n      // const res = await request.get(`/file/${videoId}`);\r\n      videoData.value = res.data.data;\r\n      console.log(\"[[[\",videoData.value)\r\n    } catch (error) {\r\n      console.error('Error loading video data:', error);\r\n    }\r\n  };\r\n  const loadDescription =async () => {\r\n  try {\r\n    const res=await request.get('/details/finAll', {params: {name: videoName} })\r\n    Descriptions.value=res.data.data\r\n    console.log(\"res.data.data----------\",res.data.data)\r\n  }catch (error){\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n}\r\n\r\n//获取这个剧有多少集\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\nconst displayedEpisodes = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\r\n  return Array.from({ length: endIndex - startIndex }, (_, index) => startIndex + index + 1);\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  console.log(\"?????????\", episodeNumber);\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const actualEpisodeNumber = startIndex + episodeNumber;\r\n  try {\r\n    const res = await request.get(`/videos/${videoName}/episode/${actualEpisodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst setCurrentPage = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n\r\n//点赞数量\r\nconst Likes = async () => {\r\n  if (!isLiked.value) {\r\n    // 如果当前未点赞，则进行点赞操作\r\n    // 发送点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likes',{params: { name: videoName}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = true;\r\n  } else {\r\n    // 如果当前已经点赞，则取消点赞操作\r\n    // 发送取消点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likesDelete',{params: { name: videoName}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = false;\r\n  }\r\n\r\n};\r\n\r\n//收藏数量\r\nconst Collect = async () => {\r\n  if (!isCollect.value){\r\n    const res = await request.get('/details/collect',{params: { name: videoName}});\r\n    Descriptions.value.collect=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isCollect.value=true\r\n  }else {\r\n    const res = await request.get('/details/collectDelete',{params: { name: videoName}});\r\n    Descriptions.value.collect=res.data.data\r\n    isCollect.value=false\r\n  }\r\n\r\n};\r\n  onMounted(() => {\r\n    loadVideoData();\r\n    loadDescription();\r\n    loadNumberOfEpisodes();\r\n  });\r\n  </script>\r\n\r\n  <style scoped>\r\n.video-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black; /* 添加按钮边框样式 */\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n  flex: 1;\r\n}\r\n\r\n.custom-video {\r\n  width: 1000px;\r\n  height: 800px;\r\n  background-color: white;\r\n  background-color: rgba(255, 255, 255, 0.6); /* 白色背景，透明度为 0.5 */\r\n}\r\n.like-favorite-container {\r\n  border: 1px solid darkgray;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.like-container, .favorite-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.like-button, .favorite-button {\r\n  padding: 5px 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: darkgray;\r\n  cursor: pointer;\r\n}\r\n\r\n.like-count, .favorite-count {\r\n  margin-left: 5px;\r\n  color: white;\r\n}\r\n\r\n.like-button:hover, .favorite-button:hover {\r\n  background-color: darkgray;\r\n  color: white;\r\n}\r\n.button-bottom-half {\r\n  flex: 1;\r\n}\r\n.button-inner-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  width: calc(100% - 20px); /* 设置按钮宽度为容器宽度的 20%，减去间距 */\r\n}\r\n.button-inner-container button {\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #333333;\r\n  border: none;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n.episode-button {\r\n\r\n  height: 50px;\r\n  background-color: #333333;\r\n  //border: 2px solid white; /* 添加按钮边框样式 */\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  padding: 20px; /* 增加按钮内边距 */\r\n  line-height: 1; /* 让文本垂直居中 */\r\n  margin-left: 5px;\r\n  border-radius: 2px;\r\n}\r\n.pagination-top-half {\r\n  flex: 1;\r\n}\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.pagination button {\r\n  margin-right: 5px;\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button.active {\r\n  background-color: #555;\r\n}\r\n  </style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}