{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, isDate, truthProp, numericProp, getScrollTop, makeStringProp, makeNumericProp } from \"../utils\";\nimport { t, bem, name, getToday, cloneDate, cloneDates, getPrevDay, getNextDay, compareDay, calcDateNum, compareMonth, getDayByOffset } from \"./utils\";\nimport { raf, useRect, onMountedOrActivated } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Popup } from \"../popup\";\nimport { Button } from \"../button\";\nimport { Toast } from \"../toast\";\nimport CalendarMonth from \"./CalendarMonth\";\nimport CalendarHeader from \"./CalendarHeader\";\nconst calendarProps = {\n  show: Boolean,\n  type: makeStringProp(\"single\"),\n  title: String,\n  color: String,\n  round: truthProp,\n  readonly: Boolean,\n  poppable: truthProp,\n  maxRange: makeNumericProp(null),\n  position: makeStringProp(\"bottom\"),\n  teleport: [String, Object],\n  showMark: truthProp,\n  showTitle: truthProp,\n  formatter: Function,\n  rowHeight: numericProp,\n  confirmText: String,\n  rangePrompt: String,\n  lazyRender: truthProp,\n  showConfirm: truthProp,\n  defaultDate: [Date, Array],\n  allowSameDay: Boolean,\n  showSubtitle: truthProp,\n  closeOnPopstate: truthProp,\n  showRangePrompt: truthProp,\n  confirmDisabledText: String,\n  closeOnClickOverlay: truthProp,\n  safeAreaInsetBottom: truthProp,\n  minDate: {\n    type: Date,\n    validator: isDate,\n    default: getToday\n  },\n  maxDate: {\n    type: Date,\n    validator: isDate,\n    default: () => {\n      const now = getToday();\n      return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());\n    }\n  },\n  firstDayOfWeek: {\n    type: numericProp,\n    default: 0,\n    validator: val => val >= 0 && val <= 6\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"unselect\", \"month-show\", \"over-range\", \"update:show\", \"click-subtitle\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const limitDateRange = (date, minDate = props.minDate, maxDate = props.maxDate) => {\n      if (compareDay(date, minDate) === -1) {\n        return minDate;\n      }\n      if (compareDay(date, maxDate) === 1) {\n        return maxDate;\n      }\n      return date;\n    };\n    const getInitialDate = (defaultDate = props.defaultDate) => {\n      const {\n        type,\n        minDate,\n        maxDate\n      } = props;\n      if (defaultDate === null) {\n        return defaultDate;\n      }\n      const now = getToday();\n      if (type === \"range\") {\n        if (!Array.isArray(defaultDate)) {\n          defaultDate = [];\n        }\n        const start = limitDateRange(defaultDate[0] || now, minDate, getPrevDay(maxDate));\n        const end = limitDateRange(defaultDate[1] || now, getNextDay(minDate));\n        return [start, end];\n      }\n      if (type === \"multiple\") {\n        if (Array.isArray(defaultDate)) {\n          return defaultDate.map(date => limitDateRange(date));\n        }\n        return [limitDateRange(now)];\n      }\n      if (!defaultDate || Array.isArray(defaultDate)) {\n        defaultDate = now;\n      }\n      return limitDateRange(defaultDate);\n    };\n    let bodyHeight;\n    const bodyRef = ref();\n    const subtitle = ref(\"\");\n    const currentDate = ref(getInitialDate());\n    const [monthRefs, setMonthRefs] = useRefs();\n    const dayOffset = computed(() => props.firstDayOfWeek ? +props.firstDayOfWeek % 7 : 0);\n    const months = computed(() => {\n      const months2 = [];\n      const cursor = new Date(props.minDate);\n      cursor.setDate(1);\n      do {\n        months2.push(new Date(cursor));\n        cursor.setMonth(cursor.getMonth() + 1);\n      } while (compareMonth(cursor, props.maxDate) !== 1);\n      return months2;\n    });\n    const buttonDisabled = computed(() => {\n      if (currentDate.value) {\n        if (props.type === \"range\") {\n          return !currentDate.value[0] || !currentDate.value[1];\n        }\n        if (props.type === \"multiple\") {\n          return !currentDate.value.length;\n        }\n      }\n      return !currentDate.value;\n    });\n    const onScroll = () => {\n      const top = getScrollTop(bodyRef.value);\n      const bottom = top + bodyHeight;\n      const heights = months.value.map((item, index) => monthRefs.value[index].getHeight());\n      const heightSum = heights.reduce((a, b) => a + b, 0);\n      if (bottom > heightSum && top > 0) {\n        return;\n      }\n      let height = 0;\n      let currentMonth;\n      const visibleRange = [-1, -1];\n      for (let i = 0; i < months.value.length; i++) {\n        const month = monthRefs.value[i];\n        const visible = height <= bottom && height + heights[i] >= top;\n        if (visible) {\n          visibleRange[1] = i;\n          if (!currentMonth) {\n            currentMonth = month;\n            visibleRange[0] = i;\n          }\n          if (!monthRefs.value[i].showed) {\n            monthRefs.value[i].showed = true;\n            emit(\"month-show\", {\n              date: month.date,\n              title: month.getTitle()\n            });\n          }\n        }\n        height += heights[i];\n      }\n      months.value.forEach((month, index) => {\n        const visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;\n        monthRefs.value[index].setVisible(visible);\n      });\n      if (currentMonth) {\n        subtitle.value = currentMonth.getTitle();\n      }\n    };\n    const scrollToDate = targetDate => {\n      raf(() => {\n        months.value.some((month, index) => {\n          if (compareMonth(month, targetDate) === 0) {\n            if (bodyRef.value) {\n              monthRefs.value[index].scrollToDate(bodyRef.value, targetDate);\n            }\n            return true;\n          }\n          return false;\n        });\n        onScroll();\n      });\n    };\n    const scrollToCurrentDate = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      if (currentDate.value) {\n        const targetDate = props.type === \"single\" ? currentDate.value : currentDate.value[0];\n        scrollToDate(targetDate);\n      } else {\n        raf(onScroll);\n      }\n    };\n    const init = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      raf(() => {\n        bodyHeight = Math.floor(useRect(bodyRef).height);\n        scrollToCurrentDate();\n      });\n    };\n    const reset = (date = getInitialDate()) => {\n      currentDate.value = date;\n      scrollToCurrentDate();\n    };\n    const checkRange = date => {\n      const {\n        maxRange,\n        rangePrompt,\n        showRangePrompt\n      } = props;\n      if (maxRange && calcDateNum(date) > maxRange) {\n        if (showRangePrompt) {\n          Toast(rangePrompt || t(\"rangePrompt\", maxRange));\n        }\n        emit(\"over-range\");\n        return false;\n      }\n      return true;\n    };\n    const onConfirm = () => {\n      var _a;\n      return emit(\"confirm\", (_a = currentDate.value) != null ? _a : cloneDates(currentDate.value));\n    };\n    const select = (date, complete) => {\n      const setCurrentDate = date2 => {\n        currentDate.value = date2;\n        emit(\"select\", cloneDates(date2));\n      };\n      if (complete && props.type === \"range\") {\n        const valid = checkRange(date);\n        if (!valid) {\n          setCurrentDate([date[0], getDayByOffset(date[0], +props.maxRange - 1)]);\n          return;\n        }\n      }\n      setCurrentDate(date);\n      if (complete && !props.showConfirm) {\n        onConfirm();\n      }\n    };\n    const getDisabledDate = (disabledDays2, startDay, date) => {\n      var _a;\n      return (_a = disabledDays2.find(day => compareDay(startDay, day.date) === -1 && compareDay(day.date, date) === -1)) == null ? void 0 : _a.date;\n    };\n    const disabledDays = computed(() => monthRefs.value.reduce((arr, ref2) => {\n      var _a, _b;\n      arr.push(...((_b = (_a = ref2.disabledDays) == null ? void 0 : _a.value) != null ? _b : []));\n      return arr;\n    }, []));\n    const onClickDay = item => {\n      if (props.readonly || !item.date) {\n        return;\n      }\n      const {\n        date\n      } = item;\n      const {\n        type\n      } = props;\n      if (type === \"range\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const [startDay, endDay] = currentDate.value;\n        if (startDay && !endDay) {\n          const compareToStart = compareDay(date, startDay);\n          if (compareToStart === 1) {\n            const disabledDay = getDisabledDate(disabledDays.value, startDay, date);\n            if (disabledDay) {\n              const endDay2 = getPrevDay(disabledDay);\n              if (compareDay(startDay, endDay2) === -1) {\n                select([startDay, endDay2]);\n              } else {\n                select([date]);\n              }\n            } else {\n              select([startDay, date], true);\n            }\n          } else if (compareToStart === -1) {\n            select([date]);\n          } else if (props.allowSameDay) {\n            select([date, date], true);\n          }\n        } else {\n          select([date]);\n        }\n      } else if (type === \"multiple\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const dates = currentDate.value;\n        const selectedIndex = dates.findIndex(dateItem => compareDay(dateItem, date) === 0);\n        if (selectedIndex !== -1) {\n          const [unselectedDate] = dates.splice(selectedIndex, 1);\n          emit(\"unselect\", cloneDate(unselectedDate));\n        } else if (props.maxRange && dates.length >= props.maxRange) {\n          Toast(props.rangePrompt || t(\"rangePrompt\", props.maxRange));\n        } else {\n          select([...dates, date]);\n        }\n      } else {\n        select(date, true);\n      }\n    };\n    const updateShow = value => emit(\"update:show\", value);\n    const renderMonth = (date, index) => {\n      const showMonthTitle = index !== 0 || !props.showSubtitle;\n      return _createVNode(CalendarMonth, _mergeProps({\n        \"ref\": setMonthRefs(index),\n        \"date\": date,\n        \"currentDate\": currentDate.value,\n        \"showMonthTitle\": showMonthTitle,\n        \"firstDayOfWeek\": dayOffset.value\n      }, pick(props, [\"type\", \"color\", \"minDate\", \"maxDate\", \"showMark\", \"formatter\", \"rowHeight\", \"lazyRender\", \"showSubtitle\", \"allowSameDay\"]), {\n        \"onClick\": onClickDay\n      }), pick(slots, [\"top-info\", \"bottom-info\"]));\n    };\n    const renderFooterButton = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n      if (props.showConfirm) {\n        const slot = slots[\"confirm-text\"];\n        const disabled = buttonDisabled.value;\n        const text = disabled ? props.confirmDisabledText : props.confirmText;\n        return _createVNode(Button, {\n          \"round\": true,\n          \"block\": true,\n          \"type\": \"danger\",\n          \"color\": props.color,\n          \"class\": bem(\"confirm\"),\n          \"disabled\": disabled,\n          \"nativeType\": \"button\",\n          \"onClick\": onConfirm\n        }, {\n          default: () => [slot ? slot({\n            disabled\n          }) : text || t(\"confirm\")]\n        });\n      }\n    };\n    const renderFooter = () => _createVNode(\"div\", {\n      \"class\": [bem(\"footer\"), {\n        \"van-safe-area-bottom\": props.safeAreaInsetBottom\n      }]\n    }, [renderFooterButton()]);\n    const renderCalendar = () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [_createVNode(CalendarHeader, {\n      \"title\": props.title,\n      \"subtitle\": subtitle.value,\n      \"showTitle\": props.showTitle,\n      \"showSubtitle\": props.showSubtitle,\n      \"firstDayOfWeek\": dayOffset.value,\n      \"onClick-subtitle\": event => emit(\"click-subtitle\", event)\n    }, pick(slots, [\"title\", \"subtitle\"])), _createVNode(\"div\", {\n      \"ref\": bodyRef,\n      \"class\": bem(\"body\"),\n      \"onScroll\": onScroll\n    }, [months.value.map(renderMonth)]), renderFooter()]);\n    watch(() => props.show, init);\n    watch(() => [props.type, props.minDate, props.maxDate], () => reset(getInitialDate(currentDate.value)));\n    watch(() => props.defaultDate, (value = null) => {\n      currentDate.value = value;\n      scrollToCurrentDate();\n    });\n    useExpose({\n      reset,\n      scrollToDate\n    });\n    onMountedOrActivated(init);\n    return () => {\n      if (props.poppable) {\n        return _createVNode(Popup, {\n          \"show\": props.show,\n          \"class\": bem(\"popup\"),\n          \"round\": props.round,\n          \"position\": props.position,\n          \"closeable\": props.showTitle || props.showSubtitle,\n          \"teleport\": props.teleport,\n          \"closeOnPopstate\": props.closeOnPopstate,\n          \"closeOnClickOverlay\": props.closeOnClickOverlay,\n          \"onUpdate:show\": updateShow\n        }, {\n          default: renderCalendar\n        });\n      }\n      return renderCalendar();\n    };\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","mergeProps","_mergeProps","ref","watch","computed","defineComponent","pick","isDate","truthProp","numericProp","getScrollTop","makeStringProp","makeNumericProp","t","bem","name","getToday","cloneDate","cloneDates","getPrevDay","getNextDay","compareDay","calcDateNum","compareMonth","getDayByOffset","raf","useRect","onMountedOrActivated","useRefs","useExpose","Popup","Button","Toast","CalendarMonth","CalendarHeader","calendarProps","show","Boolean","type","title","String","color","round","readonly","poppable","maxRange","position","teleport","Object","showMark","showTitle","formatter","Function","rowHeight","confirmText","rangePrompt","lazyRender","showConfirm","defaultDate","Date","Array","allowSameDay","showSubtitle","closeOnPopstate","showRangePrompt","confirmDisabledText","closeOnClickOverlay","safeAreaInsetBottom","minDate","validator","default","maxDate","now","getFullYear","getMonth","getDate","firstDayOfWeek","val","stdin_default","props","emits","setup","emit","slots","limitDateRange","date","getInitialDate","isArray","start","end","map","bodyHeight","bodyRef","subtitle","currentDate","monthRefs","setMonthRefs","dayOffset","months","months2","cursor","setDate","push","setMonth","buttonDisabled","value","length","onScroll","top","bottom","heights","item","index","getHeight","heightSum","reduce","a","b","height","currentMonth","visibleRange","i","month","visible","showed","getTitle","forEach","setVisible","scrollToDate","targetDate","some","scrollToCurrentDate","init","Math","floor","reset","checkRange","onConfirm","_a","select","complete","setCurrentDate","date2","valid","getDisabledDate","disabledDays2","startDay","find","day","disabledDays","arr","ref2","_b","onClickDay","endDay","compareToStart","disabledDay","endDay2","dates","selectedIndex","findIndex","dateItem","unselectedDate","splice","updateShow","renderMonth","showMonthTitle","renderFooterButton","footer","slot","disabled","text","renderFooter","renderCalendar","event"],"sources":["F:/video/vue/node_modules/vant/es/calendar/Calendar.js"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\nimport { ref, watch, computed, defineComponent } from \"vue\";\nimport { pick, isDate, truthProp, numericProp, getScrollTop, makeStringProp, makeNumericProp } from \"../utils\";\nimport { t, bem, name, getToday, cloneDate, cloneDates, getPrevDay, getNextDay, compareDay, calcDateNum, compareMonth, getDayByOffset } from \"./utils\";\nimport { raf, useRect, onMountedOrActivated } from \"@vant/use\";\nimport { useRefs } from \"../composables/use-refs\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { Popup } from \"../popup\";\nimport { Button } from \"../button\";\nimport { Toast } from \"../toast\";\nimport CalendarMonth from \"./CalendarMonth\";\nimport CalendarHeader from \"./CalendarHeader\";\nconst calendarProps = {\n  show: Boolean,\n  type: makeStringProp(\"single\"),\n  title: String,\n  color: String,\n  round: truthProp,\n  readonly: Boolean,\n  poppable: truthProp,\n  maxRange: makeNumericProp(null),\n  position: makeStringProp(\"bottom\"),\n  teleport: [String, Object],\n  showMark: truthProp,\n  showTitle: truthProp,\n  formatter: Function,\n  rowHeight: numericProp,\n  confirmText: String,\n  rangePrompt: String,\n  lazyRender: truthProp,\n  showConfirm: truthProp,\n  defaultDate: [Date, Array],\n  allowSameDay: Boolean,\n  showSubtitle: truthProp,\n  closeOnPopstate: truthProp,\n  showRangePrompt: truthProp,\n  confirmDisabledText: String,\n  closeOnClickOverlay: truthProp,\n  safeAreaInsetBottom: truthProp,\n  minDate: {\n    type: Date,\n    validator: isDate,\n    default: getToday\n  },\n  maxDate: {\n    type: Date,\n    validator: isDate,\n    default: () => {\n      const now = getToday();\n      return new Date(now.getFullYear(), now.getMonth() + 6, now.getDate());\n    }\n  },\n  firstDayOfWeek: {\n    type: numericProp,\n    default: 0,\n    validator: (val) => val >= 0 && val <= 6\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: calendarProps,\n  emits: [\"select\", \"confirm\", \"unselect\", \"month-show\", \"over-range\", \"update:show\", \"click-subtitle\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const limitDateRange = (date, minDate = props.minDate, maxDate = props.maxDate) => {\n      if (compareDay(date, minDate) === -1) {\n        return minDate;\n      }\n      if (compareDay(date, maxDate) === 1) {\n        return maxDate;\n      }\n      return date;\n    };\n    const getInitialDate = (defaultDate = props.defaultDate) => {\n      const {\n        type,\n        minDate,\n        maxDate\n      } = props;\n      if (defaultDate === null) {\n        return defaultDate;\n      }\n      const now = getToday();\n      if (type === \"range\") {\n        if (!Array.isArray(defaultDate)) {\n          defaultDate = [];\n        }\n        const start = limitDateRange(defaultDate[0] || now, minDate, getPrevDay(maxDate));\n        const end = limitDateRange(defaultDate[1] || now, getNextDay(minDate));\n        return [start, end];\n      }\n      if (type === \"multiple\") {\n        if (Array.isArray(defaultDate)) {\n          return defaultDate.map((date) => limitDateRange(date));\n        }\n        return [limitDateRange(now)];\n      }\n      if (!defaultDate || Array.isArray(defaultDate)) {\n        defaultDate = now;\n      }\n      return limitDateRange(defaultDate);\n    };\n    let bodyHeight;\n    const bodyRef = ref();\n    const subtitle = ref(\"\");\n    const currentDate = ref(getInitialDate());\n    const [monthRefs, setMonthRefs] = useRefs();\n    const dayOffset = computed(() => props.firstDayOfWeek ? +props.firstDayOfWeek % 7 : 0);\n    const months = computed(() => {\n      const months2 = [];\n      const cursor = new Date(props.minDate);\n      cursor.setDate(1);\n      do {\n        months2.push(new Date(cursor));\n        cursor.setMonth(cursor.getMonth() + 1);\n      } while (compareMonth(cursor, props.maxDate) !== 1);\n      return months2;\n    });\n    const buttonDisabled = computed(() => {\n      if (currentDate.value) {\n        if (props.type === \"range\") {\n          return !currentDate.value[0] || !currentDate.value[1];\n        }\n        if (props.type === \"multiple\") {\n          return !currentDate.value.length;\n        }\n      }\n      return !currentDate.value;\n    });\n    const onScroll = () => {\n      const top = getScrollTop(bodyRef.value);\n      const bottom = top + bodyHeight;\n      const heights = months.value.map((item, index) => monthRefs.value[index].getHeight());\n      const heightSum = heights.reduce((a, b) => a + b, 0);\n      if (bottom > heightSum && top > 0) {\n        return;\n      }\n      let height = 0;\n      let currentMonth;\n      const visibleRange = [-1, -1];\n      for (let i = 0; i < months.value.length; i++) {\n        const month = monthRefs.value[i];\n        const visible = height <= bottom && height + heights[i] >= top;\n        if (visible) {\n          visibleRange[1] = i;\n          if (!currentMonth) {\n            currentMonth = month;\n            visibleRange[0] = i;\n          }\n          if (!monthRefs.value[i].showed) {\n            monthRefs.value[i].showed = true;\n            emit(\"month-show\", {\n              date: month.date,\n              title: month.getTitle()\n            });\n          }\n        }\n        height += heights[i];\n      }\n      months.value.forEach((month, index) => {\n        const visible = index >= visibleRange[0] - 1 && index <= visibleRange[1] + 1;\n        monthRefs.value[index].setVisible(visible);\n      });\n      if (currentMonth) {\n        subtitle.value = currentMonth.getTitle();\n      }\n    };\n    const scrollToDate = (targetDate) => {\n      raf(() => {\n        months.value.some((month, index) => {\n          if (compareMonth(month, targetDate) === 0) {\n            if (bodyRef.value) {\n              monthRefs.value[index].scrollToDate(bodyRef.value, targetDate);\n            }\n            return true;\n          }\n          return false;\n        });\n        onScroll();\n      });\n    };\n    const scrollToCurrentDate = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      if (currentDate.value) {\n        const targetDate = props.type === \"single\" ? currentDate.value : currentDate.value[0];\n        scrollToDate(targetDate);\n      } else {\n        raf(onScroll);\n      }\n    };\n    const init = () => {\n      if (props.poppable && !props.show) {\n        return;\n      }\n      raf(() => {\n        bodyHeight = Math.floor(useRect(bodyRef).height);\n        scrollToCurrentDate();\n      });\n    };\n    const reset = (date = getInitialDate()) => {\n      currentDate.value = date;\n      scrollToCurrentDate();\n    };\n    const checkRange = (date) => {\n      const {\n        maxRange,\n        rangePrompt,\n        showRangePrompt\n      } = props;\n      if (maxRange && calcDateNum(date) > maxRange) {\n        if (showRangePrompt) {\n          Toast(rangePrompt || t(\"rangePrompt\", maxRange));\n        }\n        emit(\"over-range\");\n        return false;\n      }\n      return true;\n    };\n    const onConfirm = () => {\n      var _a;\n      return emit(\"confirm\", (_a = currentDate.value) != null ? _a : cloneDates(currentDate.value));\n    };\n    const select = (date, complete) => {\n      const setCurrentDate = (date2) => {\n        currentDate.value = date2;\n        emit(\"select\", cloneDates(date2));\n      };\n      if (complete && props.type === \"range\") {\n        const valid = checkRange(date);\n        if (!valid) {\n          setCurrentDate([date[0], getDayByOffset(date[0], +props.maxRange - 1)]);\n          return;\n        }\n      }\n      setCurrentDate(date);\n      if (complete && !props.showConfirm) {\n        onConfirm();\n      }\n    };\n    const getDisabledDate = (disabledDays2, startDay, date) => {\n      var _a;\n      return (_a = disabledDays2.find((day) => compareDay(startDay, day.date) === -1 && compareDay(day.date, date) === -1)) == null ? void 0 : _a.date;\n    };\n    const disabledDays = computed(() => monthRefs.value.reduce((arr, ref2) => {\n      var _a, _b;\n      arr.push(...(_b = (_a = ref2.disabledDays) == null ? void 0 : _a.value) != null ? _b : []);\n      return arr;\n    }, []));\n    const onClickDay = (item) => {\n      if (props.readonly || !item.date) {\n        return;\n      }\n      const {\n        date\n      } = item;\n      const {\n        type\n      } = props;\n      if (type === \"range\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const [startDay, endDay] = currentDate.value;\n        if (startDay && !endDay) {\n          const compareToStart = compareDay(date, startDay);\n          if (compareToStart === 1) {\n            const disabledDay = getDisabledDate(disabledDays.value, startDay, date);\n            if (disabledDay) {\n              const endDay2 = getPrevDay(disabledDay);\n              if (compareDay(startDay, endDay2) === -1) {\n                select([startDay, endDay2]);\n              } else {\n                select([date]);\n              }\n            } else {\n              select([startDay, date], true);\n            }\n          } else if (compareToStart === -1) {\n            select([date]);\n          } else if (props.allowSameDay) {\n            select([date, date], true);\n          }\n        } else {\n          select([date]);\n        }\n      } else if (type === \"multiple\") {\n        if (!currentDate.value) {\n          select([date]);\n          return;\n        }\n        const dates = currentDate.value;\n        const selectedIndex = dates.findIndex((dateItem) => compareDay(dateItem, date) === 0);\n        if (selectedIndex !== -1) {\n          const [unselectedDate] = dates.splice(selectedIndex, 1);\n          emit(\"unselect\", cloneDate(unselectedDate));\n        } else if (props.maxRange && dates.length >= props.maxRange) {\n          Toast(props.rangePrompt || t(\"rangePrompt\", props.maxRange));\n        } else {\n          select([...dates, date]);\n        }\n      } else {\n        select(date, true);\n      }\n    };\n    const updateShow = (value) => emit(\"update:show\", value);\n    const renderMonth = (date, index) => {\n      const showMonthTitle = index !== 0 || !props.showSubtitle;\n      return _createVNode(CalendarMonth, _mergeProps({\n        \"ref\": setMonthRefs(index),\n        \"date\": date,\n        \"currentDate\": currentDate.value,\n        \"showMonthTitle\": showMonthTitle,\n        \"firstDayOfWeek\": dayOffset.value\n      }, pick(props, [\"type\", \"color\", \"minDate\", \"maxDate\", \"showMark\", \"formatter\", \"rowHeight\", \"lazyRender\", \"showSubtitle\", \"allowSameDay\"]), {\n        \"onClick\": onClickDay\n      }), pick(slots, [\"top-info\", \"bottom-info\"]));\n    };\n    const renderFooterButton = () => {\n      if (slots.footer) {\n        return slots.footer();\n      }\n      if (props.showConfirm) {\n        const slot = slots[\"confirm-text\"];\n        const disabled = buttonDisabled.value;\n        const text = disabled ? props.confirmDisabledText : props.confirmText;\n        return _createVNode(Button, {\n          \"round\": true,\n          \"block\": true,\n          \"type\": \"danger\",\n          \"color\": props.color,\n          \"class\": bem(\"confirm\"),\n          \"disabled\": disabled,\n          \"nativeType\": \"button\",\n          \"onClick\": onConfirm\n        }, {\n          default: () => [slot ? slot({\n            disabled\n          }) : text || t(\"confirm\")]\n        });\n      }\n    };\n    const renderFooter = () => _createVNode(\"div\", {\n      \"class\": [bem(\"footer\"), {\n        \"van-safe-area-bottom\": props.safeAreaInsetBottom\n      }]\n    }, [renderFooterButton()]);\n    const renderCalendar = () => _createVNode(\"div\", {\n      \"class\": bem()\n    }, [_createVNode(CalendarHeader, {\n      \"title\": props.title,\n      \"subtitle\": subtitle.value,\n      \"showTitle\": props.showTitle,\n      \"showSubtitle\": props.showSubtitle,\n      \"firstDayOfWeek\": dayOffset.value,\n      \"onClick-subtitle\": (event) => emit(\"click-subtitle\", event)\n    }, pick(slots, [\"title\", \"subtitle\"])), _createVNode(\"div\", {\n      \"ref\": bodyRef,\n      \"class\": bem(\"body\"),\n      \"onScroll\": onScroll\n    }, [months.value.map(renderMonth)]), renderFooter()]);\n    watch(() => props.show, init);\n    watch(() => [props.type, props.minDate, props.maxDate], () => reset(getInitialDate(currentDate.value)));\n    watch(() => props.defaultDate, (value = null) => {\n      currentDate.value = value;\n      scrollToCurrentDate();\n    });\n    useExpose({\n      reset,\n      scrollToDate\n    });\n    onMountedOrActivated(init);\n    return () => {\n      if (props.poppable) {\n        return _createVNode(Popup, {\n          \"show\": props.show,\n          \"class\": bem(\"popup\"),\n          \"round\": props.round,\n          \"position\": props.position,\n          \"closeable\": props.showTitle || props.showSubtitle,\n          \"teleport\": props.teleport,\n          \"closeOnPopstate\": props.closeOnPopstate,\n          \"closeOnClickOverlay\": props.closeOnClickOverlay,\n          \"onUpdate:show\": updateShow\n        }, {\n          default: renderCalendar\n        });\n      }\n      return renderCalendar();\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,EAAEC,UAAU,IAAIC,WAAW,QAAQ,KAAK;AAC5E,SAASC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,KAAK;AAC3D,SAASC,IAAI,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,EAAEC,eAAe,QAAQ,UAAU;AAC9G,SAASC,CAAC,EAAEC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,QAAQ,SAAS;AACtJ,SAASC,GAAG,EAAEC,OAAO,EAAEC,oBAAoB,QAAQ,WAAW;AAC9D,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAEC,OAAO;EACbC,IAAI,EAAE3B,cAAc,CAAC,QAAQ,CAAC;EAC9B4B,KAAK,EAAEC,MAAM;EACbC,KAAK,EAAED,MAAM;EACbE,KAAK,EAAElC,SAAS;EAChBmC,QAAQ,EAAEN,OAAO;EACjBO,QAAQ,EAAEpC,SAAS;EACnBqC,QAAQ,EAAEjC,eAAe,CAAC,IAAI,CAAC;EAC/BkC,QAAQ,EAAEnC,cAAc,CAAC,QAAQ,CAAC;EAClCoC,QAAQ,EAAE,CAACP,MAAM,EAAEQ,MAAM,CAAC;EAC1BC,QAAQ,EAAEzC,SAAS;EACnB0C,SAAS,EAAE1C,SAAS;EACpB2C,SAAS,EAAEC,QAAQ;EACnBC,SAAS,EAAE5C,WAAW;EACtB6C,WAAW,EAAEd,MAAM;EACnBe,WAAW,EAAEf,MAAM;EACnBgB,UAAU,EAAEhD,SAAS;EACrBiD,WAAW,EAAEjD,SAAS;EACtBkD,WAAW,EAAE,CAACC,IAAI,EAAEC,KAAK,CAAC;EAC1BC,YAAY,EAAExB,OAAO;EACrByB,YAAY,EAAEtD,SAAS;EACvBuD,eAAe,EAAEvD,SAAS;EAC1BwD,eAAe,EAAExD,SAAS;EAC1ByD,mBAAmB,EAAEzB,MAAM;EAC3B0B,mBAAmB,EAAE1D,SAAS;EAC9B2D,mBAAmB,EAAE3D,SAAS;EAC9B4D,OAAO,EAAE;IACP9B,IAAI,EAAEqB,IAAI;IACVU,SAAS,EAAE9D,MAAM;IACjB+D,OAAO,EAAEtD;EACX,CAAC;EACDuD,OAAO,EAAE;IACPjC,IAAI,EAAEqB,IAAI;IACVU,SAAS,EAAE9D,MAAM;IACjB+D,OAAO,EAAEA,CAAA,KAAM;MACb,MAAME,GAAG,GAAGxD,QAAQ,CAAC,CAAC;MACtB,OAAO,IAAI2C,IAAI,CAACa,GAAG,CAACC,WAAW,CAAC,CAAC,EAAED,GAAG,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEF,GAAG,CAACG,OAAO,CAAC,CAAC,CAAC;IACvE;EACF,CAAC;EACDC,cAAc,EAAE;IACdtC,IAAI,EAAE7B,WAAW;IACjB6D,OAAO,EAAE,CAAC;IACVD,SAAS,EAAGQ,GAAG,IAAKA,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI;EACzC;AACF,CAAC;AACD,IAAIC,aAAa,GAAGzE,eAAe,CAAC;EAClCU,IAAI;EACJgE,KAAK,EAAE5C,aAAa;EACpB6C,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,gBAAgB,CAAC;EACrGC,KAAKA,CAACF,KAAK,EAAE;IACXG,IAAI;IACJC;EACF,CAAC,EAAE;IACD,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEjB,OAAO,GAAGW,KAAK,CAACX,OAAO,EAAEG,OAAO,GAAGQ,KAAK,CAACR,OAAO,KAAK;MACjF,IAAIlD,UAAU,CAACgE,IAAI,EAAEjB,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;QACpC,OAAOA,OAAO;MAChB;MACA,IAAI/C,UAAU,CAACgE,IAAI,EAAEd,OAAO,CAAC,KAAK,CAAC,EAAE;QACnC,OAAOA,OAAO;MAChB;MACA,OAAOc,IAAI;IACb,CAAC;IACD,MAAMC,cAAc,GAAGA,CAAC5B,WAAW,GAAGqB,KAAK,CAACrB,WAAW,KAAK;MAC1D,MAAM;QACJpB,IAAI;QACJ8B,OAAO;QACPG;MACF,CAAC,GAAGQ,KAAK;MACT,IAAIrB,WAAW,KAAK,IAAI,EAAE;QACxB,OAAOA,WAAW;MACpB;MACA,MAAMc,GAAG,GAAGxD,QAAQ,CAAC,CAAC;MACtB,IAAIsB,IAAI,KAAK,OAAO,EAAE;QACpB,IAAI,CAACsB,KAAK,CAAC2B,OAAO,CAAC7B,WAAW,CAAC,EAAE;UAC/BA,WAAW,GAAG,EAAE;QAClB;QACA,MAAM8B,KAAK,GAAGJ,cAAc,CAAC1B,WAAW,CAAC,CAAC,CAAC,IAAIc,GAAG,EAAEJ,OAAO,EAAEjD,UAAU,CAACoD,OAAO,CAAC,CAAC;QACjF,MAAMkB,GAAG,GAAGL,cAAc,CAAC1B,WAAW,CAAC,CAAC,CAAC,IAAIc,GAAG,EAAEpD,UAAU,CAACgD,OAAO,CAAC,CAAC;QACtE,OAAO,CAACoB,KAAK,EAAEC,GAAG,CAAC;MACrB;MACA,IAAInD,IAAI,KAAK,UAAU,EAAE;QACvB,IAAIsB,KAAK,CAAC2B,OAAO,CAAC7B,WAAW,CAAC,EAAE;UAC9B,OAAOA,WAAW,CAACgC,GAAG,CAAEL,IAAI,IAAKD,cAAc,CAACC,IAAI,CAAC,CAAC;QACxD;QACA,OAAO,CAACD,cAAc,CAACZ,GAAG,CAAC,CAAC;MAC9B;MACA,IAAI,CAACd,WAAW,IAAIE,KAAK,CAAC2B,OAAO,CAAC7B,WAAW,CAAC,EAAE;QAC9CA,WAAW,GAAGc,GAAG;MACnB;MACA,OAAOY,cAAc,CAAC1B,WAAW,CAAC;IACpC,CAAC;IACD,IAAIiC,UAAU;IACd,MAAMC,OAAO,GAAG1F,GAAG,CAAC,CAAC;IACrB,MAAM2F,QAAQ,GAAG3F,GAAG,CAAC,EAAE,CAAC;IACxB,MAAM4F,WAAW,GAAG5F,GAAG,CAACoF,cAAc,CAAC,CAAC,CAAC;IACzC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGpE,OAAO,CAAC,CAAC;IAC3C,MAAMqE,SAAS,GAAG7F,QAAQ,CAAC,MAAM2E,KAAK,CAACH,cAAc,GAAG,CAACG,KAAK,CAACH,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;IACtF,MAAMsB,MAAM,GAAG9F,QAAQ,CAAC,MAAM;MAC5B,MAAM+F,OAAO,GAAG,EAAE;MAClB,MAAMC,MAAM,GAAG,IAAIzC,IAAI,CAACoB,KAAK,CAACX,OAAO,CAAC;MACtCgC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;MACjB,GAAG;QACDF,OAAO,CAACG,IAAI,CAAC,IAAI3C,IAAI,CAACyC,MAAM,CAAC,CAAC;QAC9BA,MAAM,CAACG,QAAQ,CAACH,MAAM,CAAC1B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MACxC,CAAC,QAAQnD,YAAY,CAAC6E,MAAM,EAAErB,KAAK,CAACR,OAAO,CAAC,KAAK,CAAC;MAClD,OAAO4B,OAAO;IAChB,CAAC,CAAC;IACF,MAAMK,cAAc,GAAGpG,QAAQ,CAAC,MAAM;MACpC,IAAI0F,WAAW,CAACW,KAAK,EAAE;QACrB,IAAI1B,KAAK,CAACzC,IAAI,KAAK,OAAO,EAAE;UAC1B,OAAO,CAACwD,WAAW,CAACW,KAAK,CAAC,CAAC,CAAC,IAAI,CAACX,WAAW,CAACW,KAAK,CAAC,CAAC,CAAC;QACvD;QACA,IAAI1B,KAAK,CAACzC,IAAI,KAAK,UAAU,EAAE;UAC7B,OAAO,CAACwD,WAAW,CAACW,KAAK,CAACC,MAAM;QAClC;MACF;MACA,OAAO,CAACZ,WAAW,CAACW,KAAK;IAC3B,CAAC,CAAC;IACF,MAAME,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAMC,GAAG,GAAGlG,YAAY,CAACkF,OAAO,CAACa,KAAK,CAAC;MACvC,MAAMI,MAAM,GAAGD,GAAG,GAAGjB,UAAU;MAC/B,MAAMmB,OAAO,GAAGZ,MAAM,CAACO,KAAK,CAACf,GAAG,CAAC,CAACqB,IAAI,EAAEC,KAAK,KAAKjB,SAAS,CAACU,KAAK,CAACO,KAAK,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;MACrF,MAAMC,SAAS,GAAGJ,OAAO,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;MACpD,IAAIR,MAAM,GAAGK,SAAS,IAAIN,GAAG,GAAG,CAAC,EAAE;QACjC;MACF;MACA,IAAIU,MAAM,GAAG,CAAC;MACd,IAAIC,YAAY;MAChB,MAAMC,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,MAAM,CAACO,KAAK,CAACC,MAAM,EAAEe,CAAC,EAAE,EAAE;QAC5C,MAAMC,KAAK,GAAG3B,SAAS,CAACU,KAAK,CAACgB,CAAC,CAAC;QAChC,MAAME,OAAO,GAAGL,MAAM,IAAIT,MAAM,IAAIS,MAAM,GAAGR,OAAO,CAACW,CAAC,CAAC,IAAIb,GAAG;QAC9D,IAAIe,OAAO,EAAE;UACXH,YAAY,CAAC,CAAC,CAAC,GAAGC,CAAC;UACnB,IAAI,CAACF,YAAY,EAAE;YACjBA,YAAY,GAAGG,KAAK;YACpBF,YAAY,CAAC,CAAC,CAAC,GAAGC,CAAC;UACrB;UACA,IAAI,CAAC1B,SAAS,CAACU,KAAK,CAACgB,CAAC,CAAC,CAACG,MAAM,EAAE;YAC9B7B,SAAS,CAACU,KAAK,CAACgB,CAAC,CAAC,CAACG,MAAM,GAAG,IAAI;YAChC1C,IAAI,CAAC,YAAY,EAAE;cACjBG,IAAI,EAAEqC,KAAK,CAACrC,IAAI;cAChB9C,KAAK,EAAEmF,KAAK,CAACG,QAAQ,CAAC;YACxB,CAAC,CAAC;UACJ;QACF;QACAP,MAAM,IAAIR,OAAO,CAACW,CAAC,CAAC;MACtB;MACAvB,MAAM,CAACO,KAAK,CAACqB,OAAO,CAAC,CAACJ,KAAK,EAAEV,KAAK,KAAK;QACrC,MAAMW,OAAO,GAAGX,KAAK,IAAIQ,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIR,KAAK,IAAIQ,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;QAC5EzB,SAAS,CAACU,KAAK,CAACO,KAAK,CAAC,CAACe,UAAU,CAACJ,OAAO,CAAC;MAC5C,CAAC,CAAC;MACF,IAAIJ,YAAY,EAAE;QAChB1B,QAAQ,CAACY,KAAK,GAAGc,YAAY,CAACM,QAAQ,CAAC,CAAC;MAC1C;IACF,CAAC;IACD,MAAMG,YAAY,GAAIC,UAAU,IAAK;MACnCxG,GAAG,CAAC,MAAM;QACRyE,MAAM,CAACO,KAAK,CAACyB,IAAI,CAAC,CAACR,KAAK,EAAEV,KAAK,KAAK;UAClC,IAAIzF,YAAY,CAACmG,KAAK,EAAEO,UAAU,CAAC,KAAK,CAAC,EAAE;YACzC,IAAIrC,OAAO,CAACa,KAAK,EAAE;cACjBV,SAAS,CAACU,KAAK,CAACO,KAAK,CAAC,CAACgB,YAAY,CAACpC,OAAO,CAACa,KAAK,EAAEwB,UAAU,CAAC;YAChE;YACA,OAAO,IAAI;UACb;UACA,OAAO,KAAK;QACd,CAAC,CAAC;QACFtB,QAAQ,CAAC,CAAC;MACZ,CAAC,CAAC;IACJ,CAAC;IACD,MAAMwB,mBAAmB,GAAGA,CAAA,KAAM;MAChC,IAAIpD,KAAK,CAACnC,QAAQ,IAAI,CAACmC,KAAK,CAAC3C,IAAI,EAAE;QACjC;MACF;MACA,IAAI0D,WAAW,CAACW,KAAK,EAAE;QACrB,MAAMwB,UAAU,GAAGlD,KAAK,CAACzC,IAAI,KAAK,QAAQ,GAAGwD,WAAW,CAACW,KAAK,GAAGX,WAAW,CAACW,KAAK,CAAC,CAAC,CAAC;QACrFuB,YAAY,CAACC,UAAU,CAAC;MAC1B,CAAC,MAAM;QACLxG,GAAG,CAACkF,QAAQ,CAAC;MACf;IACF,CAAC;IACD,MAAMyB,IAAI,GAAGA,CAAA,KAAM;MACjB,IAAIrD,KAAK,CAACnC,QAAQ,IAAI,CAACmC,KAAK,CAAC3C,IAAI,EAAE;QACjC;MACF;MACAX,GAAG,CAAC,MAAM;QACRkE,UAAU,GAAG0C,IAAI,CAACC,KAAK,CAAC5G,OAAO,CAACkE,OAAO,CAAC,CAAC0B,MAAM,CAAC;QAChDa,mBAAmB,CAAC,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC;IACD,MAAMI,KAAK,GAAGA,CAAClD,IAAI,GAAGC,cAAc,CAAC,CAAC,KAAK;MACzCQ,WAAW,CAACW,KAAK,GAAGpB,IAAI;MACxB8C,mBAAmB,CAAC,CAAC;IACvB,CAAC;IACD,MAAMK,UAAU,GAAInD,IAAI,IAAK;MAC3B,MAAM;QACJxC,QAAQ;QACRU,WAAW;QACXS;MACF,CAAC,GAAGe,KAAK;MACT,IAAIlC,QAAQ,IAAIvB,WAAW,CAAC+D,IAAI,CAAC,GAAGxC,QAAQ,EAAE;QAC5C,IAAImB,eAAe,EAAE;UACnBhC,KAAK,CAACuB,WAAW,IAAI1C,CAAC,CAAC,aAAa,EAAEgC,QAAQ,CAAC,CAAC;QAClD;QACAqC,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO,KAAK;MACd;MACA,OAAO,IAAI;IACb,CAAC;IACD,MAAMuD,SAAS,GAAGA,CAAA,KAAM;MACtB,IAAIC,EAAE;MACN,OAAOxD,IAAI,CAAC,SAAS,EAAE,CAACwD,EAAE,GAAG5C,WAAW,CAACW,KAAK,KAAK,IAAI,GAAGiC,EAAE,GAAGxH,UAAU,CAAC4E,WAAW,CAACW,KAAK,CAAC,CAAC;IAC/F,CAAC;IACD,MAAMkC,MAAM,GAAGA,CAACtD,IAAI,EAAEuD,QAAQ,KAAK;MACjC,MAAMC,cAAc,GAAIC,KAAK,IAAK;QAChChD,WAAW,CAACW,KAAK,GAAGqC,KAAK;QACzB5D,IAAI,CAAC,QAAQ,EAAEhE,UAAU,CAAC4H,KAAK,CAAC,CAAC;MACnC,CAAC;MACD,IAAIF,QAAQ,IAAI7D,KAAK,CAACzC,IAAI,KAAK,OAAO,EAAE;QACtC,MAAMyG,KAAK,GAAGP,UAAU,CAACnD,IAAI,CAAC;QAC9B,IAAI,CAAC0D,KAAK,EAAE;UACVF,cAAc,CAAC,CAACxD,IAAI,CAAC,CAAC,CAAC,EAAE7D,cAAc,CAAC6D,IAAI,CAAC,CAAC,CAAC,EAAE,CAACN,KAAK,CAAClC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;UACvE;QACF;MACF;MACAgG,cAAc,CAACxD,IAAI,CAAC;MACpB,IAAIuD,QAAQ,IAAI,CAAC7D,KAAK,CAACtB,WAAW,EAAE;QAClCgF,SAAS,CAAC,CAAC;MACb;IACF,CAAC;IACD,MAAMO,eAAe,GAAGA,CAACC,aAAa,EAAEC,QAAQ,EAAE7D,IAAI,KAAK;MACzD,IAAIqD,EAAE;MACN,OAAO,CAACA,EAAE,GAAGO,aAAa,CAACE,IAAI,CAAEC,GAAG,IAAK/H,UAAU,CAAC6H,QAAQ,EAAEE,GAAG,CAAC/D,IAAI,CAAC,KAAK,CAAC,CAAC,IAAIhE,UAAU,CAAC+H,GAAG,CAAC/D,IAAI,EAAEA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqD,EAAE,CAACrD,IAAI;IAClJ,CAAC;IACD,MAAMgE,YAAY,GAAGjJ,QAAQ,CAAC,MAAM2F,SAAS,CAACU,KAAK,CAACU,MAAM,CAAC,CAACmC,GAAG,EAAEC,IAAI,KAAK;MACxE,IAAIb,EAAE,EAAEc,EAAE;MACVF,GAAG,CAAChD,IAAI,CAAC,IAAG,CAACkD,EAAE,GAAG,CAACd,EAAE,GAAGa,IAAI,CAACF,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGX,EAAE,CAACjC,KAAK,KAAK,IAAI,GAAG+C,EAAE,GAAG,EAAE,EAAC;MAC1F,OAAOF,GAAG;IACZ,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,MAAMG,UAAU,GAAI1C,IAAI,IAAK;MAC3B,IAAIhC,KAAK,CAACpC,QAAQ,IAAI,CAACoE,IAAI,CAAC1B,IAAI,EAAE;QAChC;MACF;MACA,MAAM;QACJA;MACF,CAAC,GAAG0B,IAAI;MACR,MAAM;QACJzE;MACF,CAAC,GAAGyC,KAAK;MACT,IAAIzC,IAAI,KAAK,OAAO,EAAE;QACpB,IAAI,CAACwD,WAAW,CAACW,KAAK,EAAE;UACtBkC,MAAM,CAAC,CAACtD,IAAI,CAAC,CAAC;UACd;QACF;QACA,MAAM,CAAC6D,QAAQ,EAAEQ,MAAM,CAAC,GAAG5D,WAAW,CAACW,KAAK;QAC5C,IAAIyC,QAAQ,IAAI,CAACQ,MAAM,EAAE;UACvB,MAAMC,cAAc,GAAGtI,UAAU,CAACgE,IAAI,EAAE6D,QAAQ,CAAC;UACjD,IAAIS,cAAc,KAAK,CAAC,EAAE;YACxB,MAAMC,WAAW,GAAGZ,eAAe,CAACK,YAAY,CAAC5C,KAAK,EAAEyC,QAAQ,EAAE7D,IAAI,CAAC;YACvE,IAAIuE,WAAW,EAAE;cACf,MAAMC,OAAO,GAAG1I,UAAU,CAACyI,WAAW,CAAC;cACvC,IAAIvI,UAAU,CAAC6H,QAAQ,EAAEW,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;gBACxClB,MAAM,CAAC,CAACO,QAAQ,EAAEW,OAAO,CAAC,CAAC;cAC7B,CAAC,MAAM;gBACLlB,MAAM,CAAC,CAACtD,IAAI,CAAC,CAAC;cAChB;YACF,CAAC,MAAM;cACLsD,MAAM,CAAC,CAACO,QAAQ,EAAE7D,IAAI,CAAC,EAAE,IAAI,CAAC;YAChC;UACF,CAAC,MAAM,IAAIsE,cAAc,KAAK,CAAC,CAAC,EAAE;YAChChB,MAAM,CAAC,CAACtD,IAAI,CAAC,CAAC;UAChB,CAAC,MAAM,IAAIN,KAAK,CAAClB,YAAY,EAAE;YAC7B8E,MAAM,CAAC,CAACtD,IAAI,EAAEA,IAAI,CAAC,EAAE,IAAI,CAAC;UAC5B;QACF,CAAC,MAAM;UACLsD,MAAM,CAAC,CAACtD,IAAI,CAAC,CAAC;QAChB;MACF,CAAC,MAAM,IAAI/C,IAAI,KAAK,UAAU,EAAE;QAC9B,IAAI,CAACwD,WAAW,CAACW,KAAK,EAAE;UACtBkC,MAAM,CAAC,CAACtD,IAAI,CAAC,CAAC;UACd;QACF;QACA,MAAMyE,KAAK,GAAGhE,WAAW,CAACW,KAAK;QAC/B,MAAMsD,aAAa,GAAGD,KAAK,CAACE,SAAS,CAAEC,QAAQ,IAAK5I,UAAU,CAAC4I,QAAQ,EAAE5E,IAAI,CAAC,KAAK,CAAC,CAAC;QACrF,IAAI0E,aAAa,KAAK,CAAC,CAAC,EAAE;UACxB,MAAM,CAACG,cAAc,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAACJ,aAAa,EAAE,CAAC,CAAC;UACvD7E,IAAI,CAAC,UAAU,EAAEjE,SAAS,CAACiJ,cAAc,CAAC,CAAC;QAC7C,CAAC,MAAM,IAAInF,KAAK,CAAClC,QAAQ,IAAIiH,KAAK,CAACpD,MAAM,IAAI3B,KAAK,CAAClC,QAAQ,EAAE;UAC3Db,KAAK,CAAC+C,KAAK,CAACxB,WAAW,IAAI1C,CAAC,CAAC,aAAa,EAAEkE,KAAK,CAAClC,QAAQ,CAAC,CAAC;QAC9D,CAAC,MAAM;UACL8F,MAAM,CAAC,CAAC,GAAGmB,KAAK,EAAEzE,IAAI,CAAC,CAAC;QAC1B;MACF,CAAC,MAAM;QACLsD,MAAM,CAACtD,IAAI,EAAE,IAAI,CAAC;MACpB;IACF,CAAC;IACD,MAAM+E,UAAU,GAAI3D,KAAK,IAAKvB,IAAI,CAAC,aAAa,EAAEuB,KAAK,CAAC;IACxD,MAAM4D,WAAW,GAAGA,CAAChF,IAAI,EAAE2B,KAAK,KAAK;MACnC,MAAMsD,cAAc,GAAGtD,KAAK,KAAK,CAAC,IAAI,CAACjC,KAAK,CAACjB,YAAY;MACzD,OAAO/D,YAAY,CAACkC,aAAa,EAAEhC,WAAW,CAAC;QAC7C,KAAK,EAAE+F,YAAY,CAACgB,KAAK,CAAC;QAC1B,MAAM,EAAE3B,IAAI;QACZ,aAAa,EAAES,WAAW,CAACW,KAAK;QAChC,gBAAgB,EAAE6D,cAAc;QAChC,gBAAgB,EAAErE,SAAS,CAACQ;MAC9B,CAAC,EAAEnG,IAAI,CAACyE,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC,EAAE;QAC3I,SAAS,EAAE0E;MACb,CAAC,CAAC,EAAEnJ,IAAI,CAAC6E,KAAK,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,MAAMoF,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAIpF,KAAK,CAACqF,MAAM,EAAE;QAChB,OAAOrF,KAAK,CAACqF,MAAM,CAAC,CAAC;MACvB;MACA,IAAIzF,KAAK,CAACtB,WAAW,EAAE;QACrB,MAAMgH,IAAI,GAAGtF,KAAK,CAAC,cAAc,CAAC;QAClC,MAAMuF,QAAQ,GAAGlE,cAAc,CAACC,KAAK;QACrC,MAAMkE,IAAI,GAAGD,QAAQ,GAAG3F,KAAK,CAACd,mBAAmB,GAAGc,KAAK,CAACzB,WAAW;QACrE,OAAOvD,YAAY,CAACgC,MAAM,EAAE;UAC1B,OAAO,EAAE,IAAI;UACb,OAAO,EAAE,IAAI;UACb,MAAM,EAAE,QAAQ;UAChB,OAAO,EAAEgD,KAAK,CAACtC,KAAK;UACpB,OAAO,EAAE3B,GAAG,CAAC,SAAS,CAAC;UACvB,UAAU,EAAE4J,QAAQ;UACpB,YAAY,EAAE,QAAQ;UACtB,SAAS,EAAEjC;QACb,CAAC,EAAE;UACDnE,OAAO,EAAEA,CAAA,KAAM,CAACmG,IAAI,GAAGA,IAAI,CAAC;YAC1BC;UACF,CAAC,CAAC,GAAGC,IAAI,IAAI9J,CAAC,CAAC,SAAS,CAAC;QAC3B,CAAC,CAAC;MACJ;IACF,CAAC;IACD,MAAM+J,YAAY,GAAGA,CAAA,KAAM7K,YAAY,CAAC,KAAK,EAAE;MAC7C,OAAO,EAAE,CAACe,GAAG,CAAC,QAAQ,CAAC,EAAE;QACvB,sBAAsB,EAAEiE,KAAK,CAACZ;MAChC,CAAC;IACH,CAAC,EAAE,CAACoG,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC1B,MAAMM,cAAc,GAAGA,CAAA,KAAM9K,YAAY,CAAC,KAAK,EAAE;MAC/C,OAAO,EAAEe,GAAG,CAAC;IACf,CAAC,EAAE,CAACf,YAAY,CAACmC,cAAc,EAAE;MAC/B,OAAO,EAAE6C,KAAK,CAACxC,KAAK;MACpB,UAAU,EAAEsD,QAAQ,CAACY,KAAK;MAC1B,WAAW,EAAE1B,KAAK,CAAC7B,SAAS;MAC5B,cAAc,EAAE6B,KAAK,CAACjB,YAAY;MAClC,gBAAgB,EAAEmC,SAAS,CAACQ,KAAK;MACjC,kBAAkB,EAAGqE,KAAK,IAAK5F,IAAI,CAAC,gBAAgB,EAAE4F,KAAK;IAC7D,CAAC,EAAExK,IAAI,CAAC6E,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,EAAEpF,YAAY,CAAC,KAAK,EAAE;MAC1D,KAAK,EAAE6F,OAAO;MACd,OAAO,EAAE9E,GAAG,CAAC,MAAM,CAAC;MACpB,UAAU,EAAE6F;IACd,CAAC,EAAE,CAACT,MAAM,CAACO,KAAK,CAACf,GAAG,CAAC2E,WAAW,CAAC,CAAC,CAAC,EAAEO,YAAY,CAAC,CAAC,CAAC,CAAC;IACrDzK,KAAK,CAAC,MAAM4E,KAAK,CAAC3C,IAAI,EAAEgG,IAAI,CAAC;IAC7BjI,KAAK,CAAC,MAAM,CAAC4E,KAAK,CAACzC,IAAI,EAAEyC,KAAK,CAACX,OAAO,EAAEW,KAAK,CAACR,OAAO,CAAC,EAAE,MAAMgE,KAAK,CAACjD,cAAc,CAACQ,WAAW,CAACW,KAAK,CAAC,CAAC,CAAC;IACvGtG,KAAK,CAAC,MAAM4E,KAAK,CAACrB,WAAW,EAAE,CAAC+C,KAAK,GAAG,IAAI,KAAK;MAC/CX,WAAW,CAACW,KAAK,GAAGA,KAAK;MACzB0B,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC;IACFtG,SAAS,CAAC;MACR0G,KAAK;MACLP;IACF,CAAC,CAAC;IACFrG,oBAAoB,CAACyG,IAAI,CAAC;IAC1B,OAAO,MAAM;MACX,IAAIrD,KAAK,CAACnC,QAAQ,EAAE;QAClB,OAAO7C,YAAY,CAAC+B,KAAK,EAAE;UACzB,MAAM,EAAEiD,KAAK,CAAC3C,IAAI;UAClB,OAAO,EAAEtB,GAAG,CAAC,OAAO,CAAC;UACrB,OAAO,EAAEiE,KAAK,CAACrC,KAAK;UACpB,UAAU,EAAEqC,KAAK,CAACjC,QAAQ;UAC1B,WAAW,EAAEiC,KAAK,CAAC7B,SAAS,IAAI6B,KAAK,CAACjB,YAAY;UAClD,UAAU,EAAEiB,KAAK,CAAChC,QAAQ;UAC1B,iBAAiB,EAAEgC,KAAK,CAAChB,eAAe;UACxC,qBAAqB,EAAEgB,KAAK,CAACb,mBAAmB;UAChD,eAAe,EAAEkG;QACnB,CAAC,EAAE;UACD9F,OAAO,EAAEuG;QACX,CAAC,CAAC;MACJ;MACA,OAAOA,cAAc,CAAC,CAAC;IACzB,CAAC;EACH;AACF,CAAC,CAAC;AACF,SACE/F,aAAa,IAAIR,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}