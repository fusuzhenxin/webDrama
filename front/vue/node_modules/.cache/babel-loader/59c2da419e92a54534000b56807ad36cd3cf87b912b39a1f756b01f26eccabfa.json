{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"drama-sections\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text item\"\n}, [/*#__PURE__*/_createCommentVNode(\" 调整播放按钮样式 \"), /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-caret-right play-button\"\n})], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_divider, null, {\n    default: _withCtx(() => [_createTextVNode(\"重生\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.shortDramas, (drama, index) => {\n      return _openBlock(), _createBlock(_component_el_col, {\n        span: 4,\n        key: index\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", {\n          class: \"card-content\",\n          onClick: $event => $setup.goToDramaDetail(drama.id, drama.name)\n        }, [_createElementVNode(\"img\", {\n          src: drama.cover,\n          alt: drama.name,\n          class: \"drama-image\"\n        }, null, 8 /* PROPS */, _hoisted_3), _hoisted_4], 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", null, _toDisplayString(drama.name), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_createVNode","_component_el_divider","default","_withCtx","_createTextVNode","_","_component_el_row","gutter","_Fragment","_renderList","$setup","shortDramas","drama","index","_createBlock","_component_el_col","span","key","onClick","$event","goToDramaDetail","id","name","src","cover","alt","_hoisted_3","_hoisted_4","_hoisted_2","_toDisplayString"],"sources":["F:\\video\\vue\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"drama-sections\">\n    <el-divider>重生</el-divider>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"4\" v-for=\"(drama, index) in shortDramas\" :key=\"index\">\n     \n          <div class=\"card-content\"  @click=\"goToDramaDetail(drama.id, drama.name)\">\n            <img :src=\"drama.cover\" :alt=\"drama.name\" class=\"drama-image\">\n            <div class=\"text item\">\n              <!-- 调整播放按钮样式 -->\n              <i class=\"el-icon-caret-right play-button\"></i>\n            </div>\n          </div>\n          <span>{{ drama.name }}</span>\n    \n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRouter } from 'vue-router';\nimport '@fortawesome/fontawesome-free/css/all.css'; // 在 JavaScript 文件中引入\n\n// Reactive data for short dramas\nconst shortDramas = ref([]);\n\n// Method to fetch short drama data asynchronously\nconst loadShortDramas = async (classify) => {\n  try {\n    // Fetch short drama data\n    const res = await request.get('/details/selectTop10', { params: { classify: classify } });\n    // If successful, update the short drama data\n    shortDramas.value = res.data.data;\n    console.log(\"====\",shortDramas.value)\n  } catch (error) {\n    // Catch and handle errors\n    console.error('Error loading short dramas:', error);\n  }\n};\nloadShortDramas(\"重生\");\n\n// Router instance\nconst router = useRouter();\n\n// Method to navigate to drama detail page\nconst goToDramaDetail = (dramaId, name) => {\n  // Navigate to the detail page and pass drama ID as route parameter\n  router.push({ name: 'videoDetail', params: { id: dramaId , name: name} });\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.drama-sections {\n  padding: 0px;\n}\n\n.card-content {\n  position: relative;\n}\n\n.drama-image {\n  width: 190px;\n  height: 266px;\n  object-fit: cover;\n}\n\n.play-button {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 36px;\n  color: white;\n  opacity: 0.8;\n  z-index: 1; /* 设置 z-index 值 */\n}\n\n.text {\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  color: white;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;mBAD7B;mBAAA;gEAQYC,mBAAA,CAGM;EAHDD,KAAK,EAAC;AAAW,I,aACpBE,mBAAA,cAAiB,E,aACjBD,mBAAA,CAA+C;EAA5CD,KAAK,EAAC;AAAiC,G;;;;;uBATtDG,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJC,YAAA,CAA2BC,qBAAA;IAF/BC,OAAA,EAAAC,QAAA,CAEgB,MAAE,CAFlBC,gBAAA,CAEgB,IAAE,E;IAFlBC,CAAA;MAGIL,YAAA,CAaSM,iBAAA;IAbAC,MAAM,EAAE;EAAE;IAHvBL,OAAA,EAAAC,QAAA,CAIwB,MAAqC,E,kBAAvDL,mBAAA,CAWSU,SAAA,QAffC,WAAA,CAIiDC,MAAA,CAAAC,WAAW,EAJ5D,CAIgCC,KAAK,EAAEC,KAAK;2BAAtCC,YAAA,CAWSC,iBAAA;QAXAC,IAAI,EAAE,CAAC;QAAyCC,GAAG,EAAEJ;;QAJpEX,OAAA,EAAAC,QAAA,CAMU,MAMM,CANNP,mBAAA,CAMM;UANDD,KAAK,EAAC,cAAc;UAAGuB,OAAK,EAAAC,MAAA,IAAET,MAAA,CAAAU,eAAe,CAACR,KAAK,CAACS,EAAE,EAAET,KAAK,CAACU,IAAI;YACrE1B,mBAAA,CAA8D;UAAxD2B,GAAG,EAAEX,KAAK,CAACY,KAAK;UAAGC,GAAG,EAAEb,KAAK,CAACU,IAAI;UAAE3B,KAAK,EAAC;gCAP5D+B,UAAA,GAQYC,UAGM,C,iBAXlBC,UAAA,GAaUhC,mBAAA,CAA6B,cAAAiC,gBAAA,CAApBjB,KAAK,CAACU,IAAI,iB;QAb7BjB,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}