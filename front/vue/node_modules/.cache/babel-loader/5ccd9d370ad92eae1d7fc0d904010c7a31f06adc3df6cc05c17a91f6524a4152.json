{"ast":null,"code":"import Navigation from \"@/views/navigation.vue\";\nimport { ref, onMounted } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute } from 'vue-router';\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const videoData = ref('');\n    const route = useRoute();\n    const videoName = route.params.name;\n    console.log(\"=====\", videoName);\n\n    //第一集url和短剧的信息\n    const loadVideoData = async () => {\n      try {\n        const res = await request.get('/file/Inception', {\n          params: {\n            name: videoName\n          }\n        });\n        // const res = await request.get(`/file/${videoId}`);\n        videoData.value = res.data.data;\n        console.log(\"[[[\", videoData.value);\n      } catch (error) {\n        console.error('Error loading video data:', error);\n      }\n    };\n    if (videoPlayer.value) {\n      videoPlayer.value.src = url;\n      videoPlayer.value.load();\n      videoPlayer.value.play();\n    }\n    onMounted(() => {\n      loadVideoData();\n    });\n    const __returned__ = {\n      videoData,\n      route,\n      videoName,\n      loadVideoData,\n      Navigation,\n      ref,\n      onMounted,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Navigation","ref","onMounted","request","useRoute","videoData","route","videoName","params","name","console","log","loadVideoData","res","get","value","data","error","videoPlayer","src","url","load","play"],"sources":["F:/video/vue/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\" style=\"min-height: 100%; padding-bottom: 100px;\">\r\n      <el-container>\r\n        <el-header>\r\n           <navigation/>\r\n        </el-header>\r\n        <el-container>\r\n          <el-aside width=\"1000px\">\r\n            <div class=\"video-wrapper\">\r\n              <div class=\"video-container\">\r\n                <video ref=\"videoPlayer\" controls class=\"custom-video\" >\r\n                  <source :src=\"videoData.url\" type=\"video/mp4\">\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              </div>\r\n            </div>\r\n          </el-aside>\r\n          <el-container>\r\n            <el-main width=\"382px\">\r\n                <el-text><h1 style=\"color: black\">我思念的她</h1></el-text>\r\n                <el-text><p style=\"color: black\">主演：李承</p></el-text>\r\n            </el-main>\r\n            <el-footer>Footer</el-footer>\r\n          </el-container>\r\n        </el-container>\r\n      </el-container>\r\n    </div>\r\n  </template>\r\n\r\n  <script setup>\r\nimport Navigation from \"@/views/navigation.vue\";\r\nimport { ref, onMounted } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst videoData=ref('')\r\nconst route = useRoute();\r\nconst videoName = route.params.name;\r\nconsole.log(\"=====\",videoName);\r\n\r\n //第一集url和短剧的信息\r\n const loadVideoData = async () => {\r\n    try {\r\n      const res = await request.get('/file/Inception',{params: {name: videoName} });\r\n      // const res = await request.get(`/file/${videoId}`);\r\n      videoData.value = res.data.data;\r\n      console.log(\"[[[\",videoData.value)\r\n    } catch (error) {\r\n      console.error('Error loading video data:', error);\r\n    }\r\n  };\r\n\r\nif (videoPlayer.value) {\r\n  videoPlayer.value.src = url;\r\n  videoPlayer.value.load();\r\n  videoPlayer.value.play();\r\n}\r\n\r\n  onMounted(() => {\r\n    loadVideoData();\r\n  });\r\n  </script>\r\n\r\n  <style scoped>\r\n.video-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black; /* 添加按钮边框样式 */\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n  flex: 1;\r\n}\r\n\r\n.custom-video {\r\n  width: 1000px;\r\n  height: 800px;\r\n  background-color: white;\r\n  background-color: rgba(255, 255, 255, 0.6); /* 白色背景，透明度为 0.5 */\r\n}\r\n  </style>\r\n"],"mappings":"AA8BA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,SAASC,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,SAASC,QAAQ,QAAQ,YAAY;;;;;;;IAErC,MAAMC,SAAS,GAACJ,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMK,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,IAAI;IACnCC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,SAAS,CAAC;;IAE7B;IACA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,OAAO,CAACW,GAAG,CAAC,iBAAiB,EAAC;UAACN,MAAM,EAAE;YAACC,IAAI,EAAEF;UAAS;QAAE,CAAC,CAAC;QAC7E;QACAF,SAAS,CAACU,KAAK,GAAGF,GAAG,CAACG,IAAI,CAACA,IAAI;QAC/BN,OAAO,CAACC,GAAG,CAAC,KAAK,EAACN,SAAS,CAACU,KAAK,CAAC;MACpC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEH,IAAIC,WAAW,CAACH,KAAK,EAAE;MACrBG,WAAW,CAACH,KAAK,CAACI,GAAG,GAAGC,GAAG;MAC3BF,WAAW,CAACH,KAAK,CAACM,IAAI,CAAC,CAAC;MACxBH,WAAW,CAACH,KAAK,CAACO,IAAI,CAAC,CAAC;IAC1B;IAEEpB,SAAS,CAAC,MAAM;MACdU,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}