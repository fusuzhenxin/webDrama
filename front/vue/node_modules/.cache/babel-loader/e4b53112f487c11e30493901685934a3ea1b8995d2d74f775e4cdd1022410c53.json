{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, getSizeStyle, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"skeleton\");\nconst DEFAULT_ROW_WIDTH = \"100%\";\nconst DEFAULT_LAST_ROW_WIDTH = \"60%\";\nconst skeletonProps = {\n  row: makeNumericProp(0),\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  loading: truthProp,\n  animate: truthProp,\n  avatarSize: numericProp,\n  titleWidth: numericProp,\n  avatarShape: makeStringProp(\"round\"),\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: skeletonProps,\n  setup(props, {\n    slots\n  }) {\n    const renderAvatar = () => {\n      if (props.avatar) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"avatar\", props.avatarShape),\n          \"style\": getSizeStyle(props.avatarSize)\n        }, null);\n      }\n    };\n    const renderTitle = () => {\n      if (props.title) {\n        return _createVNode(\"h3\", {\n          \"class\": bem(\"title\"),\n          \"style\": {\n            width: addUnit(props.titleWidth)\n          }\n        }, null);\n      }\n    };\n    const getRowWidth = index => {\n      const {\n        rowWidth\n      } = props;\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n      return rowWidth;\n    };\n    const renderRows = () => Array(+props.row).fill(\"\").map((_, i) => _createVNode(\"div\", {\n      \"class\": bem(\"row\"),\n      \"style\": {\n        width: addUnit(getRowWidth(i))\n      }\n    }, null));\n    return () => {\n      var _a;\n      if (!props.loading) {\n        return (_a = slots.default) == null ? void 0 : _a.call(slots);\n      }\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          animate: props.animate,\n          round: props.round\n        })\n      }, [renderAvatar(), _createVNode(\"div\", {\n        \"class\": bem(\"content\")\n      }, [renderTitle(), renderRows()])]);\n    };\n  }\n});\nexport { stdin_default as default };","map":{"version":3,"names":["createVNode","_createVNode","defineComponent","addUnit","truthProp","numericProp","getSizeStyle","makeStringProp","makeNumericProp","createNamespace","name","bem","DEFAULT_ROW_WIDTH","DEFAULT_LAST_ROW_WIDTH","skeletonProps","row","title","Boolean","round","avatar","loading","animate","avatarSize","titleWidth","avatarShape","rowWidth","type","Number","String","Array","default","stdin_default","props","setup","slots","renderAvatar","renderTitle","width","getRowWidth","index","isArray","renderRows","fill","map","_","i","_a","call"],"sources":["F:/video/vue/node_modules/vant/es/skeleton/Skeleton.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from \"vue\";\nimport { addUnit, truthProp, numericProp, getSizeStyle, makeStringProp, makeNumericProp, createNamespace } from \"../utils\";\nconst [name, bem] = createNamespace(\"skeleton\");\nconst DEFAULT_ROW_WIDTH = \"100%\";\nconst DEFAULT_LAST_ROW_WIDTH = \"60%\";\nconst skeletonProps = {\n  row: makeNumericProp(0),\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  loading: truthProp,\n  animate: truthProp,\n  avatarSize: numericProp,\n  titleWidth: numericProp,\n  avatarShape: makeStringProp(\"round\"),\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nvar stdin_default = defineComponent({\n  name,\n  props: skeletonProps,\n  setup(props, {\n    slots\n  }) {\n    const renderAvatar = () => {\n      if (props.avatar) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"avatar\", props.avatarShape),\n          \"style\": getSizeStyle(props.avatarSize)\n        }, null);\n      }\n    };\n    const renderTitle = () => {\n      if (props.title) {\n        return _createVNode(\"h3\", {\n          \"class\": bem(\"title\"),\n          \"style\": {\n            width: addUnit(props.titleWidth)\n          }\n        }, null);\n      }\n    };\n    const getRowWidth = (index) => {\n      const {\n        rowWidth\n      } = props;\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n      return rowWidth;\n    };\n    const renderRows = () => Array(+props.row).fill(\"\").map((_, i) => _createVNode(\"div\", {\n      \"class\": bem(\"row\"),\n      \"style\": {\n        width: addUnit(getRowWidth(i))\n      }\n    }, null));\n    return () => {\n      var _a;\n      if (!props.loading) {\n        return (_a = slots.default) == null ? void 0 : _a.call(slots);\n      }\n      return _createVNode(\"div\", {\n        \"class\": bem({\n          animate: props.animate,\n          round: props.round\n        })\n      }, [renderAvatar(), _createVNode(\"div\", {\n        \"class\": bem(\"content\")\n      }, [renderTitle(), renderRows()])]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"],"mappings":"AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,eAAe,QAAQ,KAAK;AACrC,SAASC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,cAAc,EAAEC,eAAe,EAAEC,eAAe,QAAQ,UAAU;AAC1H,MAAM,CAACC,IAAI,EAAEC,GAAG,CAAC,GAAGF,eAAe,CAAC,UAAU,CAAC;AAC/C,MAAMG,iBAAiB,GAAG,MAAM;AAChC,MAAMC,sBAAsB,GAAG,KAAK;AACpC,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAEP,eAAe,CAAC,CAAC,CAAC;EACvBQ,KAAK,EAAEC,OAAO;EACdC,KAAK,EAAED,OAAO;EACdE,MAAM,EAAEF,OAAO;EACfG,OAAO,EAAEhB,SAAS;EAClBiB,OAAO,EAAEjB,SAAS;EAClBkB,UAAU,EAAEjB,WAAW;EACvBkB,UAAU,EAAElB,WAAW;EACvBmB,WAAW,EAAEjB,cAAc,CAAC,OAAO,CAAC;EACpCkB,QAAQ,EAAE;IACRC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,CAAC;IAC7BC,OAAO,EAAElB;EACX;AACF,CAAC;AACD,IAAImB,aAAa,GAAG7B,eAAe,CAAC;EAClCQ,IAAI;EACJsB,KAAK,EAAElB,aAAa;EACpBmB,KAAKA,CAACD,KAAK,EAAE;IACXE;EACF,CAAC,EAAE;IACD,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIH,KAAK,CAACb,MAAM,EAAE;QAChB,OAAOlB,YAAY,CAAC,KAAK,EAAE;UACzB,OAAO,EAAEU,GAAG,CAAC,QAAQ,EAAEqB,KAAK,CAACR,WAAW,CAAC;UACzC,OAAO,EAAElB,YAAY,CAAC0B,KAAK,CAACV,UAAU;QACxC,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACD,MAAMc,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAIJ,KAAK,CAAChB,KAAK,EAAE;QACf,OAAOf,YAAY,CAAC,IAAI,EAAE;UACxB,OAAO,EAAEU,GAAG,CAAC,OAAO,CAAC;UACrB,OAAO,EAAE;YACP0B,KAAK,EAAElC,OAAO,CAAC6B,KAAK,CAACT,UAAU;UACjC;QACF,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC;IACD,MAAMe,WAAW,GAAIC,KAAK,IAAK;MAC7B,MAAM;QACJd;MACF,CAAC,GAAGO,KAAK;MACT,IAAIP,QAAQ,KAAKb,iBAAiB,IAAI2B,KAAK,KAAK,CAACP,KAAK,CAACjB,GAAG,GAAG,CAAC,EAAE;QAC9D,OAAOF,sBAAsB;MAC/B;MACA,IAAIgB,KAAK,CAACW,OAAO,CAACf,QAAQ,CAAC,EAAE;QAC3B,OAAOA,QAAQ,CAACc,KAAK,CAAC;MACxB;MACA,OAAOd,QAAQ;IACjB,CAAC;IACD,MAAMgB,UAAU,GAAGA,CAAA,KAAMZ,KAAK,CAAC,CAACG,KAAK,CAACjB,GAAG,CAAC,CAAC2B,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK5C,YAAY,CAAC,KAAK,EAAE;MACpF,OAAO,EAAEU,GAAG,CAAC,KAAK,CAAC;MACnB,OAAO,EAAE;QACP0B,KAAK,EAAElC,OAAO,CAACmC,WAAW,CAACO,CAAC,CAAC;MAC/B;IACF,CAAC,EAAE,IAAI,CAAC,CAAC;IACT,OAAO,MAAM;MACX,IAAIC,EAAE;MACN,IAAI,CAACd,KAAK,CAACZ,OAAO,EAAE;QAClB,OAAO,CAAC0B,EAAE,GAAGZ,KAAK,CAACJ,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGgB,EAAE,CAACC,IAAI,CAACb,KAAK,CAAC;MAC/D;MACA,OAAOjC,YAAY,CAAC,KAAK,EAAE;QACzB,OAAO,EAAEU,GAAG,CAAC;UACXU,OAAO,EAAEW,KAAK,CAACX,OAAO;UACtBH,KAAK,EAAEc,KAAK,CAACd;QACf,CAAC;MACH,CAAC,EAAE,CAACiB,YAAY,CAAC,CAAC,EAAElC,YAAY,CAAC,KAAK,EAAE;QACtC,OAAO,EAAEU,GAAG,CAAC,SAAS;MACxB,CAAC,EAAE,CAACyB,WAAW,CAAC,CAAC,EAAEK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;EACH;AACF,CAAC,CAAC;AACF,SACEV,aAAa,IAAID,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}