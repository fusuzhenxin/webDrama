{"ast":null,"code":"import Navigation from \"@/views/navigation.vue\";\nimport { ref, onMounted, computed } from 'vue';\nimport request from \"@/utils/request\";\nimport { useRoute, useRouter } from 'vue-router';\nconst episodesPerPage = 25;\nexport default {\n  __name: 'VideoDetail',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const videoData = ref('');\n    const route = useRoute();\n    const router = useRouter();\n\n    // 从 localStorage 中获取视频名称，如果没有则默认为空字符串\n    const videoName = ref('');\n    console.log(\"----\", videoName.value);\n    const videoPlayer = ref(null);\n    const numberOfEpisodes = ref(0);\n    const Descriptions = ref(null);\n    const currentPage = ref(1);\n    const isLiked = ref(false);\n    const isCollect = ref(false);\n    //第一集url和短剧的信息\n    const loadVideoData = async () => {\n      try {\n        const res = await request.get('/file/Inception', {\n          params: {\n            name: videoName.value\n          }\n        });\n        // const res = await request.get(`/file/${videoId}`);\n        videoData.value = res.data.data;\n        console.log(\"[[[\", videoData.value);\n      } catch (error) {\n        console.error('Error loading video data:', error);\n      }\n    };\n    const loadDescription = async () => {\n      try {\n        const res = await request.get('/details/finAll', {\n          params: {\n            name: videoName.value\n          }\n        });\n        Descriptions.value = res.data.data;\n        console.log(\"res.data.data----------\", res.data.data);\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n\n    //获取这个剧有多少集\n    const loadNumberOfEpisodes = async () => {\n      try {\n        const res = await request.get('/videos/diversity', {\n          params: {\n            name: videoName.value\n          }\n        });\n        numberOfEpisodes.value = res.data.data;\n      } catch (error) {\n        console.error('Error loading number of episodes:', error);\n      }\n    };\n    const displayedEpisodes = computed(() => {\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\n      return Array.from({\n        length: endIndex - startIndex\n      }, (_, index) => startIndex + index + 1);\n    });\n    const totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\n    const loadEpisode = async episodeNumber => {\n      console.log(\"?????????\", episodeNumber);\n      const startIndex = (currentPage.value - 1) * episodesPerPage;\n      const actualEpisodeNumber = startIndex + episodeNumber;\n      try {\n        const res = await request.get(`/videos/${videoName.value}/episode/${actualEpisodeNumber}`);\n        const url = res.data.data;\n        if (videoPlayer.value) {\n          videoPlayer.value.src = url;\n          videoPlayer.value.load();\n          videoPlayer.value.play();\n        }\n      } catch (error) {\n        console.error('Error loading episode:', error);\n      }\n    };\n    const setCurrentPage = page => {\n      currentPage.value = page;\n    };\n\n    //点赞数量\n    const Likes = async () => {\n      if (!isLiked.value) {\n        // 如果当前未点赞，则进行点赞操作\n        // 发送点赞请求...\n        // 更新点赞数量...\n        const res = await request.get('/details/likes', {\n          params: {\n            name: videoName.value\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = true;\n      } else {\n        // 如果当前已经点赞，则取消点赞操作\n        // 发送取消点赞请求...\n        // 更新点赞数量...\n        const res = await request.get('/details/likesDelete', {\n          params: {\n            name: videoName.value\n          }\n        });\n        Descriptions.value.quantity = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isLiked.value = false;\n      }\n    };\n\n    //收藏数量\n    const Collect = async () => {\n      if (!isCollect.value) {\n        const res = await request.get('/details/collect', {\n          params: {\n            name: videoName.value\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        console.log(\"-------\", res.data.data);\n        isCollect.value = true;\n      } else {\n        const res = await request.get('/details/collectDelete', {\n          params: {\n            name: videoName.value\n          }\n        });\n        Descriptions.value.collect = res.data.data;\n        isCollect.value = false;\n      }\n    };\n    // 在路由变化时获取视频名称并存储到 localStorage 中\n    router.afterEach(() => {\n      videoName.value = route.params.name;\n      localStorage.setItem('videoName', videoName.value);\n    });\n    onMounted(() => {\n      if (videoName.value) {\n        loadVideoData();\n        loadDescription();\n        loadNumberOfEpisodes();\n      }\n    });\n    const __returned__ = {\n      videoData,\n      route,\n      router,\n      videoName,\n      videoPlayer,\n      numberOfEpisodes,\n      Descriptions,\n      episodesPerPage,\n      currentPage,\n      isLiked,\n      isCollect,\n      loadVideoData,\n      loadDescription,\n      loadNumberOfEpisodes,\n      displayedEpisodes,\n      totalPages,\n      loadEpisode,\n      setCurrentPage,\n      Likes,\n      Collect,\n      Navigation,\n      ref,\n      onMounted,\n      computed,\n      get request() {\n        return request;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["Navigation","ref","onMounted","computed","request","useRoute","useRouter","episodesPerPage","videoData","route","router","videoName","console","log","value","videoPlayer","numberOfEpisodes","Descriptions","currentPage","isLiked","isCollect","loadVideoData","res","get","params","name","data","error","loadDescription","loadNumberOfEpisodes","displayedEpisodes","startIndex","endIndex","Math","min","Array","from","length","_","index","totalPages","ceil","loadEpisode","episodeNumber","actualEpisodeNumber","url","src","load","play","setCurrentPage","page","Likes","quantity","Collect","collect","afterEach","localStorage","setItem"],"sources":["F:/video/vue/src/views/VideoDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\" v-if=\"videoData\" style=\"min-height: 100%; padding-bottom: 100px;background-color: black;\">\r\n      <el-container>\r\n        <el-header>\r\n          <div class=\"nav-list\">\r\n            <navigation/>\r\n          </div>\r\n\r\n        </el-header>\r\n        <el-container>\r\n          <el-aside width=\"1000px\">\r\n            <div class=\"video-wrapper\">\r\n              <div class=\"video-container\">\r\n                <video ref=\"videoPlayer\" controls class=\"custom-video\" >\r\n                  <source :src=\"videoData.url\" type=\"video/mp4\">\r\n                  Your browser does not support the video tag.\r\n                </video>\r\n              </div>\r\n            </div>\r\n          </el-aside>\r\n          <el-container>\r\n            <el-main width=\"382px\">\r\n                <el-text><h1 style=\"color: white;font-size: 25px;margin-top: -5px;\">{{ Descriptions && Descriptions.name }}</h1></el-text>\r\n                <el-text><h1 style=\"color: white;margin-bottom: 25px;font-size: 17px\">主演：{{ Descriptions && Descriptions.actors }}</h1></el-text>\r\n              <el-button>{{Descriptions && Descriptions.classify}}</el-button>\r\n              <el-button>民国</el-button>\r\n              <p style=\"color: darkgray\">{{Descriptions && Descriptions.description}}</p>\r\n\r\n              <div class=\"like-favorite-container\">\r\n                  <div class=\"like-container\">\r\n                      <el-button class=\"like-button\" @click=\"Likes\">{{ isLiked ? '取消点赞' : '点赞' }}</el-button>\r\n                      <span class=\"like-count\">{{Descriptions && Descriptions.quantity}}</span>\r\n              </div>\r\n              <div class=\"favorite-container\">\r\n                  <el-button class=\"favorite-button\" @click=\"Collect()\">{{ isCollect ? '取消收藏' : '收藏' }}</el-button>\r\n                  <span class=\"favorite-count\">{{Descriptions && Descriptions.collect}}</span>\r\n              </div>\r\n              </div>\r\n              <div style=\"display: flex; justify-content: space-between;\">\r\n                    <el-text> <h2 style=\"color: white\">选集</h2></el-text>\r\n                      <el-text><h4 style=\"color: #8a8b8d;margin-right: 260px;margin-top: 30px\">共{{numberOfEpisodes}}集</h4></el-text>\r\n              </div>\r\n\r\n              <div class=\"button-bottom-half\">  <!-- 上半部分 -->\r\n                <div class=\"button-inner-container\">\r\n                  <el-button v-for=\"(episode, index) in displayedEpisodes\" :key=\"index\" @click=\"loadEpisode(index+1)\" class=\"episode-button\">\r\n                    {{ episode }}\r\n                  </el-button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"pagination-top-half\"> <!-- 下半部分 -->\r\n                <!-- 这里放其他内容 -->\r\n                <div class=\"pagination\">\r\n                  <el-button v-for=\"page in totalPages\" :key=\"page\" @click=\"setCurrentPage(page)\" :class=\"{ active: page === currentPage }\">{{ page }}</el-button>\r\n                </div>\r\n              </div>\r\n            </el-main>\r\n            <el-footer>\r\n\r\n            </el-footer>\r\n          </el-container>\r\n        </el-container>\r\n      </el-container>\r\n    </div>\r\n  </template>\r\n\r\n  <script setup>\r\nimport Navigation from \"@/views/navigation.vue\";\r\nimport { ref, onMounted,computed } from 'vue';\r\nimport request from \"@/utils/request\";\r\nimport { useRoute,useRouter } from 'vue-router';\r\n\r\nconst videoData = ref('');\r\nconst route = useRoute();\r\nconst router=useRouter();\r\n\r\n// 从 localStorage 中获取视频名称，如果没有则默认为空字符串\r\nconst videoName = ref('');\r\n\r\nconsole.log(\"----\",videoName.value)\r\nconst videoPlayer = ref(null);\r\nconst numberOfEpisodes = ref(0);\r\nconst  Descriptions= ref(null)\r\nconst episodesPerPage = 25;\r\nconst currentPage = ref(1);\r\nconst isLiked = ref(false);\r\nconst isCollect=ref(false);\r\n //第一集url和短剧的信息\r\n const loadVideoData = async () => {\r\n    try {\r\n      const res = await request.get('/file/Inception',{params: {name: videoName.value} });\r\n      // const res = await request.get(`/file/${videoId}`);\r\n      videoData.value = res.data.data;\r\n      console.log(\"[[[\",videoData.value)\r\n    } catch (error) {\r\n      console.error('Error loading video data:', error);\r\n    }\r\n  };\r\n  const loadDescription =async () => {\r\n  try {\r\n    const res=await request.get('/details/finAll', {params: {name: videoName.value} })\r\n    Descriptions.value=res.data.data\r\n    console.log(\"res.data.data----------\",res.data.data)\r\n  }catch (error){\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n}\r\n\r\n//获取这个剧有多少集\r\nconst loadNumberOfEpisodes = async () => {\r\n  try {\r\n    const res = await request.get('/videos/diversity', { params: { name: videoName.value } });\r\n    numberOfEpisodes.value = res.data.data;\r\n  } catch (error) {\r\n    console.error('Error loading number of episodes:', error);\r\n  }\r\n};\r\n\r\nconst displayedEpisodes = computed(() => {\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const endIndex = Math.min(startIndex + episodesPerPage, numberOfEpisodes.value);\r\n  return Array.from({ length: endIndex - startIndex }, (_, index) => startIndex + index + 1);\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(numberOfEpisodes.value / episodesPerPage));\r\n\r\nconst loadEpisode = async (episodeNumber) => {\r\n  console.log(\"?????????\", episodeNumber);\r\n  const startIndex = (currentPage.value - 1) * episodesPerPage;\r\n  const actualEpisodeNumber = startIndex + episodeNumber;\r\n  try {\r\n    const res = await request.get(`/videos/${videoName.value}/episode/${actualEpisodeNumber}`);\r\n    const url = res.data.data;\r\n    if (videoPlayer.value) {\r\n      videoPlayer.value.src = url;\r\n      videoPlayer.value.load();\r\n      videoPlayer.value.play();\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading episode:', error);\r\n  }\r\n};\r\n\r\nconst setCurrentPage = (page) => {\r\n  currentPage.value = page;\r\n};\r\n\r\n\r\n//点赞数量\r\nconst Likes = async () => {\r\n  if (!isLiked.value) {\r\n    // 如果当前未点赞，则进行点赞操作\r\n    // 发送点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likes',{params: { name: videoName.value}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = true;\r\n  } else {\r\n    // 如果当前已经点赞，则取消点赞操作\r\n    // 发送取消点赞请求...\r\n    // 更新点赞数量...\r\n    const res = await request.get('/details/likesDelete',{params: { name: videoName.value}});\r\n    Descriptions.value.quantity=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isLiked.value = false;\r\n  }\r\n\r\n};\r\n\r\n//收藏数量\r\nconst Collect = async () => {\r\n  if (!isCollect.value){\r\n    const res = await request.get('/details/collect',{params: { name: videoName.value}});\r\n    Descriptions.value.collect=res.data.data\r\n    console.log(\"-------\", res.data.data)\r\n    isCollect.value=true\r\n  }else {\r\n    const res = await request.get('/details/collectDelete',{params: { name: videoName.value}});\r\n    Descriptions.value.collect=res.data.data\r\n    isCollect.value=false\r\n  }\r\n\r\n};\r\n// 在路由变化时获取视频名称并存储到 localStorage 中\r\nrouter.afterEach(() => {\r\n  videoName.value = route.params.name;\r\n  localStorage.setItem('videoName', videoName.value);\r\n});\r\n  onMounted(() => {\r\n   if (videoName.value){\r\n     loadVideoData();\r\n     loadDescription();\r\n     loadNumberOfEpisodes();\r\n\r\n   }\r\n\r\n  });\r\n\r\n\r\n  </script>\r\n\r\n  <style scoped>\r\n  .nav-list {\r\n    position: fixed;\r\n    top: -0px;\r\n    left: 0px;\r\n    width: 100%;\r\n    height: 30px;\r\n    list-style: none;\r\n    background-color: black;\r\n    z-index: 1000;\r\n  }\r\n.video-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid black; /* 添加按钮边框样式 */\r\n}\r\n\r\n.video-container {\r\n  position: relative;\r\n  flex: 1;\r\n}\r\n\r\n.custom-video {\r\n  width: 1000px;\r\n  height: 800px;\r\n  background-color: white;\r\n  background-color: rgba(255, 255, 255, 0.6); /* 白色背景，透明度为 0.5 */\r\n}\r\n.like-favorite-container {\r\n  border: 1px solid darkgray;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.like-container, .favorite-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.like-button, .favorite-button {\r\n  padding: 5px 10px;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.like-count, .favorite-count {\r\n  margin-left: 5px;\r\n  color: white;\r\n}\r\n\r\n.like-button:hover, .favorite-button:hover {\r\n  background-color: darkgray;\r\n  color: white;\r\n}\r\n.button-bottom-half {\r\n  flex: 1;\r\n}\r\n.button-inner-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  width: calc(100% - 20px); /* 设置按钮宽度为容器宽度的 20%，减去间距 */\r\n}\r\n.button-inner-container button {\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #333333;\r\n  border: none;\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n}\r\n.episode-button {\r\n\r\n  height: 50px;\r\n  background-color: #333333;\r\n\r\n  color: white;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  padding: 20px; /* 增加按钮内边距 */\r\n  line-height: 1; /* 让文本垂直居中 */\r\n  margin-left: 5px;\r\n  border-radius: 2px;\r\n}\r\n.pagination-top-half {\r\n  flex: 1;\r\n}\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.pagination button {\r\n  margin-right: 5px;\r\n  background-color: #333;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination button.active {\r\n  background-color: #555;\r\n}\r\n\r\n  </style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}